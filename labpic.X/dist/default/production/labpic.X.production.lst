

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Sep 25 14:30:11 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	smallconst
    86  000800                     __psmallconst:
    87                           	callstack 0
    88  000800  00                 	db	0
    89  000801                     __powers_:
    90                           	callstack 0
    91  000801  0000               	dw	0
    92  000803  3F80               	dw	16256
    93  000805  0000               	dw	0
    94  000807  4120               	dw	16672
    95  000809  0000               	dw	0
    96  00080B  42C8               	dw	17096
    97  00080D  0000               	dw	0
    98  00080F  447A               	dw	17530
    99  000811  4000               	dw	16384
   100  000813  461C               	dw	17948
   101  000815  5000               	dw	20480
   102  000817  47C3               	dw	18371
   103  000819  2400               	dw	9216
   104  00081B  4974               	dw	18804
   105  00081D  9680               	dw	38528
   106  00081F  4B18               	dw	19224
   107  000821  BC20               	dw	48160
   108  000823  4CBE               	dw	19646
   109  000825  6B28               	dw	27432
   110  000827  4E6E               	dw	20078
   111  000829  02F9               	dw	761
   112  00082B  5015               	dw	20501
   113  00082D  78EC               	dw	30956
   114  00082F  60AD               	dw	24749
   115  000831  F2CA               	dw	62154
   116  000833  7149               	dw	29001
   117  000835                     __end_of__powers_:
   118                           	callstack 0
   119  000835                     __npowers_:
   120                           	callstack 0
   121  000835  0000               	dw	0
   122  000837  3F80               	dw	16256
   123  000839  CCCD               	dw	52429
   124  00083B  3DCC               	dw	15820
   125  00083D  D70A               	dw	55050
   126  00083F  3C23               	dw	15395
   127  000841  126F               	dw	4719
   128  000843  3A83               	dw	14979
   129  000845  B717               	dw	46871
   130  000847  38D1               	dw	14545
   131  000849  C5AC               	dw	50604
   132  00084B  3727               	dw	14119
   133  00084D  37BD               	dw	14269
   134  00084F  3586               	dw	13702
   135  000851  BF95               	dw	49045
   136  000853  33D6               	dw	13270
   137  000855  CC77               	dw	52343
   138  000857  322B               	dw	12843
   139  000859  705F               	dw	28767
   140  00085B  3089               	dw	12425
   141  00085D  E6FF               	dw	59135
   142  00085F  2EDB               	dw	11995
   143  000861  E508               	dw	58632
   144  000863  1E3C               	dw	7740
   145  000865  4260               	dw	16992
   146  000867  0DA2               	dw	3490
   147  000869                     __end_of__npowers_:
   148                           	callstack 0
   149  000869                     _dpowers:
   150                           	callstack 0
   151  000869  0001               	dw	1
   152  00086B  0000               	dw	0
   153  00086D  000A               	dw	10
   154  00086F  0000               	dw	0
   155  000871  0064               	dw	100
   156  000873  0000               	dw	0
   157  000875  03E8               	dw	1000
   158  000877  0000               	dw	0
   159  000879  2710               	dw	10000
   160  00087B  0000               	dw	0
   161  00087D  86A0               	dw	34464
   162  00087F  0001               	dw	1
   163  000881  4240               	dw	16960
   164  000883  000F               	dw	15
   165  000885  9680               	dw	38528
   166  000887  0098               	dw	152
   167  000889  E100               	dw	57600
   168  00088B  05F5               	dw	1525
   169  00088D  CA00               	dw	51712
   170  00088F  3B9A               	dw	15258
   171  000891                     __end_of_dpowers:
   172                           	callstack 0
   173  0000                     _TMR0	set	4054
   174  0000                     _LATD	set	3980
   175  0000                     _LATBbits	set	3978
   176  0000                     _TRISD	set	3989
   177  0000                     _TRISCbits	set	3988
   178  0000                     _TRISBbits	set	3987
   179  0000                     _TRISAbits	set	3986
   180  0000                     _OSCCON	set	4051
   181  0000                     _TMR0H	set	4055
   182  0000                     _TMR0L	set	4054
   183  0000                     _TXREG	set	4013
   184  0000                     _SPBRG	set	4015
   185  0000                     _TXSTA	set	4012
   186  0000                     _RCSTA	set	4011
   187  0000                     _RCREG	set	4014
   188  0000                     _LATA3	set	31819
   189  0000                     _RB3	set	31755
   190  0000                     _TMR0ON	set	32431
   191  0000                     _TMR0IF	set	32658
   192  0000                     _PSA	set	32427
   193  0000                     _T0SE	set	32428
   194  0000                     _T0CS	set	32429
   195  0000                     _T08BIT	set	32430
   196  0000                     _TXIF	set	31988
   197  0000                     _RCIF	set	31989
   198  0000                     _TXIE	set	31980
   199  0000                     _RCIE	set	31981
   200  0000                     _PEIE	set	32662
   201  0000                     _GIE	set	32663
   202  000891                     STR_1:
   203  000891  55                 	db	85	;'U'
   204  000892  73                 	db	115	;'s'
   205  000893  6F                 	db	111	;'o'
   206  000894  20                 	db	32
   207  000895  64                 	db	100	;'d'
   208  000896  6F                 	db	111	;'o'
   209  000897  20                 	db	32
   210  000898  53                 	db	83	;'S'
   211  000899  65                 	db	101	;'e'
   212  00089A  6E                 	db	110	;'n'
   213  00089B  73                 	db	115	;'s'
   214  00089C  6F                 	db	111	;'o'
   215  00089D  72                 	db	114	;'r'
   216  00089E  20                 	db	32
   217  00089F  55                 	db	85	;'U'
   218  0008A0  6C                 	db	108	;'l'
   219  0008A1  74                 	db	116	;'t'
   220  0008A2  72                 	db	114	;'r'
   221  0008A3  61                 	db	97	;'a'
   222  0008A4  73                 	db	115	;'s'
   223  0008A5  73                 	db	115	;'s'
   224  0008A6  F4                 	db	-12
   225  0008A7  6E                 	db	110	;'n'
   226  0008A8  69                 	db	105	;'i'
   227  0008A9  63                 	db	99	;'c'
   228  0008AA  6F                 	db	111	;'o'
   229  0008AB  0A                 	db	10
   230  0008AC  0D                 	db	13
   231  0008AD  00                 	db	0
   232  0008AE                     STR_2:
   233  0008AE  0A                 	db	10
   234  0008AF  0D                 	db	13
   235  0008B0  44                 	db	68	;'D'
   236  0008B1  69                 	db	105	;'i'
   237  0008B2  73                 	db	115	;'s'
   238  0008B3  74                 	db	116	;'t'
   239  0008B4  61                 	db	97	;'a'
   240  0008B5  6E                 	db	110	;'n'
   241  0008B6  63                 	db	99	;'c'
   242  0008B7  69                 	db	105	;'i'
   243  0008B8  61                 	db	97	;'a'
   244  0008B9  3A                 	db	58	;':'
   245  0008BA  20                 	db	32
   246  0008BB  25                 	db	37
   247  0008BC  33                 	db	51	;'3'
   248  0008BD  2E                 	db	46
   249  0008BE  32                 	db	50	;'2'
   250  0008BF  66                 	db	102	;'f'
   251  0008C0  20                 	db	32
   252  0008C1  63                 	db	99	;'c'
   253  0008C2  6D                 	db	109	;'m'
   254  0008C3  00                 	db	0
   255  0008C4  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260  0033C4                     __pcinit:
   261                           	callstack 0
   262  0033C4                     start_initialization:
   263                           	callstack 0
   264  0033C4                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Clear objects allocated to BANK0 (67 bytes)
   268  0033C4  EE00  F060         	lfsr	0,__pbssBANK0
   269  0033C8  0E43               	movlw	67
   270  0033CA                     clear_0:
   271  0033CA  6AEE               	clrf	postinc0,c
   272  0033CC  06E8               	decf	wreg,f,c
   273  0033CE  E1FD               	bnz	clear_0
   274                           
   275                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   276  0033D0  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   277                           
   278                           ; Clear objects allocated to COMRAM (4 bytes)
   279  0033D2  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   280  0033D4  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   281  0033D6  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   282  0033D8  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   283  0033DA                     end_of_initialization:
   284                           	callstack 0
   285  0033DA                     __end_of__initialization:
   286                           	callstack 0
   287  0033DA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   288  0033DC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   289  0033DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   290  0033E0  6EF8               	movwf	tblptru,c
   291  0033E2  0100               	movlb	0
   292  0033E4  EFC3  F011         	goto	_main	;jump to C main() function
   293                           
   294                           	psect	bitbssCOMRAM
   295  0002F0                     __pbitbssCOMRAM:
   296                           	callstack 0
   297  0002F0                     _flag_interrupcao:
   298                           	callstack 0
   299  0002F0                     	ds	1
   300                           
   301                           	psect	bssCOMRAM
   302  00005A                     __pbssCOMRAM:
   303                           	callstack 0
   304  00005A                     _distancia:
   305                           	callstack 0
   306  00005A                     	ds	4
   307                           
   308                           	psect	bssBANK0
   309  000060                     __pbssBANK0:
   310                           	callstack 0
   311  000060                     _linha1:
   312                           	callstack 0
   313  000060                     	ds	32
   314  000080                     _caracter:
   315                           	callstack 0
   316  000080                     	ds	1
   317  000081                     _linha2:
   318                           	callstack 0
   319  000081                     	ds	32
   320  0000A1                     _tempo:
   321                           	callstack 0
   322  0000A1                     	ds	2
   323                           
   324                           	psect	cstackBANK0
   325  0000A3                     __pcstackBANK0:
   326                           	callstack 0
   327  0000A3                     _sprintf$983:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x0
   331  0000A3                     	ds	4
   332  0000A7                     sprintf@ap:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x4
   336  0000A7                     	ds	2
   337  0000A9                     sprintf@val:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x6
   341  0000A9                     	ds	4
   342  0000AD                     sprintf@flag:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0xA
   346  0000AD                     	ds	2
   347  0000AF                     sprintf@width:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xC
   351  0000AF                     	ds	2
   352  0000B1                     sprintf@tmpval:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0xE
   356  0000B1                     	ds	4
   357  0000B5                     sprintf@eexp:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x12
   361  0000B5                     	ds	2
   362  0000B7                     sprintf@fval:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x14
   366  0000B7                     	ds	4
   367  0000BB                     sprintf@prec:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x18
   371  0000BB                     	ds	2
   372  0000BD                     sprintf@c:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x1A
   376  0000BD                     	ds	1
   377                           
   378                           	psect	cstackCOMRAM
   379  000001                     __pcstackCOMRAM:
   380                           	callstack 0
   381  000001                     ??_isdigit:
   382  000001                     ??_envia_serial:
   383  000001                     ?_strlen:
   384                           	callstack 0
   385  000001                     ?___wmul:
   386                           	callstack 0
   387  000001                     ?___awmod:
   388                           	callstack 0
   389  000001                     ?___lwmod:
   390                           	callstack 0
   391  000001                     ?__tdiv_to_l_:
   392                           	callstack 0
   393  000001                     ?__div_to_l_:
   394                           	callstack 0
   395  000001                     ?___lldiv:
   396                           	callstack 0
   397  000001                     ?___aldiv:
   398                           	callstack 0
   399  000001                     ?___flneg:
   400                           	callstack 0
   401  000001                     ?___llmod:
   402                           	callstack 0
   403  000001                     ?___xxtofl:
   404                           	callstack 0
   405  000001                     ___wmul@multiplier:
   406                           	callstack 0
   407  000001                     ___awmod@dividend:
   408                           	callstack 0
   409  000001                     ___lwmod@dividend:
   410                           	callstack 0
   411  000001                     strlen@s:
   412                           	callstack 0
   413  000001                     ___lldiv@dividend:
   414                           	callstack 0
   415  000001                     ___aldiv@dividend:
   416                           	callstack 0
   417  000001                     __div_to_l_@f1:
   418                           	callstack 0
   419  000001                     ___fleq@ff1:
   420                           	callstack 0
   421  000001                     ___flge@ff1:
   422                           	callstack 0
   423  000001                     ___flneg@f1:
   424                           	callstack 0
   425  000001                     __tdiv_to_l_@f1:
   426                           	callstack 0
   427  000001                     ___llmod@dividend:
   428                           	callstack 0
   429  000001                     ___xxtofl@val:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x0
   433  000001                     	ds	1
   434  000002                     envia_serial@valor:
   435                           	callstack 0
   436  000002                     _isdigit$786:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x1
   440  000002                     	ds	1
   441  000003                     isdigit@c:
   442                           	callstack 0
   443  000003                     ___wmul@multiplicand:
   444                           	callstack 0
   445  000003                     ___awmod@divisor:
   446                           	callstack 0
   447  000003                     ___lwmod@divisor:
   448                           	callstack 0
   449  000003                     strlen@cp:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453  000003                     	ds	2
   454  000005                     ??___xxtofl:
   455  000005                     ___awmod@counter:
   456                           	callstack 0
   457  000005                     ___lwmod@counter:
   458                           	callstack 0
   459  000005                     envia_texto_serial@frase:
   460                           	callstack 0
   461  000005                     ___wmul@product:
   462                           	callstack 0
   463  000005                     ___lldiv@divisor:
   464                           	callstack 0
   465  000005                     ___aldiv@divisor:
   466                           	callstack 0
   467  000005                     __div_to_l_@f2:
   468                           	callstack 0
   469  000005                     ___fleq@ff2:
   470                           	callstack 0
   471  000005                     ___flge@ff2:
   472                           	callstack 0
   473  000005                     __tdiv_to_l_@f2:
   474                           	callstack 0
   475  000005                     ___llmod@divisor:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x4
   479  000005                     	ds	1
   480  000006                     ?___lwdiv:
   481                           	callstack 0
   482  000006                     ___awmod@sign:
   483                           	callstack 0
   484  000006                     ___lwdiv@dividend:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x5
   488  000006                     	ds	1
   489  000007                     ??_envia_texto_serial:
   490  000007                     ?___awdiv:
   491                           	callstack 0
   492  000007                     ___awdiv@dividend:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x6
   496  000007                     	ds	1
   497  000008                     ___lwdiv@divisor:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x7
   501  000008                     	ds	1
   502  000009                     ??__tdiv_to_l_:
   503  000009                     ??___fleq:
   504  000009                     ??___flge:
   505  000009                     envia_texto_serial@tamanho:
   506                           	callstack 0
   507  000009                     ___aldiv@counter:
   508                           	callstack 0
   509  000009                     ___llmod@counter:
   510                           	callstack 0
   511  000009                     ___xxtofl@sign:
   512                           	callstack 0
   513  000009                     ___awdiv@divisor:
   514                           	callstack 0
   515  000009                     ___lldiv@quotient:
   516                           	callstack 0
   517  000009                     __div_to_l_@quot:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x8
   521  000009                     	ds	1
   522  00000A                     envia_texto_serial@indice:
   523                           	callstack 0
   524  00000A                     ___aldiv@sign:
   525                           	callstack 0
   526  00000A                     ___xxtofl@exp:
   527                           	callstack 0
   528  00000A                     ___lwdiv@quotient:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x9
   532  00000A                     	ds	1
   533  00000B                     ___awdiv@counter:
   534                           	callstack 0
   535  00000B                     ___aldiv@quotient:
   536                           	callstack 0
   537  00000B                     ___xxtofl@arg:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0xA
   541  00000B                     	ds	1
   542  00000C                     ___awdiv@sign:
   543                           	callstack 0
   544  00000C                     ___lwdiv@counter:
   545                           	callstack 0
   546  00000C                     __tdiv_to_l_@quot:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0xB
   550  00000C                     	ds	1
   551  00000D                     ___lldiv@counter:
   552                           	callstack 0
   553  00000D                     __div_to_l_@cntr:
   554                           	callstack 0
   555  00000D                     ___awdiv@quotient:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0xC
   559  00000D                     	ds	1
   560  00000E                     __div_to_l_@exp1:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0xD
   564  00000E                     	ds	1
   565  00000F                     ?___flmul:
   566                           	callstack 0
   567  00000F                     SuperDelay@counter:
   568                           	callstack 0
   569  00000F                     ___flmul@b:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0xE
   573  00000F                     	ds	1
   574  000010                     __tdiv_to_l_@cntr:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0xF
   578  000010                     	ds	1
   579  000011                     __tdiv_to_l_@exp1:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x10
   583  000011                     	ds	2
   584  000013                     ??_SuperDelay:
   585  000013                     ___flmul@a:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x12
   589  000013                     	ds	1
   590  000014                     SuperDelay@i:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x13
   594  000014                     	ds	3
   595  000017                     ??___flmul:
   596                           
   597                           ; 1 bytes @ 0x16
   598  000017                     	ds	4
   599  00001B                     ___flmul@sign:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1A
   603  00001B                     	ds	1
   604  00001C                     ___flmul@grs:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x1B
   608  00001C                     	ds	4
   609  000020                     ___flmul@aexp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x1F
   613  000020                     	ds	1
   614  000021                     ___flmul@bexp:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x20
   618  000021                     	ds	1
   619  000022                     ___flmul@prod:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x21
   623  000022                     	ds	4
   624  000026                     ___flmul@temp:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x25
   628  000026                     	ds	2
   629  000028                     ?_fround:
   630                           	callstack 0
   631  000028                     ?_scale:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x27
   635  000028                     	ds	4
   636  00002C                     _fround$981:
   637                           	callstack 0
   638  00002C                     _scale$982:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x2B
   642  00002C                     	ds	4
   643  000030                     scale@scl:
   644                           	callstack 0
   645  000030                     _fround$980:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x2F
   649  000030                     	ds	1
   650  000031                     ?___fltol:
   651                           	callstack 0
   652  000031                     ___fltol@f1:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x30
   656  000031                     	ds	3
   657  000034                     fround@prec:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x33
   661  000034                     	ds	1
   662  000035                     ??___fltol:
   663  000035                     ?___fladd:
   664                           	callstack 0
   665  000035                     ___fladd@b:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x34
   669  000035                     	ds	4
   670  000039                     ___fltol@sign1:
   671                           	callstack 0
   672  000039                     ___fladd@a:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x38
   676  000039                     	ds	1
   677  00003A                     ___fltol@exp1:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x39
   681  00003A                     	ds	3
   682  00003D                     ??___fladd:
   683                           
   684                           ; 1 bytes @ 0x3C
   685  00003D                     	ds	4
   686  000041                     ___fladd@signs:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x40
   690  000041                     	ds	1
   691  000042                     ___fladd@aexp:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x41
   695  000042                     	ds	1
   696  000043                     ___fladd@bexp:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x42
   700  000043                     	ds	1
   701  000044                     ___fladd@grs:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x43
   705  000044                     	ds	1
   706  000045                     ?___flsub:
   707                           	callstack 0
   708  000045                     ___flsub@b:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x44
   712  000045                     	ds	4
   713  000049                     ___flsub@a:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x48
   717  000049                     	ds	4
   718  00004D                     ?_sprintf:
   719                           	callstack 0
   720  00004D                     sprintf@sp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x4C
   724  00004D                     	ds	2
   725  00004F                     sprintf@f:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x4E
   729  00004F                     	ds	6
   730  000055                     ??_sprintf:
   731                           
   732                           ; 1 bytes @ 0x54
   733  000055                     	ds	4
   734  000059                     ??_main:
   735                           
   736                           ; 1 bytes @ 0x58
   737  000059                     	ds	1
   738                           
   739 ;;
   740 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   741 ;;
   742 ;; *************** function _main *****************
   743 ;; Defined at:
   744 ;;		line 77 in file "main.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   758 ;;      Params:         0       0       0       0       0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0       0       0       0       0
   760 ;;      Temps:          1       0       0       0       0       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels required when called:    4
   764 ;; This function calls:
   765 ;;		_SuperDelay
   766 ;;		___flge
   767 ;;		___flmul
   768 ;;		___xxtofl
   769 ;;		_envia_texto_serial
   770 ;;		_inicializa_Serial
   771 ;;		_setupTmr0
   772 ;;		_setup_Int
   773 ;;		_sprintf
   774 ;; This function is called by:
   775 ;;		Startup code after reset
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text0
   780  002386                     __ptext0:
   781                           	callstack 0
   782  002386                     _main:
   783                           	callstack 27
   784  002386                     
   785                           ;main.c: 78: OSCCON = 0b01100000;
   786  002386  0E60               	movlw	96
   787  002388  6ED3               	movwf	211,c	;volatile
   788  00238A                     
   789                           ;main.c: 79: TRISAbits.RA3 = 0;
   790  00238A  9692               	bcf	146,3,c	;volatile
   791  00238C                     
   792                           ;main.c: 80: TRISBbits.RB3 = 1;
   793  00238C  8693               	bsf	147,3,c	;volatile
   794  00238E                     
   795                           ;main.c: 81: TRISBbits.RB4 = 0;
   796  00238E  9893               	bcf	147,4,c	;volatile
   797  002390                     
   798                           ;main.c: 82: TRISCbits.TRISC6 = 1;
   799  002390  8C94               	bsf	148,6,c	;volatile
   800  002392                     
   801                           ;main.c: 83: TRISCbits.TRISC7 = 1;
   802  002392  8E94               	bsf	148,7,c	;volatile
   803                           
   804                           ;main.c: 84: TRISD = 0;
   805  002394  0E00               	movlw	0
   806  002396  6E95               	movwf	149,c	;volatile
   807  002398                     
   808                           ;main.c: 86: setup_Int();
   809  002398  EC0D  F01A         	call	_setup_Int	;wreg free
   810                           
   811                           ;main.c: 87: inicializa_Serial();
   812  00239C  ECFF  F019         	call	_inicializa_Serial	;wreg free
   813                           
   814                           ;main.c: 88: setupTmr0();
   815  0023A0  ECF4  F019         	call	_setupTmr0	;wreg free
   816  0023A4                     
   817                           ;main.c: 90: envia_texto_serial("Uso do Sensor Ultrassônico\n\r");
   818  0023A4  0E91               	movlw	low STR_1
   819  0023A6  6E05               	movwf	envia_texto_serial@frase^0,c
   820  0023A8  0E08               	movlw	high STR_1
   821  0023AA  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   822  0023AC  EC0D  F019         	call	_envia_texto_serial	;wreg free
   823  0023B0                     l3491:
   824                           
   825                           ;main.c: 93: TMR0 = 0;
   826  0023B0  0E00               	movlw	0
   827  0023B2  6ED7               	movwf	215,c	;volatile
   828  0023B4  0E00               	movlw	0
   829  0023B6  6ED6               	movwf	214,c	;volatile
   830  0023B8                     
   831                           ;main.c: 94: LATBbits.LATB4 = 1;
   832  0023B8  888A               	bsf	138,4,c	;volatile
   833  0023BA                     
   834                           ;main.c: 95: _delay((unsigned long)((1)*(20000000/4000.0)));
   835  0023BA  0E07               	movlw	7
   836  0023BC  6E59               	movwf	??_main^0,c
   837  0023BE  0E7D               	movlw	125
   838  0023C0                     u3937:
   839  0023C0  2EE8               	decfsz	wreg,f,c
   840  0023C2  D7FE               	bra	u3937
   841  0023C4  2E59               	decfsz	??_main^0,f,c
   842  0023C6  D7FC               	bra	u3937
   843  0023C8  F000               	nop	
   844  0023CA                     
   845                           ;main.c: 96: LATBbits.LATB4 = 0;
   846  0023CA  988A               	bcf	138,4,c	;volatile
   847  0023CC                     l114:
   848  0023CC  A681               	btfss	3969,3,c	;volatile
   849  0023CE  EFEB  F011         	goto	u3851
   850  0023D2  EFED  F011         	goto	u3850
   851  0023D6                     u3851:
   852  0023D6  EFE6  F011         	goto	l114
   853  0023DA                     u3850:
   854  0023DA                     
   855                           ;main.c: 99: };main.c: 100: TMR0ON = 1;
   856  0023DA  8ED5               	bsf	4053,7,c	;volatile
   857  0023DC                     l117:
   858  0023DC  B681               	btfsc	3969,3,c	;volatile
   859  0023DE  EFF3  F011         	goto	u3861
   860  0023E2  EFF5  F011         	goto	u3860
   861  0023E6                     u3861:
   862  0023E6  EFEE  F011         	goto	l117
   863  0023EA                     u3860:
   864  0023EA                     
   865                           ;main.c: 102: };main.c: 103: TMR0ON = 0;
   866  0023EA  9ED5               	bcf	4053,7,c	;volatile
   867                           
   868                           ;main.c: 104: tempo = TMR0;
   869  0023EC  CFD6 F0A1          	movff	4054,_tempo	;volatile
   870  0023F0  CFD7 F0A2          	movff	4055,_tempo+1	;volatile
   871  0023F4                     
   872                           ;main.c: 105: distancia = (340.0/20000.0)*tempo;
   873  0023F4  C0A1  F001         	movff	_tempo,___xxtofl@val
   874  0023F8  C0A2  F002         	movff	_tempo+1,___xxtofl@val+1
   875  0023FC  0E00               	movlw	0
   876  0023FE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   877  002400  0EFF               	movlw	-1
   878  002402  6E03               	movwf	(___xxtofl@val+2)^0,c
   879  002404  6E04               	movwf	(___xxtofl@val+3)^0,c
   880  002406  0E01               	movlw	1
   881  002408  EC00  F013         	call	___xxtofl
   882  00240C  C001  F00F         	movff	?___xxtofl,___flmul@b
   883  002410  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   884  002414  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   885  002418  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   886  00241C  0E96               	movlw	150
   887  00241E  6E13               	movwf	___flmul@a^0,c
   888  002420  0E43               	movlw	67
   889  002422  6E14               	movwf	(___flmul@a+1)^0,c
   890  002424  0E8B               	movlw	139
   891  002426  6E15               	movwf	(___flmul@a+2)^0,c
   892  002428  0E3C               	movlw	60
   893  00242A  6E16               	movwf	(___flmul@a+3)^0,c
   894  00242C  EC57  F00C         	call	___flmul	;wreg free
   895  002430  C00F  F05A         	movff	?___flmul,_distancia
   896  002434  C010  F05B         	movff	?___flmul+1,_distancia+1
   897  002438  C011  F05C         	movff	?___flmul+2,_distancia+2
   898  00243C  C012  F05D         	movff	?___flmul+3,_distancia+3
   899  002440                     
   900                           ;main.c: 107: sprintf(linha2,"\n\rDistancia: %3.2f cm", distancia);
   901  002440  0E81               	movlw	low _linha2
   902  002442  6E4D               	movwf	sprintf@sp^0,c
   903  002444  0E00               	movlw	high _linha2
   904  002446  6E4E               	movwf	(sprintf@sp+1)^0,c
   905  002448  0EAE               	movlw	low STR_2
   906  00244A  6E4F               	movwf	sprintf@f^0,c
   907  00244C  0E08               	movlw	high STR_2
   908  00244E  6E50               	movwf	(sprintf@f+1)^0,c
   909  002450  C05A  F051         	movff	_distancia,?_sprintf+4
   910  002454  C05B  F052         	movff	_distancia+1,?_sprintf+5
   911  002458  C05C  F053         	movff	_distancia+2,?_sprintf+6
   912  00245C  C05D  F054         	movff	_distancia+3,?_sprintf+7
   913  002460  EC63  F004         	call	_sprintf	;wreg free
   914  002464                     
   915                           ;main.c: 108: envia_texto_serial(linha2);
   916  002464  0E81               	movlw	low _linha2
   917  002466  6E05               	movwf	envia_texto_serial@frase^0,c
   918  002468  0E00               	movlw	high _linha2
   919  00246A  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   920  00246C  EC0D  F019         	call	_envia_texto_serial	;wreg free
   921  002470                     
   922                           ;main.c: 110: if (distancia < 10){
   923  002470  C05A  F001         	movff	_distancia,___flge@ff1
   924  002474  C05B  F002         	movff	_distancia+1,___flge@ff1+1
   925  002478  C05C  F003         	movff	_distancia+2,___flge@ff1+2
   926  00247C  C05D  F004         	movff	_distancia+3,___flge@ff1+3
   927  002480  0E00               	movlw	0
   928  002482  6E05               	movwf	___flge@ff2^0,c
   929  002484  0E00               	movlw	0
   930  002486  6E06               	movwf	(___flge@ff2+1)^0,c
   931  002488  0E20               	movlw	32
   932  00248A  6E07               	movwf	(___flge@ff2+2)^0,c
   933  00248C  0E41               	movlw	65
   934  00248E  6E08               	movwf	(___flge@ff2+3)^0,c
   935  002490  EC34  F016         	call	___flge	;wreg free
   936  002494  B0D8               	btfsc	status,0,c
   937  002496  EF4F  F012         	goto	u3871
   938  00249A  EF51  F012         	goto	u3870
   939  00249E                     u3871:
   940  00249E  EF5E  F012         	goto	l120
   941  0024A2                     u3870:
   942  0024A2                     
   943                           ;main.c: 111: LATA3 = !LATA3;
   944  0024A2  A689               	btfss	3977,3,c	;volatile
   945  0024A4  EF56  F012         	goto	u3881
   946  0024A8  EF59  F012         	goto	u3880
   947  0024AC                     u3881:
   948  0024AC  8689               	bsf	3977,3,c	;volatile
   949  0024AE  EF5A  F012         	goto	u3895
   950  0024B2                     u3880:
   951  0024B2  9689               	bcf	3977,3,c	;volatile
   952  0024B4                     u3895:
   953  0024B4                     
   954                           ;main.c: 112: LATD = 1;
   955  0024B4  0E01               	movlw	1
   956  0024B6  6E8C               	movwf	140,c	;volatile
   957                           
   958                           ;main.c: 113: }
   959  0024B8  EF5F  F012         	goto	l3511
   960  0024BC                     l120:
   961                           
   962                           ;main.c: 114: else{;main.c: 115: LATA3 = 0;
   963  0024BC  9689               	bcf	3977,3,c	;volatile
   964  0024BE                     l3511:
   965                           
   966                           ;main.c: 116: };main.c: 117: if (distancia >= 10 && distancia < 20){
   967  0024BE  C05A  F001         	movff	_distancia,___flge@ff1
   968  0024C2  C05B  F002         	movff	_distancia+1,___flge@ff1+1
   969  0024C6  C05C  F003         	movff	_distancia+2,___flge@ff1+2
   970  0024CA  C05D  F004         	movff	_distancia+3,___flge@ff1+3
   971  0024CE  0E00               	movlw	0
   972  0024D0  6E05               	movwf	___flge@ff2^0,c
   973  0024D2  0E00               	movlw	0
   974  0024D4  6E06               	movwf	(___flge@ff2+1)^0,c
   975  0024D6  0E20               	movlw	32
   976  0024D8  6E07               	movwf	(___flge@ff2+2)^0,c
   977  0024DA  0E41               	movlw	65
   978  0024DC  6E08               	movwf	(___flge@ff2+3)^0,c
   979  0024DE  EC34  F016         	call	___flge	;wreg free
   980  0024E2  A0D8               	btfss	status,0,c
   981  0024E4  EF76  F012         	goto	u3901
   982  0024E8  EF78  F012         	goto	u3900
   983  0024EC                     u3901:
   984  0024EC  EF8A  F012         	goto	l3515
   985  0024F0                     u3900:
   986  0024F0  C05A  F001         	movff	_distancia,___flge@ff1
   987  0024F4  C05B  F002         	movff	_distancia+1,___flge@ff1+1
   988  0024F8  C05C  F003         	movff	_distancia+2,___flge@ff1+2
   989  0024FC  C05D  F004         	movff	_distancia+3,___flge@ff1+3
   990  002500  0E00               	movlw	0
   991  002502  6E05               	movwf	___flge@ff2^0,c
   992  002504  0E00               	movlw	0
   993  002506  6E06               	movwf	(___flge@ff2+1)^0,c
   994  002508  0EA0               	movlw	160
   995  00250A  6E07               	movwf	(___flge@ff2+2)^0,c
   996  00250C  0E41               	movlw	65
   997  00250E  6E08               	movwf	(___flge@ff2+3)^0,c
   998  002510  EC34  F016         	call	___flge	;wreg free
   999  002514                     l3515:
  1000                           
  1001                           ;main.c: 119: };main.c: 120: if (distancia >= 20 && distancia < 30){
  1002  002514  C05A  F001         	movff	_distancia,___flge@ff1
  1003  002518  C05B  F002         	movff	_distancia+1,___flge@ff1+1
  1004  00251C  C05C  F003         	movff	_distancia+2,___flge@ff1+2
  1005  002520  C05D  F004         	movff	_distancia+3,___flge@ff1+3
  1006  002524  0E00               	movlw	0
  1007  002526  6E05               	movwf	___flge@ff2^0,c
  1008  002528  0E00               	movlw	0
  1009  00252A  6E06               	movwf	(___flge@ff2+1)^0,c
  1010  00252C  0EA0               	movlw	160
  1011  00252E  6E07               	movwf	(___flge@ff2+2)^0,c
  1012  002530  0E41               	movlw	65
  1013  002532  6E08               	movwf	(___flge@ff2+3)^0,c
  1014  002534  EC34  F016         	call	___flge	;wreg free
  1015  002538  A0D8               	btfss	status,0,c
  1016  00253A  EFA1  F012         	goto	u3911
  1017  00253E  EFA3  F012         	goto	u3910
  1018  002542                     u3911:
  1019  002542  EFB5  F012         	goto	l3519
  1020  002546                     u3910:
  1021  002546  C05A  F001         	movff	_distancia,___flge@ff1
  1022  00254A  C05B  F002         	movff	_distancia+1,___flge@ff1+1
  1023  00254E  C05C  F003         	movff	_distancia+2,___flge@ff1+2
  1024  002552  C05D  F004         	movff	_distancia+3,___flge@ff1+3
  1025  002556  0E00               	movlw	0
  1026  002558  6E05               	movwf	___flge@ff2^0,c
  1027  00255A  0E00               	movlw	0
  1028  00255C  6E06               	movwf	(___flge@ff2+1)^0,c
  1029  00255E  0EF0               	movlw	240
  1030  002560  6E07               	movwf	(___flge@ff2+2)^0,c
  1031  002562  0E41               	movlw	65
  1032  002564  6E08               	movwf	(___flge@ff2+3)^0,c
  1033  002566  EC34  F016         	call	___flge	;wreg free
  1034  00256A                     l3519:
  1035                           
  1036                           ;main.c: 122: };main.c: 123: if (distancia >= 30 && distancia < 40){
  1037  00256A  C05A  F001         	movff	_distancia,___flge@ff1
  1038  00256E  C05B  F002         	movff	_distancia+1,___flge@ff1+1
  1039  002572  C05C  F003         	movff	_distancia+2,___flge@ff1+2
  1040  002576  C05D  F004         	movff	_distancia+3,___flge@ff1+3
  1041  00257A  0E00               	movlw	0
  1042  00257C  6E05               	movwf	___flge@ff2^0,c
  1043  00257E  0E00               	movlw	0
  1044  002580  6E06               	movwf	(___flge@ff2+1)^0,c
  1045  002582  0EF0               	movlw	240
  1046  002584  6E07               	movwf	(___flge@ff2+2)^0,c
  1047  002586  0E41               	movlw	65
  1048  002588  6E08               	movwf	(___flge@ff2+3)^0,c
  1049  00258A  EC34  F016         	call	___flge	;wreg free
  1050  00258E  A0D8               	btfss	status,0,c
  1051  002590  EFCC  F012         	goto	u3921
  1052  002594  EFCE  F012         	goto	u3920
  1053  002598                     u3921:
  1054  002598  EFE0  F012         	goto	l3523
  1055  00259C                     u3920:
  1056  00259C  C05A  F001         	movff	_distancia,___flge@ff1
  1057  0025A0  C05B  F002         	movff	_distancia+1,___flge@ff1+1
  1058  0025A4  C05C  F003         	movff	_distancia+2,___flge@ff1+2
  1059  0025A8  C05D  F004         	movff	_distancia+3,___flge@ff1+3
  1060  0025AC  0E00               	movlw	0
  1061  0025AE  6E05               	movwf	___flge@ff2^0,c
  1062  0025B0  0E00               	movlw	0
  1063  0025B2  6E06               	movwf	(___flge@ff2+1)^0,c
  1064  0025B4  0E20               	movlw	32
  1065  0025B6  6E07               	movwf	(___flge@ff2+2)^0,c
  1066  0025B8  0E42               	movlw	66
  1067  0025BA  6E08               	movwf	(___flge@ff2+3)^0,c
  1068  0025BC  EC34  F016         	call	___flge	;wreg free
  1069  0025C0                     l3523:
  1070                           
  1071                           ;main.c: 125: };main.c: 126: if (distancia >= 40){
  1072  0025C0  C05A  F001         	movff	_distancia,___flge@ff1
  1073  0025C4  C05B  F002         	movff	_distancia+1,___flge@ff1+1
  1074  0025C8  C05C  F003         	movff	_distancia+2,___flge@ff1+2
  1075  0025CC  C05D  F004         	movff	_distancia+3,___flge@ff1+3
  1076  0025D0  0E00               	movlw	0
  1077  0025D2  6E05               	movwf	___flge@ff2^0,c
  1078  0025D4  0E00               	movlw	0
  1079  0025D6  6E06               	movwf	(___flge@ff2+1)^0,c
  1080  0025D8  0E20               	movlw	32
  1081  0025DA  6E07               	movwf	(___flge@ff2+2)^0,c
  1082  0025DC  0E42               	movlw	66
  1083  0025DE  6E08               	movwf	(___flge@ff2+3)^0,c
  1084  0025E0  EC34  F016         	call	___flge	;wreg free
  1085  0025E4                     
  1086                           ;main.c: 128: };main.c: 129: SuperDelay(100);
  1087  0025E4  0E64               	movlw	100
  1088  0025E6  6E0F               	movwf	SuperDelay@counter^0,c
  1089  0025E8  0E00               	movlw	0
  1090  0025EA  6E10               	movwf	(SuperDelay@counter+1)^0,c
  1091  0025EC  0E00               	movlw	0
  1092  0025EE  6E11               	movwf	(SuperDelay@counter+2)^0,c
  1093  0025F0  0E00               	movlw	0
  1094  0025F2  6E12               	movwf	(SuperDelay@counter+3)^0,c
  1095  0025F4  EC17  F018         	call	_SuperDelay	;wreg free
  1096  0025F8  EFD8  F011         	goto	l3491
  1097  0025FC  EF07  F000         	goto	start
  1098  002600                     __end_of_main:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _sprintf *****************
  1102 ;; Defined at:
  1103 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  sp              2   76[COMRAM] PTR unsigned char 
  1106 ;;		 -> linha2(32), 
  1107 ;;  f               2   78[COMRAM] PTR const unsigned char 
  1108 ;;		 -> STR_2(22), 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  1111 ;;  tmpval          4   14[BANK0 ] struct .
  1112 ;;  val             4    6[BANK0 ] unsigned long 
  1113 ;;  cp              3    0        PTR const unsigned char 
  1114 ;;  prec            2   24[BANK0 ] int 
  1115 ;;  eexp            2   18[BANK0 ] int 
  1116 ;;  width           2   12[BANK0 ] int 
  1117 ;;  flag            2   10[BANK0 ] unsigned short 
  1118 ;;  ap              2    4[BANK0 ] PTR void [1]
  1119 ;;		 -> ?_sprintf(2), 
  1120 ;;  len             2    0        unsigned int 
  1121 ;;  c               1   26[BANK0 ] unsigned char 
  1122 ;;  d               1    0        unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2   76[COMRAM] int 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         8       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         0      27       0       0       0       0       0       0       0
  1134 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1135 ;;      Totals:        12      27       0       0       0       0       0       0       0
  1136 ;;Total ram usage:       39 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    3
  1139 ;; This function calls:
  1140 ;;		___awdiv
  1141 ;;		___fladd
  1142 ;;		___fleq
  1143 ;;		___flge
  1144 ;;		___flmul
  1145 ;;		___flneg
  1146 ;;		___flsub
  1147 ;;		___fltol
  1148 ;;		___lldiv
  1149 ;;		___llmod
  1150 ;;		___wmul
  1151 ;;		___xxtofl
  1152 ;;		__div_to_l_
  1153 ;;		__tdiv_to_l_
  1154 ;;		_fround
  1155 ;;		_isdigit
  1156 ;;		_scale
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text1
  1163  0008C6                     __ptext1:
  1164                           	callstack 0
  1165  0008C6                     _sprintf:
  1166                           	callstack 27
  1167  0008C6                     
  1168                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1169  0008C6  0E51               	movlw	low (?_sprintf+4)
  1170  0008C8  0100               	movlb	0	; () banked
  1171  0008CA  6FA7               	movwf	sprintf@ap& (0+255),b
  1172  0008CC  0E00               	movlw	high (?_sprintf+4)
  1173  0008CE  6FA8               	movwf	(sprintf@ap+1)& (0+255),b
  1174                           
  1175                           ;doprnt.c: 553: while((c = *f++)) {
  1176  0008D0  EFDF  F009         	goto	l3467
  1177  0008D4                     l3211:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;doprnt.c: 555: if(c != '%')
  1181  0008D4  0E25               	movlw	37
  1182  0008D6  19BD               	xorwf	sprintf@c& (0+255),w,b
  1183  0008D8  B4D8               	btfsc	status,2,c
  1184  0008DA  EF71  F004         	goto	u3421
  1185  0008DE  EF73  F004         	goto	u3420
  1186  0008E2                     u3421:
  1187  0008E2  EF7D  F004         	goto	l3217
  1188  0008E6                     u3420:
  1189  0008E6                     
  1190                           ; BSR set to: 0
  1191                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1192  0008E6  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1193  0008EA  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1194  0008EE  C0BD  FFDF         	movff	sprintf@c,indf2
  1195  0008F2                     l3215:
  1196                           
  1197                           ; BSR set to: 0
  1198  0008F2  4A4D               	infsnz	sprintf@sp^0,f,c
  1199  0008F4  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1200                           
  1201                           ;doprnt.c: 559: continue;
  1202  0008F6  EFDF  F009         	goto	l3467
  1203  0008FA                     l3217:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1207  0008FA  0E00               	movlw	0
  1208  0008FC  6FB0               	movwf	(sprintf@width+1)& (0+255),b
  1209  0008FE  0E00               	movlw	0
  1210  000900  6FAF               	movwf	sprintf@width& (0+255),b
  1211                           
  1212                           ;doprnt.c: 565: flag = 0;
  1213  000902  0E00               	movlw	0
  1214  000904  6FAE               	movwf	(sprintf@flag+1)& (0+255),b
  1215  000906  0E00               	movlw	0
  1216  000908  6FAD               	movwf	sprintf@flag& (0+255),b
  1217  00090A                     
  1218                           ; BSR set to: 0
  1219                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1220  00090A  C04F  FFF6         	movff	sprintf@f,tblptrl
  1221  00090E  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1222  000912                     	if	0	;tblptru may be non-zero
  1223  000912                     	endif
  1224  000912                     	if	0	;tblptru may be non-zero
  1225  000912                     	endif
  1226  000912  0008               	tblrd		*
  1227  000914  50F5               	movf	tablat,w,c
  1228  000916  ECA2  F019         	call	_isdigit
  1229  00091A  A0D8               	btfss	status,0,c
  1230  00091C  EF92  F004         	goto	u3431
  1231  000920  EF94  F004         	goto	u3430
  1232  000924                     u3431:
  1233  000924  EFCD  F004         	goto	l3231
  1234  000928                     u3430:
  1235  000928                     
  1236                           ;doprnt.c: 615: width = 0;
  1237  000928  0E00               	movlw	0
  1238  00092A  0100               	movlb	0	; () banked
  1239  00092C  6FB0               	movwf	(sprintf@width+1)& (0+255),b
  1240  00092E  0E00               	movlw	0
  1241  000930  6FAF               	movwf	sprintf@width& (0+255),b
  1242  000932                     l3223:
  1243                           
  1244                           ;doprnt.c: 617: width *= 10;
  1245  000932  C0AF  F001         	movff	sprintf@width,___wmul@multiplier
  1246  000936  C0B0  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1247  00093A  0E00               	movlw	0
  1248  00093C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1249  00093E  0E0A               	movlw	10
  1250  000940  6E03               	movwf	___wmul@multiplicand^0,c
  1251  000942  ECCF  F019         	call	___wmul	;wreg free
  1252  000946  C001  F0AF         	movff	?___wmul,sprintf@width
  1253  00094A  C002  F0B0         	movff	?___wmul+1,sprintf@width+1
  1254  00094E                     
  1255                           ;doprnt.c: 618: width += *f++ - '0';
  1256  00094E  0ED0               	movlw	208
  1257  000950  6E55               	movwf	??_sprintf^0,c
  1258  000952  0EFF               	movlw	255
  1259  000954  6E56               	movwf	(??_sprintf+1)^0,c
  1260  000956  C04F  FFF6         	movff	sprintf@f,tblptrl
  1261  00095A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1262  00095E                     	if	0	;tblptru may be non-zero
  1263  00095E                     	endif
  1264  00095E                     	if	0	;tblptru may be non-zero
  1265  00095E                     	endif
  1266  00095E  0008               	tblrd		*
  1267  000960  50F5               	movf	tablat,w,c
  1268  000962  6E57               	movwf	(??_sprintf+2)^0,c
  1269  000964  6A58               	clrf	(??_sprintf+3)^0,c
  1270  000966  5055               	movf	??_sprintf^0,w,c
  1271  000968  2657               	addwf	(??_sprintf+2)^0,f,c
  1272  00096A  5056               	movf	(??_sprintf+1)^0,w,c
  1273  00096C  2258               	addwfc	(??_sprintf+3)^0,f,c
  1274  00096E  5057               	movf	(??_sprintf+2)^0,w,c
  1275  000970  0100               	movlb	0	; () banked
  1276  000972  27AF               	addwf	sprintf@width& (0+255),f,b
  1277  000974  5058               	movf	(??_sprintf+3)^0,w,c
  1278  000976  23B0               	addwfc	(sprintf@width+1)& (0+255),f,b
  1279  000978                     
  1280                           ; BSR set to: 0
  1281  000978  4A4F               	infsnz	sprintf@f^0,f,c
  1282  00097A  2A50               	incf	(sprintf@f+1)^0,f,c
  1283  00097C                     
  1284                           ; BSR set to: 0
  1285                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1286  00097C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1287  000980  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1288  000984                     	if	0	;tblptru may be non-zero
  1289  000984                     	endif
  1290  000984                     	if	0	;tblptru may be non-zero
  1291  000984                     	endif
  1292  000984  0008               	tblrd		*
  1293  000986  50F5               	movf	tablat,w,c
  1294  000988  ECA2  F019         	call	_isdigit
  1295  00098C  B0D8               	btfsc	status,0,c
  1296  00098E  EFCB  F004         	goto	u3441
  1297  000992  EFCD  F004         	goto	u3440
  1298  000996                     u3441:
  1299  000996  EF99  F004         	goto	l3223
  1300  00099A                     u3440:
  1301  00099A                     l3231:
  1302                           
  1303                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  1304  00099A  C04F  FFF6         	movff	sprintf@f,tblptrl
  1305  00099E  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1306  0009A2                     	if	0	;tblptru may be non-zero
  1307  0009A2                     	endif
  1308  0009A2                     	if	0	;tblptru may be non-zero
  1309  0009A2                     	endif
  1310  0009A2  0008               	tblrd		*
  1311  0009A4  50F5               	movf	tablat,w,c
  1312  0009A6  0A2E               	xorlw	46
  1313  0009A8  A4D8               	btfss	status,2,c
  1314  0009AA  EFD9  F004         	goto	u3451
  1315  0009AE  EFDB  F004         	goto	u3450
  1316  0009B2                     u3451:
  1317  0009B2  EF1B  F005         	goto	l3245
  1318  0009B6                     u3450:
  1319  0009B6                     
  1320                           ;doprnt.c: 629: flag |= 0x4000;
  1321  0009B6  0100               	movlb	0	; () banked
  1322  0009B8  8DAE               	bsf	(sprintf@flag+1)& (0+255),6,b
  1323                           
  1324                           ;doprnt.c: 630: f++;
  1325  0009BA  4A4F               	infsnz	sprintf@f^0,f,c
  1326  0009BC  2A50               	incf	(sprintf@f+1)^0,f,c
  1327  0009BE                     
  1328                           ; BSR set to: 0
  1329                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1330  0009BE  0E00               	movlw	0
  1331  0009C0  6FBC               	movwf	(sprintf@prec+1)& (0+255),b
  1332  0009C2  0E00               	movlw	0
  1333  0009C4  6FBB               	movwf	sprintf@prec& (0+255),b
  1334                           
  1335                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1336  0009C6  EF0A  F005         	goto	l3243
  1337  0009CA                     l3237:
  1338                           
  1339                           ;doprnt.c: 647: prec *= 10;
  1340  0009CA  C0BB  F001         	movff	sprintf@prec,___wmul@multiplier
  1341  0009CE  C0BC  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1342  0009D2  0E00               	movlw	0
  1343  0009D4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1344  0009D6  0E0A               	movlw	10
  1345  0009D8  6E03               	movwf	___wmul@multiplicand^0,c
  1346  0009DA  ECCF  F019         	call	___wmul	;wreg free
  1347  0009DE  C001  F0BB         	movff	?___wmul,sprintf@prec
  1348  0009E2  C002  F0BC         	movff	?___wmul+1,sprintf@prec+1
  1349  0009E6                     
  1350                           ;doprnt.c: 648: prec += *f++ - '0';
  1351  0009E6  0ED0               	movlw	208
  1352  0009E8  6E55               	movwf	??_sprintf^0,c
  1353  0009EA  0EFF               	movlw	255
  1354  0009EC  6E56               	movwf	(??_sprintf+1)^0,c
  1355  0009EE  C04F  FFF6         	movff	sprintf@f,tblptrl
  1356  0009F2  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1357  0009F6                     	if	0	;tblptru may be non-zero
  1358  0009F6                     	endif
  1359  0009F6                     	if	0	;tblptru may be non-zero
  1360  0009F6                     	endif
  1361  0009F6  0008               	tblrd		*
  1362  0009F8  50F5               	movf	tablat,w,c
  1363  0009FA  6E57               	movwf	(??_sprintf+2)^0,c
  1364  0009FC  6A58               	clrf	(??_sprintf+3)^0,c
  1365  0009FE  5055               	movf	??_sprintf^0,w,c
  1366  000A00  2657               	addwf	(??_sprintf+2)^0,f,c
  1367  000A02  5056               	movf	(??_sprintf+1)^0,w,c
  1368  000A04  2258               	addwfc	(??_sprintf+3)^0,f,c
  1369  000A06  5057               	movf	(??_sprintf+2)^0,w,c
  1370  000A08  0100               	movlb	0	; () banked
  1371  000A0A  27BB               	addwf	sprintf@prec& (0+255),f,b
  1372  000A0C  5058               	movf	(??_sprintf+3)^0,w,c
  1373  000A0E  23BC               	addwfc	(sprintf@prec+1)& (0+255),f,b
  1374  000A10                     
  1375                           ; BSR set to: 0
  1376  000A10  4A4F               	infsnz	sprintf@f^0,f,c
  1377  000A12  2A50               	incf	(sprintf@f+1)^0,f,c
  1378  000A14                     l3243:
  1379                           
  1380                           ; BSR set to: 0
  1381  000A14  C04F  FFF6         	movff	sprintf@f,tblptrl
  1382  000A18  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1383  000A1C                     	if	0	;tblptru may be non-zero
  1384  000A1C                     	endif
  1385  000A1C                     	if	0	;tblptru may be non-zero
  1386  000A1C                     	endif
  1387  000A1C  0008               	tblrd		*
  1388  000A1E  50F5               	movf	tablat,w,c
  1389  000A20  ECA2  F019         	call	_isdigit
  1390  000A24  B0D8               	btfsc	status,0,c
  1391  000A26  EF17  F005         	goto	u3461
  1392  000A2A  EF19  F005         	goto	u3460
  1393  000A2E                     u3461:
  1394  000A2E  EFE5  F004         	goto	l3237
  1395  000A32                     u3460:
  1396  000A32  EF26  F005         	goto	l3253
  1397  000A36                     l3245:
  1398                           
  1399                           ;doprnt.c: 652: prec = 0;
  1400  000A36  0E00               	movlw	0
  1401  000A38  0100               	movlb	0	; () banked
  1402  000A3A  6FBC               	movwf	(sprintf@prec+1)& (0+255),b
  1403  000A3C  0E00               	movlw	0
  1404  000A3E  6FBB               	movwf	sprintf@prec& (0+255),b
  1405  000A40                     
  1406                           ; BSR set to: 0
  1407                           ;doprnt.c: 654: flag |= 0x1000;
  1408  000A40  89AE               	bsf	(sprintf@flag+1)& (0+255),4,b
  1409  000A42  EF26  F005         	goto	l3253
  1410  000A46                     l3249:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;doprnt.c: 689: flag |= 0x400;
  1414  000A46  85AE               	bsf	(sprintf@flag+1)& (0+255),2,b
  1415                           
  1416                           ;doprnt.c: 690: break;
  1417  000A48  EF3B  F005         	goto	l3255
  1418  000A4C                     l3253:
  1419  000A4C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1420  000A50  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1421  000A54  4A4F               	infsnz	sprintf@f^0,f,c
  1422  000A56  2A50               	incf	(sprintf@f+1)^0,f,c
  1423  000A58                     	if	0	;tblptru may be non-zero
  1424  000A58                     	endif
  1425  000A58                     	if	0	;tblptru may be non-zero
  1426  000A58                     	endif
  1427  000A58  0008               	tblrd		*
  1428  000A5A  CFF5 F0BD          	movff	tablat,sprintf@c
  1429  000A5E  0100               	movlb	0	; () banked
  1430  000A60  51BD               	movf	sprintf@c& (0+255),w,b
  1431                           
  1432                           ; Switch size 1, requested type "simple"
  1433                           ; Number of cases is 2, Range of values is 0 to 102
  1434                           ; switch strategies available:
  1435                           ; Name         Instructions Cycles
  1436                           ; simple_byte            7     4 (average)
  1437                           ;	Chosen strategy is simple_byte
  1438  000A62  0A00               	xorlw	0	; case 0
  1439  000A64  B4D8               	btfsc	status,2,c
  1440  000A66  EFF0  F009         	goto	l3469
  1441  000A6A  0A66               	xorlw	102	; case 102
  1442  000A6C  B4D8               	btfsc	status,2,c
  1443  000A6E  EF23  F005         	goto	l3249
  1444  000A72  EFDF  F009         	goto	l3467
  1445  000A76                     l3255:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;doprnt.c: 851: if(flag & (0x700)) {
  1449  000A76  0E07               	movlw	7
  1450  000A78  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  1451  000A7A  B4D8               	btfsc	status,2,c
  1452  000A7C  EF42  F005         	goto	u3471
  1453  000A80  EF44  F005         	goto	u3470
  1454  000A84                     u3471:
  1455  000A84  EF13  F009         	goto	l3419
  1456  000A88                     u3470:
  1457  000A88                     
  1458                           ; BSR set to: 0
  1459                           ;doprnt.c: 853: if(flag & 0x1000)
  1460  000A88  A9AE               	btfss	(sprintf@flag+1)& (0+255),4,b
  1461  000A8A  EF49  F005         	goto	u3481
  1462  000A8E  EF4B  F005         	goto	u3480
  1463  000A92                     u3481:
  1464  000A92  EF4F  F005         	goto	l3261
  1465  000A96                     u3480:
  1466  000A96                     
  1467                           ; BSR set to: 0
  1468                           ;doprnt.c: 855: prec = 6;
  1469  000A96  0E00               	movlw	0
  1470  000A98  6FBC               	movwf	(sprintf@prec+1)& (0+255),b
  1471  000A9A  0E06               	movlw	6
  1472  000A9C  6FBB               	movwf	sprintf@prec& (0+255),b
  1473  000A9E                     l3261:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1477  000A9E  C0A7  FFD9         	movff	sprintf@ap,fsr2l
  1478  000AA2  C0A8  FFDA         	movff	sprintf@ap+1,fsr2h
  1479  000AA6  CFDE F0B7          	movff	postinc2,sprintf@fval
  1480  000AAA  CFDE F0B8          	movff	postinc2,sprintf@fval+1
  1481  000AAE  CFDE F0B9          	movff	postinc2,sprintf@fval+2
  1482  000AB2  CFDE F0BA          	movff	postinc2,sprintf@fval+3
  1483  000AB6                     
  1484                           ; BSR set to: 0
  1485  000AB6  0E04               	movlw	4
  1486  000AB8  27A7               	addwf	sprintf@ap& (0+255),f,b
  1487  000ABA  0E00               	movlw	0
  1488  000ABC  23A8               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1489  000ABE                     
  1490                           ; BSR set to: 0
  1491                           ;doprnt.c: 857: if(fval < 0.0) {
  1492  000ABE  BFBA               	btfsc	(sprintf@fval+3)& (0+255),7,b
  1493  000AC0  EF66  F005         	goto	u3490
  1494  000AC4  EF64  F005         	goto	u3491
  1495  000AC8                     u3491:
  1496  000AC8  EF7B  F005         	goto	l3271
  1497  000ACC                     u3490:
  1498  000ACC                     
  1499                           ; BSR set to: 0
  1500                           ;doprnt.c: 858: fval = -fval;
  1501  000ACC  C0B7  F001         	movff	sprintf@fval,___flneg@f1
  1502  000AD0  C0B8  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1503  000AD4  C0B9  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1504  000AD8  C0BA  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1505  000ADC  EC86  F019         	call	___flneg	;wreg free
  1506  000AE0  C001  F0B7         	movff	?___flneg,sprintf@fval
  1507  000AE4  C002  F0B8         	movff	?___flneg+1,sprintf@fval+1
  1508  000AE8  C003  F0B9         	movff	?___flneg+2,sprintf@fval+2
  1509  000AEC  C004  F0BA         	movff	?___flneg+3,sprintf@fval+3
  1510  000AF0                     
  1511                           ;doprnt.c: 859: flag |= 0x03;
  1512  000AF0  0E03               	movlw	3
  1513  000AF2  0100               	movlb	0	; () banked
  1514  000AF4  13AD               	iorwf	sprintf@flag& (0+255),f,b
  1515  000AF6                     l3271:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1519  000AF6  0E00               	movlw	0
  1520  000AF8  6FB6               	movwf	(sprintf@eexp+1)& (0+255),b
  1521  000AFA  0E00               	movlw	0
  1522  000AFC  6FB5               	movwf	sprintf@eexp& (0+255),b
  1523  000AFE                     
  1524                           ; BSR set to: 0
  1525                           ;doprnt.c: 862: if( fval!=0) {
  1526  000AFE  C0B7  F001         	movff	sprintf@fval,___fleq@ff1
  1527  000B02  C0B8  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1528  000B06  C0B9  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1529  000B0A  C0BA  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1530  000B0E  0E00               	movlw	0
  1531  000B10  6E05               	movwf	___fleq@ff2^0,c
  1532  000B12  0E00               	movlw	0
  1533  000B14  6E06               	movwf	(___fleq@ff2+1)^0,c
  1534  000B16  0E00               	movlw	0
  1535  000B18  6E07               	movwf	(___fleq@ff2+2)^0,c
  1536  000B1A  0E00               	movlw	0
  1537  000B1C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1538  000B1E  EC70  F017         	call	___fleq	;wreg free
  1539  000B22  B0D8               	btfsc	status,0,c
  1540  000B24  EF96  F005         	goto	u3501
  1541  000B28  EF98  F005         	goto	u3500
  1542  000B2C                     u3501:
  1543  000B2C  EF2B  F006         	goto	l3299
  1544  000B30                     u3500:
  1545  000B30                     
  1546                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1547  000B30  0100               	movlb	0	; () banked
  1548  000B32  35B9               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1549  000B34  35BA               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1550  000B36  0F82               	addlw	130
  1551  000B38  6FB5               	movwf	sprintf@eexp& (0+255),b
  1552  000B3A  6BB6               	clrf	(sprintf@eexp+1)& (0+255),b
  1553  000B3C  0EFF               	movlw	255
  1554  000B3E  23B6               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1555  000B40                     
  1556                           ; BSR set to: 0
  1557                           ;doprnt.c: 864: eexp--;
  1558  000B40  07B5               	decf	sprintf@eexp& (0+255),f,b
  1559  000B42  A0D8               	btfss	status,0,c
  1560  000B44  07B6               	decf	(sprintf@eexp+1)& (0+255),f,b
  1561  000B46                     
  1562                           ; BSR set to: 0
  1563                           ;doprnt.c: 865: eexp *= 3;
  1564  000B46  C0B5  F001         	movff	sprintf@eexp,___wmul@multiplier
  1565  000B4A  C0B6  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1566  000B4E  0E00               	movlw	0
  1567  000B50  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1568  000B52  0E03               	movlw	3
  1569  000B54  6E03               	movwf	___wmul@multiplicand^0,c
  1570  000B56  ECCF  F019         	call	___wmul	;wreg free
  1571  000B5A  C001  F0B5         	movff	?___wmul,sprintf@eexp
  1572  000B5E  C002  F0B6         	movff	?___wmul+1,sprintf@eexp+1
  1573  000B62                     
  1574                           ;doprnt.c: 866: eexp /= 10;
  1575  000B62  C0B5  F007         	movff	sprintf@eexp,___awdiv@dividend
  1576  000B66  C0B6  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1577  000B6A  0E00               	movlw	0
  1578  000B6C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1579  000B6E  0E0A               	movlw	10
  1580  000B70  6E09               	movwf	___awdiv@divisor^0,c
  1581  000B72  ECB6  F016         	call	___awdiv	;wreg free
  1582  000B76  C007  F0B5         	movff	?___awdiv,sprintf@eexp
  1583  000B7A  C008  F0B6         	movff	?___awdiv+1,sprintf@eexp+1
  1584  000B7E                     
  1585                           ;doprnt.c: 867: if(eexp < 0)
  1586  000B7E  0100               	movlb	0	; () banked
  1587  000B80  BFB6               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1588  000B82  EFC7  F005         	goto	u3510
  1589  000B86  EFC5  F005         	goto	u3511
  1590  000B8A                     u3511:
  1591  000B8A  EFCA  F005         	goto	l3287
  1592  000B8E                     u3510:
  1593  000B8E                     
  1594                           ; BSR set to: 0
  1595                           ;doprnt.c: 868: eexp--;
  1596  000B8E  07B5               	decf	sprintf@eexp& (0+255),f,b
  1597  000B90  A0D8               	btfss	status,0,c
  1598  000B92  07B6               	decf	(sprintf@eexp+1)& (0+255),f,b
  1599  000B94                     l3287:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1603  000B94  51B5               	movf	sprintf@eexp& (0+255),w,b
  1604  000B96  0800               	sublw	0
  1605  000B98  EC6C  F00E         	call	_scale
  1606  000B9C  C028  F0B1         	movff	?_scale,sprintf@tmpval
  1607  000BA0  C029  F0B2         	movff	?_scale+1,sprintf@tmpval+1
  1608  000BA4  C02A  F0B3         	movff	?_scale+2,sprintf@tmpval+2
  1609  000BA8  C02B  F0B4         	movff	?_scale+3,sprintf@tmpval+3
  1610  000BAC                     
  1611                           ;doprnt.c: 873: tmpval.integ *= fval;
  1612  000BAC  C0B1  F00F         	movff	sprintf@tmpval,___flmul@b
  1613  000BB0  C0B2  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1614  000BB4  C0B3  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1615  000BB8  C0B4  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1616  000BBC  C0B7  F013         	movff	sprintf@fval,___flmul@a
  1617  000BC0  C0B8  F014         	movff	sprintf@fval+1,___flmul@a+1
  1618  000BC4  C0B9  F015         	movff	sprintf@fval+2,___flmul@a+2
  1619  000BC8  C0BA  F016         	movff	sprintf@fval+3,___flmul@a+3
  1620  000BCC  EC57  F00C         	call	___flmul	;wreg free
  1621  000BD0  C00F  F0B1         	movff	?___flmul,sprintf@tmpval
  1622  000BD4  C010  F0B2         	movff	?___flmul+1,sprintf@tmpval+1
  1623  000BD8  C011  F0B3         	movff	?___flmul+2,sprintf@tmpval+2
  1624  000BDC  C012  F0B4         	movff	?___flmul+3,sprintf@tmpval+3
  1625  000BE0                     
  1626                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1627  000BE0  C0B1  F001         	movff	sprintf@tmpval,___flge@ff1
  1628  000BE4  C0B2  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1629  000BE8  C0B3  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1630  000BEC  C0B4  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1631  000BF0  0E00               	movlw	0
  1632  000BF2  6E05               	movwf	___flge@ff2^0,c
  1633  000BF4  0E00               	movlw	0
  1634  000BF6  6E06               	movwf	(___flge@ff2+1)^0,c
  1635  000BF8  0E80               	movlw	128
  1636  000BFA  6E07               	movwf	(___flge@ff2+2)^0,c
  1637  000BFC  0E3F               	movlw	63
  1638  000BFE  6E08               	movwf	(___flge@ff2+3)^0,c
  1639  000C00  EC34  F016         	call	___flge	;wreg free
  1640  000C04  B0D8               	btfsc	status,0,c
  1641  000C06  EF07  F006         	goto	u3521
  1642  000C0A  EF09  F006         	goto	u3520
  1643  000C0E                     u3521:
  1644  000C0E  EF0F  F006         	goto	l3295
  1645  000C12                     u3520:
  1646  000C12                     
  1647                           ;doprnt.c: 875: eexp--;
  1648  000C12  0100               	movlb	0	; () banked
  1649  000C14  07B5               	decf	sprintf@eexp& (0+255),f,b
  1650  000C16  A0D8               	btfss	status,0,c
  1651  000C18  07B6               	decf	(sprintf@eexp+1)& (0+255),f,b
  1652  000C1A  EF2B  F006         	goto	l3299
  1653  000C1E                     l3295:
  1654                           
  1655                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1656  000C1E  C0B1  F001         	movff	sprintf@tmpval,___flge@ff1
  1657  000C22  C0B2  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1658  000C26  C0B3  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1659  000C2A  C0B4  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1660  000C2E  0E00               	movlw	0
  1661  000C30  6E05               	movwf	___flge@ff2^0,c
  1662  000C32  0E00               	movlw	0
  1663  000C34  6E06               	movwf	(___flge@ff2+1)^0,c
  1664  000C36  0E20               	movlw	32
  1665  000C38  6E07               	movwf	(___flge@ff2+2)^0,c
  1666  000C3A  0E41               	movlw	65
  1667  000C3C  6E08               	movwf	(___flge@ff2+3)^0,c
  1668  000C3E  EC34  F016         	call	___flge	;wreg free
  1669  000C42  A0D8               	btfss	status,0,c
  1670  000C44  EF26  F006         	goto	u3531
  1671  000C48  EF28  F006         	goto	u3530
  1672  000C4C                     u3531:
  1673  000C4C  EF2B  F006         	goto	l3299
  1674  000C50                     u3530:
  1675  000C50                     
  1676                           ;doprnt.c: 877: eexp++;
  1677  000C50  0100               	movlb	0	; () banked
  1678  000C52  4BB5               	infsnz	sprintf@eexp& (0+255),f,b
  1679  000C54  2BB6               	incf	(sprintf@eexp+1)& (0+255),f,b
  1680  000C56                     l3299:
  1681                           
  1682                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1683  000C56  0100               	movlb	0	; () banked
  1684  000C58  BFBC               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1685  000C5A  EF3A  F006         	goto	u3540
  1686  000C5E  51BC               	movf	(sprintf@prec+1)& (0+255),w,b
  1687  000C60  E107               	bnz	u3541
  1688  000C62  0E0D               	movlw	13
  1689  000C64  5DBB               	subwf	sprintf@prec& (0+255),w,b
  1690  000C66  B0D8               	btfsc	status,0,c
  1691  000C68  EF38  F006         	goto	u3541
  1692  000C6C  EF3A  F006         	goto	u3540
  1693  000C70                     u3541:
  1694  000C70  EF57  F006         	goto	l3303
  1695  000C74                     u3540:
  1696  000C74                     
  1697                           ; BSR set to: 0
  1698                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1699  000C74  C0B7  F035         	movff	sprintf@fval,___fladd@b
  1700  000C78  C0B8  F036         	movff	sprintf@fval+1,___fladd@b+1
  1701  000C7C  C0B9  F037         	movff	sprintf@fval+2,___fladd@b+2
  1702  000C80  C0BA  F038         	movff	sprintf@fval+3,___fladd@b+3
  1703  000C84  51BB               	movf	sprintf@prec& (0+255),w,b
  1704  000C86  EC72  F010         	call	_fround
  1705  000C8A  C028  F039         	movff	?_fround,___fladd@a
  1706  000C8E  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1707  000C92  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1708  000C96  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1709  000C9A  ECF7  F009         	call	___fladd	;wreg free
  1710  000C9E  C035  F0B7         	movff	?___fladd,sprintf@fval
  1711  000CA2  C036  F0B8         	movff	?___fladd+1,sprintf@fval+1
  1712  000CA6  C037  F0B9         	movff	?___fladd+2,sprintf@fval+2
  1713  000CAA  C038  F0BA         	movff	?___fladd+3,sprintf@fval+3
  1714  000CAE                     l3303:
  1715                           
  1716                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1717  000CAE  0100               	movlb	0	; () banked
  1718  000CB0  BFB6               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1719  000CB2  EF66  F006         	goto	u3550
  1720  000CB6  51B6               	movf	(sprintf@eexp+1)& (0+255),w,b
  1721  000CB8  E107               	bnz	u3551
  1722  000CBA  0E0A               	movlw	10
  1723  000CBC  5DB5               	subwf	sprintf@eexp& (0+255),w,b
  1724  000CBE  B0D8               	btfsc	status,0,c
  1725  000CC0  EF64  F006         	goto	u3551
  1726  000CC4  EF66  F006         	goto	u3550
  1727  000CC8                     u3551:
  1728  000CC8  EFA3  F006         	goto	l3311
  1729  000CCC                     u3550:
  1730  000CCC                     
  1731                           ; BSR set to: 0
  1732  000CCC  C0B7  F001         	movff	sprintf@fval,___fleq@ff1
  1733  000CD0  C0B8  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1734  000CD4  C0B9  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1735  000CD8  C0BA  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1736  000CDC  0E00               	movlw	0
  1737  000CDE  6E05               	movwf	___fleq@ff2^0,c
  1738  000CE0  0E00               	movlw	0
  1739  000CE2  6E06               	movwf	(___fleq@ff2+1)^0,c
  1740  000CE4  0E00               	movlw	0
  1741  000CE6  6E07               	movwf	(___fleq@ff2+2)^0,c
  1742  000CE8  0E00               	movlw	0
  1743  000CEA  6E08               	movwf	(___fleq@ff2+3)^0,c
  1744  000CEC  EC70  F017         	call	___fleq	;wreg free
  1745  000CF0  B0D8               	btfsc	status,0,c
  1746  000CF2  EF7D  F006         	goto	u3561
  1747  000CF6  EF7F  F006         	goto	u3560
  1748  000CFA                     u3561:
  1749  000CFA  EFF8  F006         	goto	l3325
  1750  000CFE                     u3560:
  1751  000CFE  C0B7  F031         	movff	sprintf@fval,___fltol@f1
  1752  000D02  C0B8  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1753  000D06  C0B9  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1754  000D0A  C0BA  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1755  000D0E  ECB1  F015         	call	___fltol	;wreg free
  1756  000D12  5031               	movf	?___fltol^0,w,c
  1757  000D14  1032               	iorwf	(?___fltol+1)^0,w,c
  1758  000D16  1033               	iorwf	(?___fltol+2)^0,w,c
  1759  000D18  1034               	iorwf	(?___fltol+3)^0,w,c
  1760  000D1A  A4D8               	btfss	status,2,c
  1761  000D1C  EF92  F006         	goto	u3571
  1762  000D20  EF94  F006         	goto	u3570
  1763  000D24                     u3571:
  1764  000D24  EFF8  F006         	goto	l3325
  1765  000D28                     u3570:
  1766  000D28  0100               	movlb	0	; () banked
  1767  000D2A  BFB6               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1768  000D2C  EFA1  F006         	goto	u3581
  1769  000D30  51B6               	movf	(sprintf@eexp+1)& (0+255),w,b
  1770  000D32  E109               	bnz	u3580
  1771  000D34  0E02               	movlw	2
  1772  000D36  5DB5               	subwf	sprintf@eexp& (0+255),w,b
  1773  000D38  A0D8               	btfss	status,0,c
  1774  000D3A  EFA1  F006         	goto	u3581
  1775  000D3E  EFA3  F006         	goto	u3580
  1776  000D42                     u3581:
  1777  000D42  EFF8  F006         	goto	l3325
  1778  000D46                     u3580:
  1779  000D46                     l3311:
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1783  000D46  C0B1  F001         	movff	sprintf@tmpval,___flge@ff1
  1784  000D4A  C0B2  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1785  000D4E  C0B3  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1786  000D52  C0B4  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1787  000D56  0E5F               	movlw	95
  1788  000D58  6E05               	movwf	___flge@ff2^0,c
  1789  000D5A  0E70               	movlw	112
  1790  000D5C  6E06               	movwf	(___flge@ff2+1)^0,c
  1791  000D5E  0E89               	movlw	137
  1792  000D60  6E07               	movwf	(___flge@ff2+2)^0,c
  1793  000D62  0E40               	movlw	64
  1794  000D64  6E08               	movwf	(___flge@ff2+3)^0,c
  1795  000D66  EC34  F016         	call	___flge	;wreg free
  1796  000D6A  B0D8               	btfsc	status,0,c
  1797  000D6C  EFBA  F006         	goto	u3591
  1798  000D70  EFBC  F006         	goto	u3590
  1799  000D74                     u3591:
  1800  000D74  EFC3  F006         	goto	l3315
  1801  000D78                     u3590:
  1802  000D78                     
  1803                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1804  000D78  0100               	movlb	0	; () banked
  1805  000D7A  0EF7               	movlw	247
  1806  000D7C  27B5               	addwf	sprintf@eexp& (0+255),f,b
  1807  000D7E  0EFF               	movlw	255
  1808  000D80  23B6               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1809                           
  1810                           ;doprnt.c: 1148: }else{
  1811  000D82  EFC8  F006         	goto	l3317
  1812  000D86                     l3315:
  1813                           
  1814                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1815  000D86  0100               	movlb	0	; () banked
  1816  000D88  0EF8               	movlw	248
  1817  000D8A  27B5               	addwf	sprintf@eexp& (0+255),f,b
  1818  000D8C  0EFF               	movlw	255
  1819  000D8E  23B6               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1820  000D90                     l3317:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1824  000D90  51B5               	movf	sprintf@eexp& (0+255),w,b
  1825  000D92  EC6C  F00E         	call	_scale
  1826  000D96  C028  F0B1         	movff	?_scale,sprintf@tmpval
  1827  000D9A  C029  F0B2         	movff	?_scale+1,sprintf@tmpval+1
  1828  000D9E  C02A  F0B3         	movff	?_scale+2,sprintf@tmpval+2
  1829  000DA2  C02B  F0B4         	movff	?_scale+3,sprintf@tmpval+3
  1830  000DA6  C0B7  F001         	movff	sprintf@fval,__div_to_l_@f1
  1831  000DAA  C0B8  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1832  000DAE  C0B9  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1833  000DB2  C0BA  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1834  000DB6  C0B1  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1835  000DBA  C0B2  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1836  000DBE  C0B3  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1837  000DC2  C0B4  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1838  000DC6  EC85  F014         	call	__div_to_l_	;wreg free
  1839  000DCA  C001  F0A9         	movff	?__div_to_l_,sprintf@val
  1840  000DCE  C002  F0AA         	movff	?__div_to_l_+1,sprintf@val+1
  1841  000DD2  C003  F0AB         	movff	?__div_to_l_+2,sprintf@val+2
  1842  000DD6  C004  F0AC         	movff	?__div_to_l_+3,sprintf@val+3
  1843  000DDA                     
  1844                           ;doprnt.c: 1155: fval = 0.0;
  1845  000DDA  0E00               	movlw	0
  1846  000DDC  0100               	movlb	0	; () banked
  1847  000DDE  6FB7               	movwf	sprintf@fval& (0+255),b
  1848  000DE0  0E00               	movlw	0
  1849  000DE2  6FB8               	movwf	(sprintf@fval+1)& (0+255),b
  1850  000DE4  0E00               	movlw	0
  1851  000DE6  6FB9               	movwf	(sprintf@fval+2)& (0+255),b
  1852  000DE8  0E00               	movlw	0
  1853  000DEA  6FBA               	movwf	(sprintf@fval+3)& (0+255),b
  1854                           
  1855                           ;doprnt.c: 1156: } else {
  1856  000DEC  EF34  F007         	goto	l3329
  1857  000DF0                     l3325:
  1858                           
  1859                           ;doprnt.c: 1157: val = (unsigned long)fval;
  1860  000DF0  C0B7  F031         	movff	sprintf@fval,___fltol@f1
  1861  000DF4  C0B8  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1862  000DF8  C0B9  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1863  000DFC  C0BA  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1864  000E00  ECB1  F015         	call	___fltol	;wreg free
  1865  000E04  C031  F0A9         	movff	?___fltol,sprintf@val
  1866  000E08  C032  F0AA         	movff	?___fltol+1,sprintf@val+1
  1867  000E0C  C033  F0AB         	movff	?___fltol+2,sprintf@val+2
  1868  000E10  C034  F0AC         	movff	?___fltol+3,sprintf@val+3
  1869                           
  1870                           ;doprnt.c: 1158: fval -= (double)val;
  1871  000E14  C0B7  F045         	movff	sprintf@fval,___flsub@b
  1872  000E18  C0B8  F046         	movff	sprintf@fval+1,___flsub@b+1
  1873  000E1C  C0B9  F047         	movff	sprintf@fval+2,___flsub@b+2
  1874  000E20  C0BA  F048         	movff	sprintf@fval+3,___flsub@b+3
  1875  000E24  C0A9  F001         	movff	sprintf@val,___xxtofl@val
  1876  000E28  C0AA  F002         	movff	sprintf@val+1,___xxtofl@val+1
  1877  000E2C  C0AB  F003         	movff	sprintf@val+2,___xxtofl@val+2
  1878  000E30  C0AC  F004         	movff	sprintf@val+3,___xxtofl@val+3
  1879  000E34  0E00               	movlw	0
  1880  000E36  EC00  F013         	call	___xxtofl
  1881  000E3A  C001  F049         	movff	?___xxtofl,___flsub@a
  1882  000E3E  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  1883  000E42  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  1884  000E46  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  1885  000E4A  EC63  F019         	call	___flsub	;wreg free
  1886  000E4E  C045  F0B7         	movff	?___flsub,sprintf@fval
  1887  000E52  C046  F0B8         	movff	?___flsub+1,sprintf@fval+1
  1888  000E56  C047  F0B9         	movff	?___flsub+2,sprintf@fval+2
  1889  000E5A  C048  F0BA         	movff	?___flsub+3,sprintf@fval+3
  1890  000E5E                     
  1891                           ;doprnt.c: 1159: eexp = 0;
  1892  000E5E  0E00               	movlw	0
  1893  000E60  0100               	movlb	0	; () banked
  1894  000E62  6FB6               	movwf	(sprintf@eexp+1)& (0+255),b
  1895  000E64  0E00               	movlw	0
  1896  000E66  6FB5               	movwf	sprintf@eexp& (0+255),b
  1897  000E68                     l3329:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  1901  000E68  0E01               	movlw	1
  1902  000E6A  6FBD               	movwf	sprintf@c& (0+255),b
  1903  000E6C                     l3335:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;doprnt.c: 1163: if(val < dpowers[c])
  1907  000E6C  51BD               	movf	sprintf@c& (0+255),w,b
  1908  000E6E  0D04               	mullw	4
  1909  000E70  0E69               	movlw	low _dpowers
  1910  000E72  24F3               	addwf	243,w,c
  1911  000E74  6EF6               	movwf	tblptrl,c
  1912  000E76  0E08               	movlw	high _dpowers
  1913  000E78  20F4               	addwfc	244,w,c
  1914  000E7A  6EF7               	movwf	tblptrh,c
  1915  000E7C                     	if	0	;There are less than 3 active tblptr bytes
  1916  000E7C                     	endif
  1917  000E7C  0009               	tblrd		*+
  1918  000E7E  50F5               	movf	tablat,w,c
  1919  000E80  5DA9               	subwf	sprintf@val& (0+255),w,b
  1920  000E82  0009               	tblrd		*+
  1921  000E84  50F5               	movf	tablat,w,c
  1922  000E86  59AA               	subwfb	(sprintf@val+1)& (0+255),w,b
  1923  000E88  0009               	tblrd		*+
  1924  000E8A  50F5               	movf	tablat,w,c
  1925  000E8C  59AB               	subwfb	(sprintf@val+2)& (0+255),w,b
  1926  000E8E  0009               	tblrd		*+
  1927  000E90  50F5               	movf	tablat,w,c
  1928  000E92  59AC               	subwfb	(sprintf@val+3)& (0+255),w,b
  1929  000E94  B0D8               	btfsc	status,0,c
  1930  000E96  EF4F  F007         	goto	u3601
  1931  000E9A  EF51  F007         	goto	u3600
  1932  000E9E                     u3601:
  1933  000E9E  EF53  F007         	goto	l3339
  1934  000EA2                     u3600:
  1935  000EA2  EF5D  F007         	goto	l3343
  1936  000EA6                     l3339:
  1937                           
  1938                           ; BSR set to: 0
  1939  000EA6  2BBD               	incf	sprintf@c& (0+255),f,b
  1940  000EA8                     
  1941                           ; BSR set to: 0
  1942  000EA8  0E0A               	movlw	10
  1943  000EAA  19BD               	xorwf	sprintf@c& (0+255),w,b
  1944  000EAC  A4D8               	btfss	status,2,c
  1945  000EAE  EF5B  F007         	goto	u3611
  1946  000EB2  EF5D  F007         	goto	u3610
  1947  000EB6                     u3611:
  1948  000EB6  EF36  F007         	goto	l3335
  1949  000EBA                     u3610:
  1950  000EBA                     l3343:
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;doprnt.c: 1168: width -= prec + c + eexp;
  1954  000EBA  51BD               	movf	sprintf@c& (0+255),w,b
  1955  000EBC  25BB               	addwf	sprintf@prec& (0+255),w,b
  1956  000EBE  6E55               	movwf	??_sprintf^0,c
  1957  000EC0  0E00               	movlw	0
  1958  000EC2  21BC               	addwfc	(sprintf@prec+1)& (0+255),w,b
  1959  000EC4  6E56               	movwf	(??_sprintf+1)^0,c
  1960  000EC6  51B5               	movf	sprintf@eexp& (0+255),w,b
  1961  000EC8  2655               	addwf	??_sprintf^0,f,c
  1962  000ECA  51B6               	movf	(sprintf@eexp+1)& (0+255),w,b
  1963  000ECC  2256               	addwfc	(??_sprintf+1)^0,f,c
  1964  000ECE  5055               	movf	??_sprintf^0,w,c
  1965  000ED0  5FAF               	subwf	sprintf@width& (0+255),f,b
  1966  000ED2  5056               	movf	(??_sprintf+1)^0,w,c
  1967  000ED4  5BB0               	subwfb	(sprintf@width+1)& (0+255),f,b
  1968                           
  1969                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  1970  000ED6  51BB               	movf	sprintf@prec& (0+255),w,b
  1971  000ED8  11BC               	iorwf	(sprintf@prec+1)& (0+255),w,b
  1972  000EDA  B4D8               	btfsc	status,2,c
  1973  000EDC  EF72  F007         	goto	u3621
  1974  000EE0  EF74  F007         	goto	u3620
  1975  000EE4                     u3621:
  1976  000EE4  EF77  F007         	goto	l3347
  1977  000EE8                     u3620:
  1978  000EE8                     
  1979                           ; BSR set to: 0
  1980                           ;doprnt.c: 1174: width--;
  1981  000EE8  07AF               	decf	sprintf@width& (0+255),f,b
  1982  000EEA  A0D8               	btfss	status,0,c
  1983  000EEC  07B0               	decf	(sprintf@width+1)& (0+255),f,b
  1984  000EEE                     l3347:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;doprnt.c: 1175: if(flag & 0x03)
  1988  000EEE  0E03               	movlw	3
  1989  000EF0  15AD               	andwf	sprintf@flag& (0+255),w,b
  1990  000EF2  6E55               	movwf	??_sprintf^0,c
  1991  000EF4  0E00               	movlw	0
  1992  000EF6  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  1993  000EF8  6E56               	movwf	(??_sprintf+1)^0,c
  1994  000EFA  5055               	movf	??_sprintf^0,w,c
  1995  000EFC  1056               	iorwf	(??_sprintf+1)^0,w,c
  1996  000EFE  B4D8               	btfsc	status,2,c
  1997  000F00  EF84  F007         	goto	u3631
  1998  000F04  EF86  F007         	goto	u3630
  1999  000F08                     u3631:
  2000  000F08  EF95  F007         	goto	l3357
  2001  000F0C                     u3630:
  2002  000F0C                     l3349:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;doprnt.c: 1176: width--;
  2006  000F0C  07AF               	decf	sprintf@width& (0+255),f,b
  2007  000F0E  A0D8               	btfss	status,0,c
  2008  000F10  07B0               	decf	(sprintf@width+1)& (0+255),f,b
  2009  000F12  EF95  F007         	goto	l3357
  2010  000F16                     l3351:
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  2014  000F16  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2015  000F1A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2016  000F1E  0E20               	movlw	32
  2017  000F20  6EDF               	movwf	indf2,c
  2018  000F22                     
  2019                           ; BSR set to: 0
  2020  000F22  4A4D               	infsnz	sprintf@sp^0,f,c
  2021  000F24  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2022  000F26  EF86  F007         	goto	l3349
  2023  000F2A                     l3357:
  2024                           
  2025                           ; BSR set to: 0
  2026  000F2A  BFB0               	btfsc	(sprintf@width+1)& (0+255),7,b
  2027  000F2C  EFA2  F007         	goto	u3640
  2028  000F30  51B0               	movf	(sprintf@width+1)& (0+255),w,b
  2029  000F32  E106               	bnz	u3641
  2030  000F34  05AF               	decf	sprintf@width& (0+255),w,b
  2031  000F36  B0D8               	btfsc	status,0,c
  2032  000F38  EFA0  F007         	goto	u3641
  2033  000F3C  EFA2  F007         	goto	u3640
  2034  000F40                     u3641:
  2035  000F40  EF8B  F007         	goto	l3351
  2036  000F44                     u3640:
  2037  000F44                     
  2038                           ; BSR set to: 0
  2039                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  2040  000F44  0E03               	movlw	3
  2041  000F46  15AD               	andwf	sprintf@flag& (0+255),w,b
  2042  000F48  6E55               	movwf	??_sprintf^0,c
  2043  000F4A  0E00               	movlw	0
  2044  000F4C  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  2045  000F4E  6E56               	movwf	(??_sprintf+1)^0,c
  2046  000F50  5055               	movf	??_sprintf^0,w,c
  2047  000F52  1056               	iorwf	(??_sprintf+1)^0,w,c
  2048  000F54  B4D8               	btfsc	status,2,c
  2049  000F56  EFAF  F007         	goto	u3651
  2050  000F5A  EFB1  F007         	goto	u3650
  2051  000F5E                     u3651:
  2052  000F5E  EF05  F008         	goto	l3373
  2053  000F62                     u3650:
  2054  000F62                     
  2055                           ; BSR set to: 0
  2056                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  2057  000F62  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2058  000F66  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2059  000F6A  0E2D               	movlw	45
  2060  000F6C  6EDF               	movwf	indf2,c
  2061  000F6E                     l3363:
  2062                           
  2063                           ; BSR set to: 0
  2064  000F6E  4A4D               	infsnz	sprintf@sp^0,f,c
  2065  000F70  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2066  000F72  EF05  F008         	goto	l3373
  2067  000F76                     l3365:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  2071  000F76  C0A9  F001         	movff	sprintf@val,___lldiv@dividend
  2072  000F7A  C0AA  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2073  000F7E  C0AB  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2074  000F82  C0AC  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2075  000F86  51BD               	movf	sprintf@c& (0+255),w,b
  2076  000F88  0D04               	mullw	4
  2077  000F8A  0E69               	movlw	low _dpowers
  2078  000F8C  24F3               	addwf	243,w,c
  2079  000F8E  6EF6               	movwf	tblptrl,c
  2080  000F90  0E08               	movlw	high _dpowers
  2081  000F92  20F4               	addwfc	244,w,c
  2082  000F94  6EF7               	movwf	tblptrh,c
  2083  000F96                     	if	0	;There are less than 3 active tblptr bytes
  2084  000F96                     	endif
  2085  000F96  0009               	tblrd		*+
  2086  000F98  CFF5 F005          	movff	tablat,___lldiv@divisor
  2087  000F9C  0009               	tblrd		*+
  2088  000F9E  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2089  000FA2  0009               	tblrd		*+
  2090  000FA4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2091  000FA8  000A               	tblrd		*-
  2092  000FAA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2093  000FAE  ECC5  F017         	call	___lldiv	;wreg free
  2094  000FB2  C001  F0B1         	movff	?___lldiv,sprintf@tmpval
  2095  000FB6  C002  F0B2         	movff	?___lldiv+1,sprintf@tmpval+1
  2096  000FBA  C003  F0B3         	movff	?___lldiv+2,sprintf@tmpval+2
  2097  000FBE  C004  F0B4         	movff	?___lldiv+3,sprintf@tmpval+3
  2098  000FC2                     
  2099                           ;doprnt.c: 1228: tmpval.vd %= 10;
  2100  000FC2  C0B1  F001         	movff	sprintf@tmpval,___llmod@dividend
  2101  000FC6  C0B2  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2102  000FCA  C0B3  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2103  000FCE  C0B4  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2104  000FD2  0E0A               	movlw	10
  2105  000FD4  6E05               	movwf	___llmod@divisor^0,c
  2106  000FD6  0E00               	movlw	0
  2107  000FD8  6E06               	movwf	(___llmod@divisor+1)^0,c
  2108  000FDA  0E00               	movlw	0
  2109  000FDC  6E07               	movwf	(___llmod@divisor+2)^0,c
  2110  000FDE  0E00               	movlw	0
  2111  000FE0  6E08               	movwf	(___llmod@divisor+3)^0,c
  2112  000FE2  EC5D  F018         	call	___llmod	;wreg free
  2113  000FE6  C001  F0B1         	movff	?___llmod,sprintf@tmpval
  2114  000FEA  C002  F0B2         	movff	?___llmod+1,sprintf@tmpval+1
  2115  000FEE  C003  F0B3         	movff	?___llmod+2,sprintf@tmpval+2
  2116  000FF2  C004  F0B4         	movff	?___llmod+3,sprintf@tmpval+3
  2117  000FF6                     
  2118                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  2119  000FF6  0100               	movlb	0	; () banked
  2120  000FF8  51B1               	movf	sprintf@tmpval& (0+255),w,b
  2121  000FFA  0F30               	addlw	48
  2122  000FFC  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2123  001000  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2124  001004  6EDF               	movwf	indf2,c
  2125  001006  EFB7  F007         	goto	l3363
  2126  00100A                     l3373:
  2127                           
  2128                           ; BSR set to: 0
  2129  00100A  07BD               	decf	sprintf@c& (0+255),f,b
  2130  00100C  29BD               	incf	sprintf@c& (0+255),w,b
  2131  00100E  A4D8               	btfss	status,2,c
  2132  001010  EF0C  F008         	goto	u3661
  2133  001014  EF0E  F008         	goto	u3660
  2134  001018                     u3661:
  2135  001018  EFBB  F007         	goto	l3365
  2136  00101C                     u3660:
  2137  00101C  EF1B  F008         	goto	l3381
  2138  001020                     l3375:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  2142  001020  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2143  001024  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2144  001028  0E30               	movlw	48
  2145  00102A  6EDF               	movwf	indf2,c
  2146  00102C                     
  2147                           ; BSR set to: 0
  2148  00102C  4A4D               	infsnz	sprintf@sp^0,f,c
  2149  00102E  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2150  001030                     
  2151                           ; BSR set to: 0
  2152                           ;doprnt.c: 1235: eexp--;
  2153  001030  07B5               	decf	sprintf@eexp& (0+255),f,b
  2154  001032  A0D8               	btfss	status,0,c
  2155  001034  07B6               	decf	(sprintf@eexp+1)& (0+255),f,b
  2156  001036                     l3381:
  2157                           
  2158                           ; BSR set to: 0
  2159  001036  BFB6               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2160  001038  EF28  F008         	goto	u3670
  2161  00103C  51B6               	movf	(sprintf@eexp+1)& (0+255),w,b
  2162  00103E  E106               	bnz	u3671
  2163  001040  05B5               	decf	sprintf@eexp& (0+255),w,b
  2164  001042  B0D8               	btfsc	status,0,c
  2165  001044  EF26  F008         	goto	u3671
  2166  001048  EF28  F008         	goto	u3670
  2167  00104C                     u3671:
  2168  00104C  EF10  F008         	goto	l3375
  2169  001050                     u3670:
  2170  001050                     
  2171                           ; BSR set to: 0
  2172                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2173  001050  BFBC               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2174  001052  EF34  F008         	goto	u3681
  2175  001056  51BC               	movf	(sprintf@prec+1)& (0+255),w,b
  2176  001058  E109               	bnz	u3680
  2177  00105A  0E09               	movlw	9
  2178  00105C  5DBB               	subwf	sprintf@prec& (0+255),w,b
  2179  00105E  A0D8               	btfss	status,0,c
  2180  001060  EF34  F008         	goto	u3681
  2181  001064  EF36  F008         	goto	u3680
  2182  001068                     u3681:
  2183  001068  EF3A  F008         	goto	l214
  2184  00106C                     u3680:
  2185  00106C                     
  2186                           ; BSR set to: 0
  2187                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2188  00106C  0E08               	movlw	8
  2189  00106E  6FBD               	movwf	sprintf@c& (0+255),b
  2190  001070  EF3C  F008         	goto	l3387
  2191  001074                     l214:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  2195  001074  C0BB  F0BD         	movff	sprintf@prec,sprintf@c
  2196  001078                     l3387:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;doprnt.c: 1241: prec -= (int)c;
  2200  001078  51BD               	movf	sprintf@c& (0+255),w,b
  2201  00107A  5FBB               	subwf	sprintf@prec& (0+255),f,b
  2202  00107C  0E00               	movlw	0
  2203  00107E  5BBC               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2204  001080                     
  2205                           ; BSR set to: 0
  2206                           ;doprnt.c: 1245: if(c)
  2207  001080  51BD               	movf	sprintf@c& (0+255),w,b
  2208  001082  B4D8               	btfsc	status,2,c
  2209  001084  EF46  F008         	goto	u3691
  2210  001088  EF48  F008         	goto	u3690
  2211  00108C                     u3691:
  2212  00108C  EF50  F008         	goto	l3395
  2213  001090                     u3690:
  2214  001090                     
  2215                           ; BSR set to: 0
  2216                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  2217  001090  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2218  001094  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2219  001098  0E2E               	movlw	46
  2220  00109A  6EDF               	movwf	indf2,c
  2221  00109C                     
  2222                           ; BSR set to: 0
  2223  00109C  4A4D               	infsnz	sprintf@sp^0,f,c
  2224  00109E  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2225  0010A0                     l3395:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2229  0010A0  51BD               	movf	sprintf@c& (0+255),w,b
  2230  0010A2  EC6C  F00E         	call	_scale
  2231  0010A6  C028  F0A3         	movff	?_scale,_sprintf$983
  2232  0010AA  C029  F0A4         	movff	?_scale+1,_sprintf$983+1
  2233  0010AE  C02A  F0A5         	movff	?_scale+2,_sprintf$983+2
  2234  0010B2  C02B  F0A6         	movff	?_scale+3,_sprintf$983+3
  2235  0010B6                     
  2236                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2237  0010B6  C0B7  F013         	movff	sprintf@fval,___flmul@a
  2238  0010BA  C0B8  F014         	movff	sprintf@fval+1,___flmul@a+1
  2239  0010BE  C0B9  F015         	movff	sprintf@fval+2,___flmul@a+2
  2240  0010C2  C0BA  F016         	movff	sprintf@fval+3,___flmul@a+3
  2241  0010C6  C0A3  F00F         	movff	_sprintf$983,___flmul@b
  2242  0010CA  C0A4  F010         	movff	_sprintf$983+1,___flmul@b+1
  2243  0010CE  C0A5  F011         	movff	_sprintf$983+2,___flmul@b+2
  2244  0010D2  C0A6  F012         	movff	_sprintf$983+3,___flmul@b+3
  2245  0010D6  EC57  F00C         	call	___flmul	;wreg free
  2246  0010DA  C00F  F031         	movff	?___flmul,___fltol@f1
  2247  0010DE  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2248  0010E2  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2249  0010E6  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2250  0010EA  ECB1  F015         	call	___fltol	;wreg free
  2251  0010EE  C031  F0A9         	movff	?___fltol,sprintf@val
  2252  0010F2  C032  F0AA         	movff	?___fltol+1,sprintf@val+1
  2253  0010F6  C033  F0AB         	movff	?___fltol+2,sprintf@val+2
  2254  0010FA  C034  F0AC         	movff	?___fltol+3,sprintf@val+3
  2255                           
  2256                           ;doprnt.c: 1254: while(c--) {
  2257  0010FE  EFF1  F008         	goto	l3409
  2258  001102                     l3399:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  2262  001102  C0A9  F001         	movff	sprintf@val,___lldiv@dividend
  2263  001106  C0AA  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2264  00110A  C0AB  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2265  00110E  C0AC  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2266  001112  51BD               	movf	sprintf@c& (0+255),w,b
  2267  001114  0D04               	mullw	4
  2268  001116  0E69               	movlw	low _dpowers
  2269  001118  24F3               	addwf	243,w,c
  2270  00111A  6EF6               	movwf	tblptrl,c
  2271  00111C  0E08               	movlw	high _dpowers
  2272  00111E  20F4               	addwfc	244,w,c
  2273  001120  6EF7               	movwf	tblptrh,c
  2274  001122                     	if	0	;There are less than 3 active tblptr bytes
  2275  001122                     	endif
  2276  001122  0009               	tblrd		*+
  2277  001124  CFF5 F005          	movff	tablat,___lldiv@divisor
  2278  001128  0009               	tblrd		*+
  2279  00112A  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2280  00112E  0009               	tblrd		*+
  2281  001130  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2282  001134  000A               	tblrd		*-
  2283  001136  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2284  00113A  ECC5  F017         	call	___lldiv	;wreg free
  2285  00113E  C001  F0B1         	movff	?___lldiv,sprintf@tmpval
  2286  001142  C002  F0B2         	movff	?___lldiv+1,sprintf@tmpval+1
  2287  001146  C003  F0B3         	movff	?___lldiv+2,sprintf@tmpval+2
  2288  00114A  C004  F0B4         	movff	?___lldiv+3,sprintf@tmpval+3
  2289  00114E                     
  2290                           ;doprnt.c: 1256: tmpval.vd %= 10;
  2291  00114E  C0B1  F001         	movff	sprintf@tmpval,___llmod@dividend
  2292  001152  C0B2  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2293  001156  C0B3  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2294  00115A  C0B4  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2295  00115E  0E0A               	movlw	10
  2296  001160  6E05               	movwf	___llmod@divisor^0,c
  2297  001162  0E00               	movlw	0
  2298  001164  6E06               	movwf	(___llmod@divisor+1)^0,c
  2299  001166  0E00               	movlw	0
  2300  001168  6E07               	movwf	(___llmod@divisor+2)^0,c
  2301  00116A  0E00               	movlw	0
  2302  00116C  6E08               	movwf	(___llmod@divisor+3)^0,c
  2303  00116E  EC5D  F018         	call	___llmod	;wreg free
  2304  001172  C001  F0B1         	movff	?___llmod,sprintf@tmpval
  2305  001176  C002  F0B2         	movff	?___llmod+1,sprintf@tmpval+1
  2306  00117A  C003  F0B3         	movff	?___llmod+2,sprintf@tmpval+2
  2307  00117E  C004  F0B4         	movff	?___llmod+3,sprintf@tmpval+3
  2308  001182                     
  2309                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2310  001182  0100               	movlb	0	; () banked
  2311  001184  51B1               	movf	sprintf@tmpval& (0+255),w,b
  2312  001186  0F30               	addlw	48
  2313  001188  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2314  00118C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2315  001190  6EDF               	movwf	indf2,c
  2316  001192                     
  2317                           ; BSR set to: 0
  2318  001192  4A4D               	infsnz	sprintf@sp^0,f,c
  2319  001194  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2320  001196                     
  2321                           ; BSR set to: 0
  2322                           ;doprnt.c: 1258: val %= dpowers[c];
  2323  001196  C0A9  F001         	movff	sprintf@val,___llmod@dividend
  2324  00119A  C0AA  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2325  00119E  C0AB  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2326  0011A2  C0AC  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2327  0011A6  51BD               	movf	sprintf@c& (0+255),w,b
  2328  0011A8  0D04               	mullw	4
  2329  0011AA  0E69               	movlw	low _dpowers
  2330  0011AC  24F3               	addwf	243,w,c
  2331  0011AE  6EF6               	movwf	tblptrl,c
  2332  0011B0  0E08               	movlw	high _dpowers
  2333  0011B2  20F4               	addwfc	244,w,c
  2334  0011B4  6EF7               	movwf	tblptrh,c
  2335  0011B6                     	if	0	;There are less than 3 active tblptr bytes
  2336  0011B6                     	endif
  2337  0011B6  0009               	tblrd		*+
  2338  0011B8  CFF5 F005          	movff	tablat,___llmod@divisor
  2339  0011BC  0009               	tblrd		*+
  2340  0011BE  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2341  0011C2  0009               	tblrd		*+
  2342  0011C4  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2343  0011C8  000A               	tblrd		*-
  2344  0011CA  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2345  0011CE  EC5D  F018         	call	___llmod	;wreg free
  2346  0011D2  C001  F0A9         	movff	?___llmod,sprintf@val
  2347  0011D6  C002  F0AA         	movff	?___llmod+1,sprintf@val+1
  2348  0011DA  C003  F0AB         	movff	?___llmod+2,sprintf@val+2
  2349  0011DE  C004  F0AC         	movff	?___llmod+3,sprintf@val+3
  2350  0011E2                     l3409:
  2351  0011E2  0100               	movlb	0	; () banked
  2352  0011E4  07BD               	decf	sprintf@c& (0+255),f,b
  2353  0011E6  29BD               	incf	sprintf@c& (0+255),w,b
  2354  0011E8  A4D8               	btfss	status,2,c
  2355  0011EA  EFF9  F008         	goto	u3701
  2356  0011EE  EFFB  F008         	goto	u3700
  2357  0011F2                     u3701:
  2358  0011F2  EF81  F008         	goto	l3399
  2359  0011F6                     u3700:
  2360  0011F6  EF08  F009         	goto	l3417
  2361  0011FA                     l3411:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  2365  0011FA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2366  0011FE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2367  001202  0E30               	movlw	48
  2368  001204  6EDF               	movwf	indf2,c
  2369  001206                     
  2370                           ; BSR set to: 0
  2371  001206  4A4D               	infsnz	sprintf@sp^0,f,c
  2372  001208  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2373  00120A                     
  2374                           ; BSR set to: 0
  2375                           ;doprnt.c: 1263: prec--;
  2376  00120A  07BB               	decf	sprintf@prec& (0+255),f,b
  2377  00120C  A0D8               	btfss	status,0,c
  2378  00120E  07BC               	decf	(sprintf@prec+1)& (0+255),f,b
  2379  001210                     l3417:
  2380                           
  2381                           ; BSR set to: 0
  2382  001210  51BB               	movf	sprintf@prec& (0+255),w,b
  2383  001212  11BC               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2384  001214  A4D8               	btfss	status,2,c
  2385  001216  EF0F  F009         	goto	u3711
  2386  00121A  EF11  F009         	goto	u3710
  2387  00121E                     u3711:
  2388  00121E  EFFD  F008         	goto	l3411
  2389  001222                     u3710:
  2390  001222  EFDF  F009         	goto	l3467
  2391  001226                     l3419:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  2395  001226  51BB               	movf	sprintf@prec& (0+255),w,b
  2396  001228  11BC               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2397  00122A  A4D8               	btfss	status,2,c
  2398  00122C  EF1A  F009         	goto	u3721
  2399  001230  EF1C  F009         	goto	u3720
  2400  001234                     u3721:
  2401  001234  EF29  F009         	goto	l3425
  2402  001238                     u3720:
  2403  001238                     
  2404                           ; BSR set to: 0
  2405  001238  51A9               	movf	sprintf@val& (0+255),w,b
  2406  00123A  11AA               	iorwf	(sprintf@val+1)& (0+255),w,b
  2407  00123C  11AB               	iorwf	(sprintf@val+2)& (0+255),w,b
  2408  00123E  11AC               	iorwf	(sprintf@val+3)& (0+255),w,b
  2409  001240  A4D8               	btfss	status,2,c
  2410  001242  EF25  F009         	goto	u3731
  2411  001246  EF27  F009         	goto	u3730
  2412  00124A                     u3731:
  2413  00124A  EF29  F009         	goto	l3425
  2414  00124E                     u3730:
  2415  00124E                     
  2416                           ; BSR set to: 0
  2417                           ;doprnt.c: 1317: prec++;
  2418  00124E  4BBB               	infsnz	sprintf@prec& (0+255),f,b
  2419  001250  2BBC               	incf	(sprintf@prec+1)& (0+255),f,b
  2420  001252                     l3425:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;doprnt.c: 1365: if(c < prec)
  2424  001252  51BD               	movf	sprintf@c& (0+255),w,b
  2425  001254  6E55               	movwf	??_sprintf^0,c
  2426  001256  6A56               	clrf	(??_sprintf+1)^0,c
  2427  001258  51BB               	movf	sprintf@prec& (0+255),w,b
  2428  00125A  5C55               	subwf	??_sprintf^0,w,c
  2429  00125C  5056               	movf	(??_sprintf+1)^0,w,c
  2430  00125E  0A80               	xorlw	128
  2431  001260  6E57               	movwf	(??_sprintf+2)^0,c
  2432  001262  51BC               	movf	(sprintf@prec+1)& (0+255),w,b
  2433  001264  0A80               	xorlw	128
  2434  001266  5857               	subwfb	(??_sprintf+2)^0,w,c
  2435  001268  B0D8               	btfsc	status,0,c
  2436  00126A  EF39  F009         	goto	u3741
  2437  00126E  EF3B  F009         	goto	u3740
  2438  001272                     u3741:
  2439  001272  EF3F  F009         	goto	l3429
  2440  001276                     u3740:
  2441  001276                     
  2442                           ; BSR set to: 0
  2443                           ;doprnt.c: 1366: c = (char)prec;
  2444  001276  C0BB  F0BD         	movff	sprintf@prec,sprintf@c
  2445  00127A  EF54  F009         	goto	l3433
  2446  00127E                     l3429:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;doprnt.c: 1367: else if(prec < c)
  2450  00127E  51BD               	movf	sprintf@c& (0+255),w,b
  2451  001280  6E55               	movwf	??_sprintf^0,c
  2452  001282  6A56               	clrf	(??_sprintf+1)^0,c
  2453  001284  5055               	movf	??_sprintf^0,w,c
  2454  001286  5DBB               	subwf	sprintf@prec& (0+255),w,b
  2455  001288  51BC               	movf	(sprintf@prec+1)& (0+255),w,b
  2456  00128A  0A80               	xorlw	128
  2457  00128C  6E57               	movwf	(??_sprintf+2)^0,c
  2458  00128E  5056               	movf	(??_sprintf+1)^0,w,c
  2459  001290  0A80               	xorlw	128
  2460  001292  5857               	subwfb	(??_sprintf+2)^0,w,c
  2461  001294  B0D8               	btfsc	status,0,c
  2462  001296  EF4F  F009         	goto	u3751
  2463  00129A  EF51  F009         	goto	u3750
  2464  00129E                     u3751:
  2465  00129E  EF54  F009         	goto	l3433
  2466  0012A2                     u3750:
  2467  0012A2                     
  2468                           ; BSR set to: 0
  2469                           ;doprnt.c: 1368: prec = c;
  2470  0012A2  C0BD  F0BB         	movff	sprintf@c,sprintf@prec
  2471  0012A6  6BBC               	clrf	(sprintf@prec+1)& (0+255),b
  2472  0012A8                     l3433:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;doprnt.c: 1371: if(width && flag & 0x03)
  2476  0012A8  51AF               	movf	sprintf@width& (0+255),w,b
  2477  0012AA  11B0               	iorwf	(sprintf@width+1)& (0+255),w,b
  2478  0012AC  B4D8               	btfsc	status,2,c
  2479  0012AE  EF5B  F009         	goto	u3761
  2480  0012B2  EF5D  F009         	goto	u3760
  2481  0012B6                     u3761:
  2482  0012B6  EF6F  F009         	goto	l3439
  2483  0012BA                     u3760:
  2484  0012BA                     
  2485                           ; BSR set to: 0
  2486  0012BA  0E03               	movlw	3
  2487  0012BC  15AD               	andwf	sprintf@flag& (0+255),w,b
  2488  0012BE  6E55               	movwf	??_sprintf^0,c
  2489  0012C0  0E00               	movlw	0
  2490  0012C2  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  2491  0012C4  6E56               	movwf	(??_sprintf+1)^0,c
  2492  0012C6  5055               	movf	??_sprintf^0,w,c
  2493  0012C8  1056               	iorwf	(??_sprintf+1)^0,w,c
  2494  0012CA  B4D8               	btfsc	status,2,c
  2495  0012CC  EF6A  F009         	goto	u3771
  2496  0012D0  EF6C  F009         	goto	u3770
  2497  0012D4                     u3771:
  2498  0012D4  EF6F  F009         	goto	l3439
  2499  0012D8                     u3770:
  2500  0012D8                     
  2501                           ; BSR set to: 0
  2502                           ;doprnt.c: 1372: width--;
  2503  0012D8  07AF               	decf	sprintf@width& (0+255),f,b
  2504  0012DA  A0D8               	btfss	status,0,c
  2505  0012DC  07B0               	decf	(sprintf@width+1)& (0+255),f,b
  2506  0012DE                     l3439:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;doprnt.c: 1374: if(flag & 0x4000) {
  2510  0012DE  ADAE               	btfss	(sprintf@flag+1)& (0+255),6,b
  2511  0012E0  EF74  F009         	goto	u3781
  2512  0012E4  EF76  F009         	goto	u3780
  2513  0012E8                     u3781:
  2514  0012E8  EF8F  F009         	goto	l3447
  2515  0012EC                     u3780:
  2516  0012EC                     
  2517                           ; BSR set to: 0
  2518                           ;doprnt.c: 1375: if(width > prec)
  2519  0012EC  51AF               	movf	sprintf@width& (0+255),w,b
  2520  0012EE  5DBB               	subwf	sprintf@prec& (0+255),w,b
  2521  0012F0  51BC               	movf	(sprintf@prec+1)& (0+255),w,b
  2522  0012F2  0A80               	xorlw	128
  2523  0012F4  6E55               	movwf	??_sprintf^0,c
  2524  0012F6  51B0               	movf	(sprintf@width+1)& (0+255),w,b
  2525  0012F8  0A80               	xorlw	128
  2526  0012FA  5855               	subwfb	??_sprintf^0,w,c
  2527  0012FC  B0D8               	btfsc	status,0,c
  2528  0012FE  EF83  F009         	goto	u3791
  2529  001302  EF85  F009         	goto	u3790
  2530  001306                     u3791:
  2531  001306  EF8B  F009         	goto	l3445
  2532  00130A                     u3790:
  2533  00130A                     
  2534                           ; BSR set to: 0
  2535                           ;doprnt.c: 1376: width -= prec;
  2536  00130A  51BB               	movf	sprintf@prec& (0+255),w,b
  2537  00130C  5FAF               	subwf	sprintf@width& (0+255),f,b
  2538  00130E  51BC               	movf	(sprintf@prec+1)& (0+255),w,b
  2539  001310  5BB0               	subwfb	(sprintf@width+1)& (0+255),f,b
  2540  001312  EF8F  F009         	goto	l3447
  2541  001316                     l3445:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  2545  001316  0E00               	movlw	0
  2546  001318  6FB0               	movwf	(sprintf@width+1)& (0+255),b
  2547  00131A  0E00               	movlw	0
  2548  00131C  6FAF               	movwf	sprintf@width& (0+255),b
  2549  00131E                     l3447:
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  2553  00131E  51BD               	movf	sprintf@c& (0+255),w,b
  2554  001320  6E55               	movwf	??_sprintf^0,c
  2555  001322  6A56               	clrf	(??_sprintf+1)^0,c
  2556  001324  51AF               	movf	sprintf@width& (0+255),w,b
  2557  001326  5C55               	subwf	??_sprintf^0,w,c
  2558  001328  5056               	movf	(??_sprintf+1)^0,w,c
  2559  00132A  0A80               	xorlw	128
  2560  00132C  6E57               	movwf	(??_sprintf+2)^0,c
  2561  00132E  51B0               	movf	(sprintf@width+1)& (0+255),w,b
  2562  001330  0A80               	xorlw	128
  2563  001332  5857               	subwfb	(??_sprintf+2)^0,w,c
  2564  001334  B0D8               	btfsc	status,0,c
  2565  001336  EF9F  F009         	goto	u3801
  2566  00133A  EFA1  F009         	goto	u3800
  2567  00133E                     u3801:
  2568  00133E  EFA7  F009         	goto	l3451
  2569  001342                     u3800:
  2570  001342                     
  2571                           ; BSR set to: 0
  2572                           ;doprnt.c: 1408: width -= c;
  2573  001342  51BD               	movf	sprintf@c& (0+255),w,b
  2574  001344  5FAF               	subwf	sprintf@width& (0+255),f,b
  2575  001346  0E00               	movlw	0
  2576  001348  5BB0               	subwfb	(sprintf@width+1)& (0+255),f,b
  2577  00134A  EFAB  F009         	goto	l3453
  2578  00134E                     l3451:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  2582  00134E  0E00               	movlw	0
  2583  001350  6FB0               	movwf	(sprintf@width+1)& (0+255),b
  2584  001352  0E00               	movlw	0
  2585  001354  6FAF               	movwf	sprintf@width& (0+255),b
  2586  001356                     l3453:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2590  001356  51AF               	movf	sprintf@width& (0+255),w,b
  2591  001358  11B0               	iorwf	(sprintf@width+1)& (0+255),w,b
  2592  00135A  B4D8               	btfsc	status,2,c
  2593  00135C  EFB2  F009         	goto	u3811
  2594  001360  EFB4  F009         	goto	u3810
  2595  001364                     u3811:
  2596  001364  EFC8  F009         	goto	l3461
  2597  001368                     u3810:
  2598  001368                     l3455:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  2602  001368  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2603  00136C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2604  001370  0E20               	movlw	32
  2605  001372  6EDF               	movwf	indf2,c
  2606  001374                     
  2607                           ; BSR set to: 0
  2608  001374  4A4D               	infsnz	sprintf@sp^0,f,c
  2609  001376  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2610  001378                     
  2611                           ; BSR set to: 0
  2612                           ;doprnt.c: 1457: while(--width);
  2613  001378  07AF               	decf	sprintf@width& (0+255),f,b
  2614  00137A  A0D8               	btfss	status,0,c
  2615  00137C  07B0               	decf	(sprintf@width+1)& (0+255),f,b
  2616  00137E  51AF               	movf	sprintf@width& (0+255),w,b
  2617  001380  11B0               	iorwf	(sprintf@width+1)& (0+255),w,b
  2618  001382  A4D8               	btfss	status,2,c
  2619  001384  EFC6  F009         	goto	u3821
  2620  001388  EFC8  F009         	goto	u3820
  2621  00138C                     u3821:
  2622  00138C  EFB4  F009         	goto	l3455
  2623  001390                     u3820:
  2624  001390                     l3461:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;doprnt.c: 1464: if(flag & 0x03)
  2628  001390  0E03               	movlw	3
  2629  001392  15AD               	andwf	sprintf@flag& (0+255),w,b
  2630  001394  6E55               	movwf	??_sprintf^0,c
  2631  001396  0E00               	movlw	0
  2632  001398  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  2633  00139A  6E56               	movwf	(??_sprintf+1)^0,c
  2634  00139C  5055               	movf	??_sprintf^0,w,c
  2635  00139E  1056               	iorwf	(??_sprintf+1)^0,w,c
  2636  0013A0  B4D8               	btfsc	status,2,c
  2637  0013A2  EFD5  F009         	goto	u3831
  2638  0013A6  EFD7  F009         	goto	u3830
  2639  0013AA                     u3831:
  2640  0013AA  EFDF  F009         	goto	l3467
  2641  0013AE                     u3830:
  2642  0013AE                     
  2643                           ; BSR set to: 0
  2644                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2645  0013AE  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2646  0013B2  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2647  0013B6  0E2D               	movlw	45
  2648  0013B8  6EDF               	movwf	indf2,c
  2649  0013BA  EF79  F004         	goto	l3215
  2650  0013BE                     l3467:
  2651                           
  2652                           ; BSR set to: 0
  2653  0013BE  C04F  FFF6         	movff	sprintf@f,tblptrl
  2654  0013C2  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2655  0013C6  4A4F               	infsnz	sprintf@f^0,f,c
  2656  0013C8  2A50               	incf	(sprintf@f+1)^0,f,c
  2657  0013CA                     	if	0	;tblptru may be non-zero
  2658  0013CA                     	endif
  2659  0013CA                     	if	0	;tblptru may be non-zero
  2660  0013CA                     	endif
  2661  0013CA  0008               	tblrd		*
  2662  0013CC  CFF5 F0BD          	movff	tablat,sprintf@c
  2663  0013D0  51BD               	movf	sprintf@c& (0+255),w,b
  2664  0013D2  A4D8               	btfss	status,2,c
  2665  0013D4  EFEE  F009         	goto	u3841
  2666  0013D8  EFF0  F009         	goto	u3840
  2667  0013DC                     u3841:
  2668  0013DC  EF6A  F004         	goto	l3211
  2669  0013E0                     u3840:
  2670  0013E0                     l3469:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;doprnt.c: 1564: *sp = 0;
  2674  0013E0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2675  0013E4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2676  0013E8  0E00               	movlw	0
  2677  0013EA  6EDF               	movwf	indf2,c
  2678  0013EC                     
  2679                           ; BSR set to: 0
  2680  0013EC  0012               	return		;funcret
  2681  0013EE                     __end_of_sprintf:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _scale *****************
  2685 ;; Defined at:
  2686 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  scl             1    wreg     char 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  scl             1   47[COMRAM] char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  4   39[COMRAM] char 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2700 ;;      Params:         4       0       0       0       0       0       0       0       0
  2701 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2703 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2704 ;;Total ram usage:        9 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		___awdiv
  2709 ;;		___awmod
  2710 ;;		___flmul
  2711 ;; This function is called by:
  2712 ;;		_sprintf
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text2
  2717  001CD8                     __ptext2:
  2718                           	callstack 0
  2719  001CD8                     _scale:
  2720                           	callstack 27
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;incstack = 0
  2724                           ;scale@scl stored from wreg
  2725  001CD8  6E30               	movwf	scale@scl^0,c
  2726  001CDA                     
  2727                           ;doprnt.c: 436: if(scl < 0) {
  2728  001CDA  BE30               	btfsc	scale@scl^0,7,c
  2729  001CDC  EF74  F00E         	goto	u2780
  2730  001CE0  EF72  F00E         	goto	u2781
  2731  001CE4                     u2781:
  2732  001CE4  EF74  F00F         	goto	l2801
  2733  001CE8                     u2780:
  2734  001CE8                     
  2735                           ;doprnt.c: 437: scl = -scl;
  2736  001CE8  6C30               	negf	scale@scl^0,c
  2737                           
  2738                           ;doprnt.c: 438: if(scl>=110)
  2739  001CEA  5030               	movf	scale@scl^0,w,c
  2740  001CEC  0A80               	xorlw	128
  2741  001CEE  0F12               	addlw	-238
  2742  001CF0  A0D8               	btfss	status,0,c
  2743  001CF2  EF7D  F00E         	goto	u2791
  2744  001CF6  EF7F  F00E         	goto	u2790
  2745  001CFA                     u2791:
  2746  001CFA  EF08  F00F         	goto	l2791
  2747  001CFE                     u2790:
  2748  001CFE                     
  2749                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2750  001CFE  0E00               	movlw	0
  2751  001D00  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2752  001D02  0E0A               	movlw	10
  2753  001D04  6E09               	movwf	___awdiv@divisor^0,c
  2754  001D06  0E00               	movlw	0
  2755  001D08  6E04               	movwf	(___awmod@divisor+1)^0,c
  2756  001D0A  0E64               	movlw	100
  2757  001D0C  6E03               	movwf	___awmod@divisor^0,c
  2758  001D0E  5030               	movf	scale@scl^0,w,c
  2759  001D10  6E01               	movwf	___awmod@dividend^0,c
  2760  001D12  6A02               	clrf	(___awmod@dividend+1)^0,c
  2761  001D14  BE01               	btfsc	___awmod@dividend^0,7,c
  2762  001D16  0602               	decf	(___awmod@dividend+1)^0,f,c
  2763  001D18  EC18  F017         	call	___awmod	;wreg free
  2764  001D1C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2765  001D20  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2766  001D24  ECB6  F016         	call	___awdiv	;wreg free
  2767  001D28  0E09               	movlw	9
  2768  001D2A  2607               	addwf	?___awdiv^0,f,c
  2769  001D2C  5007               	movf	?___awdiv^0,w,c
  2770  001D2E  0D04               	mullw	4
  2771  001D30  0E35               	movlw	low __npowers_
  2772  001D32  24F3               	addwf	243,w,c
  2773  001D34  6EF6               	movwf	tblptrl,c
  2774  001D36  0E08               	movlw	high __npowers_
  2775  001D38  20F4               	addwfc	244,w,c
  2776  001D3A  6EF7               	movwf	tblptrh,c
  2777  001D3C                     	if	0	;There are less than 3 active tblptr bytes
  2778  001D3C                     	endif
  2779  001D3C  0009               	tblrd		*+
  2780  001D3E  CFF5 F013          	movff	tablat,___flmul@a
  2781  001D42  0009               	tblrd		*+
  2782  001D44  CFF5 F014          	movff	tablat,___flmul@a+1
  2783  001D48  0009               	tblrd		*+
  2784  001D4A  CFF5 F015          	movff	tablat,___flmul@a+2
  2785  001D4E  000A               	tblrd		*-
  2786  001D50  CFF5 F016          	movff	tablat,___flmul@a+3
  2787  001D54  0E00               	movlw	0
  2788  001D56  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2789  001D58  0E64               	movlw	100
  2790  001D5A  6E09               	movwf	___awdiv@divisor^0,c
  2791  001D5C  5030               	movf	scale@scl^0,w,c
  2792  001D5E  6E07               	movwf	___awdiv@dividend^0,c
  2793  001D60  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2794  001D62  BE07               	btfsc	___awdiv@dividend^0,7,c
  2795  001D64  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2796  001D66  ECB6  F016         	call	___awdiv	;wreg free
  2797  001D6A  0E12               	movlw	18
  2798  001D6C  2607               	addwf	?___awdiv^0,f,c
  2799  001D6E  5007               	movf	?___awdiv^0,w,c
  2800  001D70  0D04               	mullw	4
  2801  001D72  0E35               	movlw	low __npowers_
  2802  001D74  24F3               	addwf	243,w,c
  2803  001D76  6EF6               	movwf	tblptrl,c
  2804  001D78  0E08               	movlw	high __npowers_
  2805  001D7A  20F4               	addwfc	244,w,c
  2806  001D7C  6EF7               	movwf	tblptrh,c
  2807  001D7E                     	if	0	;There are less than 3 active tblptr bytes
  2808  001D7E                     	endif
  2809  001D7E  0009               	tblrd		*+
  2810  001D80  CFF5 F00F          	movff	tablat,___flmul@b
  2811  001D84  0009               	tblrd		*+
  2812  001D86  CFF5 F010          	movff	tablat,___flmul@b+1
  2813  001D8A  0009               	tblrd		*+
  2814  001D8C  CFF5 F011          	movff	tablat,___flmul@b+2
  2815  001D90  000A               	tblrd		*-
  2816  001D92  CFF5 F012          	movff	tablat,___flmul@b+3
  2817  001D96  EC57  F00C         	call	___flmul	;wreg free
  2818  001D9A  C00F  F02C         	movff	?___flmul,_scale$982
  2819  001D9E  C010  F02D         	movff	?___flmul+1,_scale$982+1
  2820  001DA2  C011  F02E         	movff	?___flmul+2,_scale$982+2
  2821  001DA6  C012  F02F         	movff	?___flmul+3,_scale$982+3
  2822                           
  2823                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2824  001DAA  C02C  F00F         	movff	_scale$982,___flmul@b
  2825  001DAE  C02D  F010         	movff	_scale$982+1,___flmul@b+1
  2826  001DB2  C02E  F011         	movff	_scale$982+2,___flmul@b+2
  2827  001DB6  C02F  F012         	movff	_scale$982+3,___flmul@b+3
  2828  001DBA  0E00               	movlw	0
  2829  001DBC  6E04               	movwf	(___awmod@divisor+1)^0,c
  2830  001DBE  0E0A               	movlw	10
  2831  001DC0  6E03               	movwf	___awmod@divisor^0,c
  2832  001DC2  5030               	movf	scale@scl^0,w,c
  2833  001DC4  6E01               	movwf	___awmod@dividend^0,c
  2834  001DC6  6A02               	clrf	(___awmod@dividend+1)^0,c
  2835  001DC8  BE01               	btfsc	___awmod@dividend^0,7,c
  2836  001DCA  0602               	decf	(___awmod@dividend+1)^0,f,c
  2837  001DCC  EC18  F017         	call	___awmod	;wreg free
  2838  001DD0  5001               	movf	?___awmod^0,w,c
  2839  001DD2  0D04               	mullw	4
  2840  001DD4  0E35               	movlw	low __npowers_
  2841  001DD6  24F3               	addwf	243,w,c
  2842  001DD8  6EF6               	movwf	tblptrl,c
  2843  001DDA  0E08               	movlw	high __npowers_
  2844  001DDC  20F4               	addwfc	244,w,c
  2845  001DDE  6EF7               	movwf	tblptrh,c
  2846  001DE0                     	if	0	;There are less than 3 active tblptr bytes
  2847  001DE0                     	endif
  2848  001DE0  0009               	tblrd		*+
  2849  001DE2  CFF5 F013          	movff	tablat,___flmul@a
  2850  001DE6  0009               	tblrd		*+
  2851  001DE8  CFF5 F014          	movff	tablat,___flmul@a+1
  2852  001DEC  0009               	tblrd		*+
  2853  001DEE  CFF5 F015          	movff	tablat,___flmul@a+2
  2854  001DF2  000A               	tblrd		*-
  2855  001DF4  CFF5 F016          	movff	tablat,___flmul@a+3
  2856  001DF8  EC57  F00C         	call	___flmul	;wreg free
  2857  001DFC  C00F  F028         	movff	?___flmul,?_scale
  2858  001E00  C010  F029         	movff	?___flmul+1,?_scale+1
  2859  001E04  C011  F02A         	movff	?___flmul+2,?_scale+2
  2860  001E08  C012  F02B         	movff	?___flmul+3,?_scale+3
  2861  001E0C  EF71  F010         	goto	l155
  2862  001E10                     l2791:
  2863                           
  2864                           ;doprnt.c: 440: else if(scl > 10)
  2865  001E10  5030               	movf	scale@scl^0,w,c
  2866  001E12  0A80               	xorlw	128
  2867  001E14  0F75               	addlw	-139
  2868  001E16  A0D8               	btfss	status,0,c
  2869  001E18  EF10  F00F         	goto	u2801
  2870  001E1C  EF12  F00F         	goto	u2800
  2871  001E20                     u2801:
  2872  001E20  EF5E  F00F         	goto	l2797
  2873  001E24                     u2800:
  2874  001E24                     
  2875                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2876  001E24  0E00               	movlw	0
  2877  001E26  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2878  001E28  0E0A               	movlw	10
  2879  001E2A  6E09               	movwf	___awdiv@divisor^0,c
  2880  001E2C  5030               	movf	scale@scl^0,w,c
  2881  001E2E  6E07               	movwf	___awdiv@dividend^0,c
  2882  001E30  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2883  001E32  BE07               	btfsc	___awdiv@dividend^0,7,c
  2884  001E34  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2885  001E36  ECB6  F016         	call	___awdiv	;wreg free
  2886  001E3A  0E09               	movlw	9
  2887  001E3C  2607               	addwf	?___awdiv^0,f,c
  2888  001E3E  5007               	movf	?___awdiv^0,w,c
  2889  001E40  0D04               	mullw	4
  2890  001E42  0E35               	movlw	low __npowers_
  2891  001E44  24F3               	addwf	243,w,c
  2892  001E46  6EF6               	movwf	tblptrl,c
  2893  001E48  0E08               	movlw	high __npowers_
  2894  001E4A  20F4               	addwfc	244,w,c
  2895  001E4C  6EF7               	movwf	tblptrh,c
  2896  001E4E                     	if	0	;There are less than 3 active tblptr bytes
  2897  001E4E                     	endif
  2898  001E4E  0009               	tblrd		*+
  2899  001E50  CFF5 F00F          	movff	tablat,___flmul@b
  2900  001E54  0009               	tblrd		*+
  2901  001E56  CFF5 F010          	movff	tablat,___flmul@b+1
  2902  001E5A  0009               	tblrd		*+
  2903  001E5C  CFF5 F011          	movff	tablat,___flmul@b+2
  2904  001E60  000A               	tblrd		*-
  2905  001E62  CFF5 F012          	movff	tablat,___flmul@b+3
  2906  001E66  0E00               	movlw	0
  2907  001E68  6E04               	movwf	(___awmod@divisor+1)^0,c
  2908  001E6A  0E0A               	movlw	10
  2909  001E6C  6E03               	movwf	___awmod@divisor^0,c
  2910  001E6E  5030               	movf	scale@scl^0,w,c
  2911  001E70  6E01               	movwf	___awmod@dividend^0,c
  2912  001E72  6A02               	clrf	(___awmod@dividend+1)^0,c
  2913  001E74  BE01               	btfsc	___awmod@dividend^0,7,c
  2914  001E76  0602               	decf	(___awmod@dividend+1)^0,f,c
  2915  001E78  EC18  F017         	call	___awmod	;wreg free
  2916  001E7C  5001               	movf	?___awmod^0,w,c
  2917  001E7E  0D04               	mullw	4
  2918  001E80  0E35               	movlw	low __npowers_
  2919  001E82  24F3               	addwf	243,w,c
  2920  001E84  6EF6               	movwf	tblptrl,c
  2921  001E86  0E08               	movlw	high __npowers_
  2922  001E88  20F4               	addwfc	244,w,c
  2923  001E8A  6EF7               	movwf	tblptrh,c
  2924  001E8C                     	if	0	;There are less than 3 active tblptr bytes
  2925  001E8C                     	endif
  2926  001E8C  0009               	tblrd		*+
  2927  001E8E  CFF5 F013          	movff	tablat,___flmul@a
  2928  001E92  0009               	tblrd		*+
  2929  001E94  CFF5 F014          	movff	tablat,___flmul@a+1
  2930  001E98  0009               	tblrd		*+
  2931  001E9A  CFF5 F015          	movff	tablat,___flmul@a+2
  2932  001E9E  000A               	tblrd		*-
  2933  001EA0  CFF5 F016          	movff	tablat,___flmul@a+3
  2934  001EA4  EC57  F00C         	call	___flmul	;wreg free
  2935  001EA8  C00F  F028         	movff	?___flmul,?_scale
  2936  001EAC  C010  F029         	movff	?___flmul+1,?_scale+1
  2937  001EB0  C011  F02A         	movff	?___flmul+2,?_scale+2
  2938  001EB4  C012  F02B         	movff	?___flmul+3,?_scale+3
  2939  001EB8  EF71  F010         	goto	l155
  2940  001EBC                     l2797:
  2941                           
  2942                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2943  001EBC  5030               	movf	scale@scl^0,w,c
  2944  001EBE  0D04               	mullw	4
  2945  001EC0  0E35               	movlw	low __npowers_
  2946  001EC2  24F3               	addwf	243,w,c
  2947  001EC4  6EF6               	movwf	tblptrl,c
  2948  001EC6  0E08               	movlw	high __npowers_
  2949  001EC8  20F4               	addwfc	244,w,c
  2950  001ECA  6EF7               	movwf	tblptrh,c
  2951  001ECC                     	if	0	;There are less than 3 active tblptr bytes
  2952  001ECC                     	endif
  2953  001ECC  0009               	tblrd		*+
  2954  001ECE  CFF5 F028          	movff	tablat,?_scale
  2955  001ED2  0009               	tblrd		*+
  2956  001ED4  CFF5 F029          	movff	tablat,?_scale+1
  2957  001ED8  0009               	tblrd		*+
  2958  001EDA  CFF5 F02A          	movff	tablat,?_scale+2
  2959  001EDE  000A               	tblrd		*-
  2960  001EE0  CFF5 F02B          	movff	tablat,?_scale+3
  2961  001EE4  EF71  F010         	goto	l155
  2962  001EE8                     l2801:
  2963                           
  2964                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2965  001EE8  5030               	movf	scale@scl^0,w,c
  2966  001EEA  0A80               	xorlw	128
  2967  001EEC  0F12               	addlw	-238
  2968  001EEE  A0D8               	btfss	status,0,c
  2969  001EF0  EF7C  F00F         	goto	u2811
  2970  001EF4  EF7E  F00F         	goto	u2810
  2971  001EF8                     u2811:
  2972  001EF8  EF07  F010         	goto	l2809
  2973  001EFC                     u2810:
  2974  001EFC                     
  2975                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2976  001EFC  0E00               	movlw	0
  2977  001EFE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2978  001F00  0E0A               	movlw	10
  2979  001F02  6E09               	movwf	___awdiv@divisor^0,c
  2980  001F04  0E00               	movlw	0
  2981  001F06  6E04               	movwf	(___awmod@divisor+1)^0,c
  2982  001F08  0E64               	movlw	100
  2983  001F0A  6E03               	movwf	___awmod@divisor^0,c
  2984  001F0C  5030               	movf	scale@scl^0,w,c
  2985  001F0E  6E01               	movwf	___awmod@dividend^0,c
  2986  001F10  6A02               	clrf	(___awmod@dividend+1)^0,c
  2987  001F12  BE01               	btfsc	___awmod@dividend^0,7,c
  2988  001F14  0602               	decf	(___awmod@dividend+1)^0,f,c
  2989  001F16  EC18  F017         	call	___awmod	;wreg free
  2990  001F1A  C001  F007         	movff	?___awmod,___awdiv@dividend
  2991  001F1E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2992  001F22  ECB6  F016         	call	___awdiv	;wreg free
  2993  001F26  0E09               	movlw	9
  2994  001F28  2607               	addwf	?___awdiv^0,f,c
  2995  001F2A  5007               	movf	?___awdiv^0,w,c
  2996  001F2C  0D04               	mullw	4
  2997  001F2E  0E01               	movlw	low __powers_
  2998  001F30  24F3               	addwf	243,w,c
  2999  001F32  6EF6               	movwf	tblptrl,c
  3000  001F34  0E08               	movlw	high __powers_
  3001  001F36  20F4               	addwfc	244,w,c
  3002  001F38  6EF7               	movwf	tblptrh,c
  3003  001F3A                     	if	0	;There are less than 3 active tblptr bytes
  3004  001F3A                     	endif
  3005  001F3A  0009               	tblrd		*+
  3006  001F3C  CFF5 F013          	movff	tablat,___flmul@a
  3007  001F40  0009               	tblrd		*+
  3008  001F42  CFF5 F014          	movff	tablat,___flmul@a+1
  3009  001F46  0009               	tblrd		*+
  3010  001F48  CFF5 F015          	movff	tablat,___flmul@a+2
  3011  001F4C  000A               	tblrd		*-
  3012  001F4E  CFF5 F016          	movff	tablat,___flmul@a+3
  3013  001F52  0E00               	movlw	0
  3014  001F54  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3015  001F56  0E64               	movlw	100
  3016  001F58  6E09               	movwf	___awdiv@divisor^0,c
  3017  001F5A  5030               	movf	scale@scl^0,w,c
  3018  001F5C  6E07               	movwf	___awdiv@dividend^0,c
  3019  001F5E  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3020  001F60  BE07               	btfsc	___awdiv@dividend^0,7,c
  3021  001F62  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3022  001F64  ECB6  F016         	call	___awdiv	;wreg free
  3023  001F68  0E12               	movlw	18
  3024  001F6A  2607               	addwf	?___awdiv^0,f,c
  3025  001F6C  5007               	movf	?___awdiv^0,w,c
  3026  001F6E  0D04               	mullw	4
  3027  001F70  0E01               	movlw	low __powers_
  3028  001F72  24F3               	addwf	243,w,c
  3029  001F74  6EF6               	movwf	tblptrl,c
  3030  001F76  0E08               	movlw	high __powers_
  3031  001F78  20F4               	addwfc	244,w,c
  3032  001F7A  6EF7               	movwf	tblptrh,c
  3033  001F7C                     	if	0	;There are less than 3 active tblptr bytes
  3034  001F7C                     	endif
  3035  001F7C  0009               	tblrd		*+
  3036  001F7E  CFF5 F00F          	movff	tablat,___flmul@b
  3037  001F82  0009               	tblrd		*+
  3038  001F84  CFF5 F010          	movff	tablat,___flmul@b+1
  3039  001F88  0009               	tblrd		*+
  3040  001F8A  CFF5 F011          	movff	tablat,___flmul@b+2
  3041  001F8E  000A               	tblrd		*-
  3042  001F90  CFF5 F012          	movff	tablat,___flmul@b+3
  3043  001F94  EC57  F00C         	call	___flmul	;wreg free
  3044  001F98  C00F  F02C         	movff	?___flmul,_scale$982
  3045  001F9C  C010  F02D         	movff	?___flmul+1,_scale$982+1
  3046  001FA0  C011  F02E         	movff	?___flmul+2,_scale$982+2
  3047  001FA4  C012  F02F         	movff	?___flmul+3,_scale$982+3
  3048                           
  3049                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3050  001FA8  C02C  F00F         	movff	_scale$982,___flmul@b
  3051  001FAC  C02D  F010         	movff	_scale$982+1,___flmul@b+1
  3052  001FB0  C02E  F011         	movff	_scale$982+2,___flmul@b+2
  3053  001FB4  C02F  F012         	movff	_scale$982+3,___flmul@b+3
  3054  001FB8  0E00               	movlw	0
  3055  001FBA  6E04               	movwf	(___awmod@divisor+1)^0,c
  3056  001FBC  0E0A               	movlw	10
  3057  001FBE  6E03               	movwf	___awmod@divisor^0,c
  3058  001FC0  5030               	movf	scale@scl^0,w,c
  3059  001FC2  6E01               	movwf	___awmod@dividend^0,c
  3060  001FC4  6A02               	clrf	(___awmod@dividend+1)^0,c
  3061  001FC6  BE01               	btfsc	___awmod@dividend^0,7,c
  3062  001FC8  0602               	decf	(___awmod@dividend+1)^0,f,c
  3063  001FCA  EC18  F017         	call	___awmod	;wreg free
  3064  001FCE  5001               	movf	?___awmod^0,w,c
  3065  001FD0  0D04               	mullw	4
  3066  001FD2  0E01               	movlw	low __powers_
  3067  001FD4  24F3               	addwf	243,w,c
  3068  001FD6  6EF6               	movwf	tblptrl,c
  3069  001FD8  0E08               	movlw	high __powers_
  3070  001FDA  20F4               	addwfc	244,w,c
  3071  001FDC  6EF7               	movwf	tblptrh,c
  3072  001FDE                     	if	0	;There are less than 3 active tblptr bytes
  3073  001FDE                     	endif
  3074  001FDE  0009               	tblrd		*+
  3075  001FE0  CFF5 F013          	movff	tablat,___flmul@a
  3076  001FE4  0009               	tblrd		*+
  3077  001FE6  CFF5 F014          	movff	tablat,___flmul@a+1
  3078  001FEA  0009               	tblrd		*+
  3079  001FEC  CFF5 F015          	movff	tablat,___flmul@a+2
  3080  001FF0  000A               	tblrd		*-
  3081  001FF2  CFF5 F016          	movff	tablat,___flmul@a+3
  3082  001FF6  EC57  F00C         	call	___flmul	;wreg free
  3083  001FFA  C00F  F028         	movff	?___flmul,?_scale
  3084  001FFE  C010  F029         	movff	?___flmul+1,?_scale+1
  3085  002002  C011  F02A         	movff	?___flmul+2,?_scale+2
  3086  002006  C012  F02B         	movff	?___flmul+3,?_scale+3
  3087  00200A  EF71  F010         	goto	l155
  3088  00200E                     l2809:
  3089                           
  3090                           ;doprnt.c: 446: else if(scl > 10)
  3091  00200E  5030               	movf	scale@scl^0,w,c
  3092  002010  0A80               	xorlw	128
  3093  002012  0F75               	addlw	-139
  3094  002014  A0D8               	btfss	status,0,c
  3095  002016  EF0F  F010         	goto	u2821
  3096  00201A  EF11  F010         	goto	u2820
  3097  00201E                     u2821:
  3098  00201E  EF5D  F010         	goto	l2815
  3099  002022                     u2820:
  3100  002022                     
  3101                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3102  002022  0E00               	movlw	0
  3103  002024  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3104  002026  0E0A               	movlw	10
  3105  002028  6E09               	movwf	___awdiv@divisor^0,c
  3106  00202A  5030               	movf	scale@scl^0,w,c
  3107  00202C  6E07               	movwf	___awdiv@dividend^0,c
  3108  00202E  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3109  002030  BE07               	btfsc	___awdiv@dividend^0,7,c
  3110  002032  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3111  002034  ECB6  F016         	call	___awdiv	;wreg free
  3112  002038  0E09               	movlw	9
  3113  00203A  2607               	addwf	?___awdiv^0,f,c
  3114  00203C  5007               	movf	?___awdiv^0,w,c
  3115  00203E  0D04               	mullw	4
  3116  002040  0E01               	movlw	low __powers_
  3117  002042  24F3               	addwf	243,w,c
  3118  002044  6EF6               	movwf	tblptrl,c
  3119  002046  0E08               	movlw	high __powers_
  3120  002048  20F4               	addwfc	244,w,c
  3121  00204A  6EF7               	movwf	tblptrh,c
  3122  00204C                     	if	0	;There are less than 3 active tblptr bytes
  3123  00204C                     	endif
  3124  00204C  0009               	tblrd		*+
  3125  00204E  CFF5 F00F          	movff	tablat,___flmul@b
  3126  002052  0009               	tblrd		*+
  3127  002054  CFF5 F010          	movff	tablat,___flmul@b+1
  3128  002058  0009               	tblrd		*+
  3129  00205A  CFF5 F011          	movff	tablat,___flmul@b+2
  3130  00205E  000A               	tblrd		*-
  3131  002060  CFF5 F012          	movff	tablat,___flmul@b+3
  3132  002064  0E00               	movlw	0
  3133  002066  6E04               	movwf	(___awmod@divisor+1)^0,c
  3134  002068  0E0A               	movlw	10
  3135  00206A  6E03               	movwf	___awmod@divisor^0,c
  3136  00206C  5030               	movf	scale@scl^0,w,c
  3137  00206E  6E01               	movwf	___awmod@dividend^0,c
  3138  002070  6A02               	clrf	(___awmod@dividend+1)^0,c
  3139  002072  BE01               	btfsc	___awmod@dividend^0,7,c
  3140  002074  0602               	decf	(___awmod@dividend+1)^0,f,c
  3141  002076  EC18  F017         	call	___awmod	;wreg free
  3142  00207A  5001               	movf	?___awmod^0,w,c
  3143  00207C  0D04               	mullw	4
  3144  00207E  0E01               	movlw	low __powers_
  3145  002080  24F3               	addwf	243,w,c
  3146  002082  6EF6               	movwf	tblptrl,c
  3147  002084  0E08               	movlw	high __powers_
  3148  002086  20F4               	addwfc	244,w,c
  3149  002088  6EF7               	movwf	tblptrh,c
  3150  00208A                     	if	0	;There are less than 3 active tblptr bytes
  3151  00208A                     	endif
  3152  00208A  0009               	tblrd		*+
  3153  00208C  CFF5 F013          	movff	tablat,___flmul@a
  3154  002090  0009               	tblrd		*+
  3155  002092  CFF5 F014          	movff	tablat,___flmul@a+1
  3156  002096  0009               	tblrd		*+
  3157  002098  CFF5 F015          	movff	tablat,___flmul@a+2
  3158  00209C  000A               	tblrd		*-
  3159  00209E  CFF5 F016          	movff	tablat,___flmul@a+3
  3160  0020A2  EC57  F00C         	call	___flmul	;wreg free
  3161  0020A6  C00F  F028         	movff	?___flmul,?_scale
  3162  0020AA  C010  F029         	movff	?___flmul+1,?_scale+1
  3163  0020AE  C011  F02A         	movff	?___flmul+2,?_scale+2
  3164  0020B2  C012  F02B         	movff	?___flmul+3,?_scale+3
  3165  0020B6  EF71  F010         	goto	l155
  3166  0020BA                     l2815:
  3167                           
  3168                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3169  0020BA  5030               	movf	scale@scl^0,w,c
  3170  0020BC  0D04               	mullw	4
  3171  0020BE  0E01               	movlw	low __powers_
  3172  0020C0  24F3               	addwf	243,w,c
  3173  0020C2  6EF6               	movwf	tblptrl,c
  3174  0020C4  0E08               	movlw	high __powers_
  3175  0020C6  20F4               	addwfc	244,w,c
  3176  0020C8  6EF7               	movwf	tblptrh,c
  3177  0020CA                     	if	0	;There are less than 3 active tblptr bytes
  3178  0020CA                     	endif
  3179  0020CA  0009               	tblrd		*+
  3180  0020CC  CFF5 F028          	movff	tablat,?_scale
  3181  0020D0  0009               	tblrd		*+
  3182  0020D2  CFF5 F029          	movff	tablat,?_scale+1
  3183  0020D6  0009               	tblrd		*+
  3184  0020D8  CFF5 F02A          	movff	tablat,?_scale+2
  3185  0020DC  000A               	tblrd		*-
  3186  0020DE  CFF5 F02B          	movff	tablat,?_scale+3
  3187  0020E2                     l155:
  3188  0020E2  0012               	return		;funcret
  3189  0020E4                     __end_of_scale:
  3190                           	callstack 0
  3191                           
  3192 ;; *************** function ___awmod *****************
  3193 ;; Defined at:
  3194 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  dividend        2    0[COMRAM] int 
  3197 ;;  divisor         2    2[COMRAM] int 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  sign            1    5[COMRAM] unsigned char 
  3200 ;;  counter         1    4[COMRAM] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  2    0[COMRAM] int 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3210 ;;      Params:         4       0       0       0       0       0       0       0       0
  3211 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3213 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3214 ;;Total ram usage:        6 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_scale
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text3
  3225  002E30                     __ptext3:
  3226                           	callstack 0
  3227  002E30                     ___awmod:
  3228                           	callstack 27
  3229  002E30  0E00               	movlw	0
  3230  002E32  6E06               	movwf	___awmod@sign^0,c
  3231  002E34  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3232  002E36  EF21  F017         	goto	u2610
  3233  002E3A  EF1F  F017         	goto	u2611
  3234  002E3E                     u2611:
  3235  002E3E  EF27  F017         	goto	l2681
  3236  002E42                     u2610:
  3237  002E42  6C01               	negf	___awmod@dividend^0,c
  3238  002E44  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3239  002E46  B0D8               	btfsc	status,0,c
  3240  002E48  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3241  002E4A  0E01               	movlw	1
  3242  002E4C  6E06               	movwf	___awmod@sign^0,c
  3243  002E4E                     l2681:
  3244  002E4E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3245  002E50  EF2E  F017         	goto	u2620
  3246  002E54  EF2C  F017         	goto	u2621
  3247  002E58                     u2621:
  3248  002E58  EF32  F017         	goto	l2685
  3249  002E5C                     u2620:
  3250  002E5C  6C03               	negf	___awmod@divisor^0,c
  3251  002E5E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3252  002E60  B0D8               	btfsc	status,0,c
  3253  002E62  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3254  002E64                     l2685:
  3255  002E64  5003               	movf	___awmod@divisor^0,w,c
  3256  002E66  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3257  002E68  B4D8               	btfsc	status,2,c
  3258  002E6A  EF39  F017         	goto	u2631
  3259  002E6E  EF3B  F017         	goto	u2630
  3260  002E72                     u2631:
  3261  002E72  EF5F  F017         	goto	l2701
  3262  002E76                     u2630:
  3263  002E76  0E01               	movlw	1
  3264  002E78  6E05               	movwf	___awmod@counter^0,c
  3265  002E7A  EF43  F017         	goto	l2691
  3266  002E7E                     l2689:
  3267  002E7E  90D8               	bcf	status,0,c
  3268  002E80  3603               	rlcf	___awmod@divisor^0,f,c
  3269  002E82  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3270  002E84  2A05               	incf	___awmod@counter^0,f,c
  3271  002E86                     l2691:
  3272  002E86  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3273  002E88  EF48  F017         	goto	u2641
  3274  002E8C  EF4A  F017         	goto	u2640
  3275  002E90                     u2641:
  3276  002E90  EF3F  F017         	goto	l2689
  3277  002E94                     u2640:
  3278  002E94                     l2693:
  3279  002E94  5003               	movf	___awmod@divisor^0,w,c
  3280  002E96  5C01               	subwf	___awmod@dividend^0,w,c
  3281  002E98  5004               	movf	(___awmod@divisor+1)^0,w,c
  3282  002E9A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3283  002E9C  A0D8               	btfss	status,0,c
  3284  002E9E  EF53  F017         	goto	u2651
  3285  002EA2  EF55  F017         	goto	u2650
  3286  002EA6                     u2651:
  3287  002EA6  EF59  F017         	goto	l2697
  3288  002EAA                     u2650:
  3289  002EAA  5003               	movf	___awmod@divisor^0,w,c
  3290  002EAC  5E01               	subwf	___awmod@dividend^0,f,c
  3291  002EAE  5004               	movf	(___awmod@divisor+1)^0,w,c
  3292  002EB0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3293  002EB2                     l2697:
  3294  002EB2  90D8               	bcf	status,0,c
  3295  002EB4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3296  002EB6  3203               	rrcf	___awmod@divisor^0,f,c
  3297  002EB8  2E05               	decfsz	___awmod@counter^0,f,c
  3298  002EBA  EF4A  F017         	goto	l2693
  3299  002EBE                     l2701:
  3300  002EBE  5006               	movf	___awmod@sign^0,w,c
  3301  002EC0  B4D8               	btfsc	status,2,c
  3302  002EC2  EF65  F017         	goto	u2661
  3303  002EC6  EF67  F017         	goto	u2660
  3304  002ECA                     u2661:
  3305  002ECA  EF6B  F017         	goto	l2705
  3306  002ECE                     u2660:
  3307  002ECE  6C01               	negf	___awmod@dividend^0,c
  3308  002ED0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3309  002ED2  B0D8               	btfsc	status,0,c
  3310  002ED4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3311  002ED6                     l2705:
  3312  002ED6  C001  F001         	movff	___awmod@dividend,?___awmod
  3313  002EDA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3314  002EDE  0012               	return		;funcret
  3315  002EE0                     __end_of___awmod:
  3316                           	callstack 0
  3317                           
  3318 ;; *************** function ___awdiv *****************
  3319 ;; Defined at:
  3320 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  dividend        2    6[COMRAM] int 
  3323 ;;  divisor         2    8[COMRAM] int 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  quotient        2   12[COMRAM] int 
  3326 ;;  sign            1   11[COMRAM] unsigned char 
  3327 ;;  counter         1   10[COMRAM] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    6[COMRAM] int 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3337 ;;      Params:         4       0       0       0       0       0       0       0       0
  3338 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3340 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3341 ;;Total ram usage:        8 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_scale
  3348 ;;		_sprintf
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text4
  3353  002D6C                     __ptext4:
  3354                           	callstack 0
  3355  002D6C                     ___awdiv:
  3356                           	callstack 27
  3357  002D6C  0E00               	movlw	0
  3358  002D6E  6E0C               	movwf	___awdiv@sign^0,c
  3359  002D70  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3360  002D72  EFBF  F016         	goto	u2550
  3361  002D76  EFBD  F016         	goto	u2551
  3362  002D7A                     u2551:
  3363  002D7A  EFC5  F016         	goto	l2637
  3364  002D7E                     u2550:
  3365  002D7E  6C09               	negf	___awdiv@divisor^0,c
  3366  002D80  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  3367  002D82  B0D8               	btfsc	status,0,c
  3368  002D84  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  3369  002D86  0E01               	movlw	1
  3370  002D88  6E0C               	movwf	___awdiv@sign^0,c
  3371  002D8A                     l2637:
  3372  002D8A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  3373  002D8C  EFCC  F016         	goto	u2560
  3374  002D90  EFCA  F016         	goto	u2561
  3375  002D94                     u2561:
  3376  002D94  EFD2  F016         	goto	l2643
  3377  002D98                     u2560:
  3378  002D98  6C07               	negf	___awdiv@dividend^0,c
  3379  002D9A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  3380  002D9C  B0D8               	btfsc	status,0,c
  3381  002D9E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  3382  002DA0  0E01               	movlw	1
  3383  002DA2  1A0C               	xorwf	___awdiv@sign^0,f,c
  3384  002DA4                     l2643:
  3385  002DA4  0E00               	movlw	0
  3386  002DA6  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  3387  002DA8  0E00               	movlw	0
  3388  002DAA  6E0D               	movwf	___awdiv@quotient^0,c
  3389  002DAC  5009               	movf	___awdiv@divisor^0,w,c
  3390  002DAE  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3391  002DB0  B4D8               	btfsc	status,2,c
  3392  002DB2  EFDD  F016         	goto	u2571
  3393  002DB6  EFDF  F016         	goto	u2570
  3394  002DBA                     u2571:
  3395  002DBA  EF07  F017         	goto	l2665
  3396  002DBE                     u2570:
  3397  002DBE  0E01               	movlw	1
  3398  002DC0  6E0B               	movwf	___awdiv@counter^0,c
  3399  002DC2  EFE7  F016         	goto	l2651
  3400  002DC6                     l2649:
  3401  002DC6  90D8               	bcf	status,0,c
  3402  002DC8  3609               	rlcf	___awdiv@divisor^0,f,c
  3403  002DCA  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3404  002DCC  2A0B               	incf	___awdiv@counter^0,f,c
  3405  002DCE                     l2651:
  3406  002DCE  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3407  002DD0  EFEC  F016         	goto	u2581
  3408  002DD4  EFEE  F016         	goto	u2580
  3409  002DD8                     u2581:
  3410  002DD8  EFE3  F016         	goto	l2649
  3411  002DDC                     u2580:
  3412  002DDC                     l2653:
  3413  002DDC  90D8               	bcf	status,0,c
  3414  002DDE  360D               	rlcf	___awdiv@quotient^0,f,c
  3415  002DE0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3416  002DE2  5009               	movf	___awdiv@divisor^0,w,c
  3417  002DE4  5C07               	subwf	___awdiv@dividend^0,w,c
  3418  002DE6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3419  002DE8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3420  002DEA  A0D8               	btfss	status,0,c
  3421  002DEC  EFFA  F016         	goto	u2591
  3422  002DF0  EFFC  F016         	goto	u2590
  3423  002DF4                     u2591:
  3424  002DF4  EF01  F017         	goto	l2661
  3425  002DF8                     u2590:
  3426  002DF8  5009               	movf	___awdiv@divisor^0,w,c
  3427  002DFA  5E07               	subwf	___awdiv@dividend^0,f,c
  3428  002DFC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3429  002DFE  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3430  002E00  800D               	bsf	___awdiv@quotient^0,0,c
  3431  002E02                     l2661:
  3432  002E02  90D8               	bcf	status,0,c
  3433  002E04  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3434  002E06  3209               	rrcf	___awdiv@divisor^0,f,c
  3435  002E08  2E0B               	decfsz	___awdiv@counter^0,f,c
  3436  002E0A  EFEE  F016         	goto	l2653
  3437  002E0E                     l2665:
  3438  002E0E  500C               	movf	___awdiv@sign^0,w,c
  3439  002E10  B4D8               	btfsc	status,2,c
  3440  002E12  EF0D  F017         	goto	u2601
  3441  002E16  EF0F  F017         	goto	u2600
  3442  002E1A                     u2601:
  3443  002E1A  EF13  F017         	goto	l2669
  3444  002E1E                     u2600:
  3445  002E1E  6C0D               	negf	___awdiv@quotient^0,c
  3446  002E20  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3447  002E22  B0D8               	btfsc	status,0,c
  3448  002E24  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3449  002E26                     l2669:
  3450  002E26  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3451  002E2A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3452  002E2E  0012               	return		;funcret
  3453  002E30                     __end_of___awdiv:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _isdigit *****************
  3457 ;; Defined at:
  3458 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  c               1    wreg     unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  c               1    2[COMRAM] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;		None               void
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0
  3473 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3474 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3475 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3476 ;;Total ram usage:        3 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_sprintf
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text5
  3487  003344                     __ptext5:
  3488                           	callstack 0
  3489  003344                     _isdigit:
  3490                           	callstack 28
  3491                           
  3492                           ;incstack = 0
  3493                           ;isdigit@c stored from wreg
  3494  003344  6E03               	movwf	isdigit@c^0,c
  3495  003346  0E00               	movlw	0
  3496  003348  6E02               	movwf	_isdigit$786^0,c
  3497  00334A  0E3A               	movlw	58
  3498  00334C  6003               	cpfslt	isdigit@c^0,c
  3499  00334E  EFAB  F019         	goto	u2831
  3500  003352  EFAD  F019         	goto	u2830
  3501  003356                     u2831:
  3502  003356  EFB7  F019         	goto	l2827
  3503  00335A                     u2830:
  3504  00335A  0E2F               	movlw	47
  3505  00335C  6403               	cpfsgt	isdigit@c^0,c
  3506  00335E  EFB3  F019         	goto	u2841
  3507  003362  EFB5  F019         	goto	u2840
  3508  003366                     u2841:
  3509  003366  EFB7  F019         	goto	l2827
  3510  00336A                     u2840:
  3511  00336A  0E01               	movlw	1
  3512  00336C  6E02               	movwf	_isdigit$786^0,c
  3513  00336E                     l2827:
  3514  00336E  C002  F001         	movff	_isdigit$786,??_isdigit
  3515  003372  3001               	rrcf	??_isdigit^0,w,c
  3516  003374  0012               	return		;funcret
  3517  003376                     __end_of_isdigit:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _fround *****************
  3521 ;; Defined at:
  3522 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  prec            1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  prec            1   51[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  4   39[COMRAM] unsigned char 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3536 ;;      Params:         4       0       0       0       0       0       0       0       0
  3537 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3539 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3540 ;;Total ram usage:       13 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    2
  3543 ;; This function calls:
  3544 ;;		___flmul
  3545 ;;		___lwdiv
  3546 ;;		___lwmod
  3547 ;; This function is called by:
  3548 ;;		_sprintf
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text6
  3553  0020E4                     __ptext6:
  3554                           	callstack 0
  3555  0020E4                     _fround:
  3556                           	callstack 27
  3557                           
  3558                           ;incstack = 0
  3559                           ;fround@prec stored from wreg
  3560  0020E4  6E34               	movwf	fround@prec^0,c
  3561  0020E6                     
  3562                           ;doprnt.c: 421: if(prec>=110)
  3563  0020E6  0E6D               	movlw	109
  3564  0020E8  6434               	cpfsgt	fround@prec^0,c
  3565  0020EA  EF79  F010         	goto	u2761
  3566  0020EE  EF7B  F010         	goto	u2760
  3567  0020F2                     u2761:
  3568  0020F2  EF28  F011         	goto	l2771
  3569  0020F6                     u2760:
  3570  0020F6                     
  3571                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3572  0020F6  0E00               	movlw	0
  3573  0020F8  6E13               	movwf	___flmul@a^0,c
  3574  0020FA  0E00               	movlw	0
  3575  0020FC  6E14               	movwf	(___flmul@a+1)^0,c
  3576  0020FE  0E00               	movlw	0
  3577  002100  6E15               	movwf	(___flmul@a+2)^0,c
  3578  002102  0E3F               	movlw	63
  3579  002104  6E16               	movwf	(___flmul@a+3)^0,c
  3580  002106  0E00               	movlw	0
  3581  002108  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3582  00210A  0E64               	movlw	100
  3583  00210C  6E08               	movwf	___lwdiv@divisor^0,c
  3584  00210E  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3585  002112  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3586  002114  ECA1  F018         	call	___lwdiv	;wreg free
  3587  002118  90D8               	bcf	status,0,c
  3588  00211A  3606               	rlcf	?___lwdiv^0,f,c
  3589  00211C  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3590  00211E  90D8               	bcf	status,0,c
  3591  002120  3606               	rlcf	?___lwdiv^0,f,c
  3592  002122  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3593  002124  0E48               	movlw	72
  3594  002126  2606               	addwf	?___lwdiv^0,f,c
  3595  002128  0E00               	movlw	0
  3596  00212A  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3597  00212C  0E35               	movlw	low __npowers_
  3598  00212E  2406               	addwf	?___lwdiv^0,w,c
  3599  002130  6EF6               	movwf	tblptrl,c
  3600  002132  0E08               	movlw	high __npowers_
  3601  002134  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3602  002136  6EF7               	movwf	tblptrh,c
  3603  002138                     	if	0	;There are less than 3 active tblptr bytes
  3604  002138                     	endif
  3605  002138  0009               	tblrd		*+
  3606  00213A  CFF5 F00F          	movff	tablat,___flmul@b
  3607  00213E  0009               	tblrd		*+
  3608  002140  CFF5 F010          	movff	tablat,___flmul@b+1
  3609  002144  0009               	tblrd		*+
  3610  002146  CFF5 F011          	movff	tablat,___flmul@b+2
  3611  00214A  000A               	tblrd		*-
  3612  00214C  CFF5 F012          	movff	tablat,___flmul@b+3
  3613  002150  EC57  F00C         	call	___flmul	;wreg free
  3614  002154  C00F  F030         	movff	?___flmul,_fround$980
  3615  002158  C010  F031         	movff	?___flmul+1,_fround$980+1
  3616  00215C  C011  F032         	movff	?___flmul+2,_fround$980+2
  3617  002160  C012  F033         	movff	?___flmul+3,_fround$980+3
  3618                           
  3619                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3620  002164  0E00               	movlw	0
  3621  002166  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3622  002168  0E0A               	movlw	10
  3623  00216A  6E08               	movwf	___lwdiv@divisor^0,c
  3624  00216C  0E00               	movlw	0
  3625  00216E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3626  002170  0E64               	movlw	100
  3627  002172  6E03               	movwf	___lwmod@divisor^0,c
  3628  002174  C034  F001         	movff	fround@prec,___lwmod@dividend
  3629  002178  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3630  00217A  ECDB  F018         	call	___lwmod	;wreg free
  3631  00217E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3632  002182  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3633  002186  ECA1  F018         	call	___lwdiv	;wreg free
  3634  00218A  90D8               	bcf	status,0,c
  3635  00218C  3606               	rlcf	?___lwdiv^0,f,c
  3636  00218E  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3637  002190  90D8               	bcf	status,0,c
  3638  002192  3606               	rlcf	?___lwdiv^0,f,c
  3639  002194  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3640  002196  0E24               	movlw	36
  3641  002198  2606               	addwf	?___lwdiv^0,f,c
  3642  00219A  0E00               	movlw	0
  3643  00219C  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3644  00219E  0E35               	movlw	low __npowers_
  3645  0021A0  2406               	addwf	?___lwdiv^0,w,c
  3646  0021A2  6EF6               	movwf	tblptrl,c
  3647  0021A4  0E08               	movlw	high __npowers_
  3648  0021A6  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3649  0021A8  6EF7               	movwf	tblptrh,c
  3650  0021AA                     	if	0	;There are less than 3 active tblptr bytes
  3651  0021AA                     	endif
  3652  0021AA  0009               	tblrd		*+
  3653  0021AC  CFF5 F013          	movff	tablat,___flmul@a
  3654  0021B0  0009               	tblrd		*+
  3655  0021B2  CFF5 F014          	movff	tablat,___flmul@a+1
  3656  0021B6  0009               	tblrd		*+
  3657  0021B8  CFF5 F015          	movff	tablat,___flmul@a+2
  3658  0021BC  000A               	tblrd		*-
  3659  0021BE  CFF5 F016          	movff	tablat,___flmul@a+3
  3660  0021C2  C030  F00F         	movff	_fround$980,___flmul@b
  3661  0021C6  C031  F010         	movff	_fround$980+1,___flmul@b+1
  3662  0021CA  C032  F011         	movff	_fround$980+2,___flmul@b+2
  3663  0021CE  C033  F012         	movff	_fround$980+3,___flmul@b+3
  3664  0021D2  EC57  F00C         	call	___flmul	;wreg free
  3665  0021D6  C00F  F02C         	movff	?___flmul,_fround$981
  3666  0021DA  C010  F02D         	movff	?___flmul+1,_fround$981+1
  3667  0021DE  C011  F02E         	movff	?___flmul+2,_fround$981+2
  3668  0021E2  C012  F02F         	movff	?___flmul+3,_fround$981+3
  3669                           
  3670                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3671  0021E6  C02C  F00F         	movff	_fround$981,___flmul@b
  3672  0021EA  C02D  F010         	movff	_fround$981+1,___flmul@b+1
  3673  0021EE  C02E  F011         	movff	_fround$981+2,___flmul@b+2
  3674  0021F2  C02F  F012         	movff	_fround$981+3,___flmul@b+3
  3675  0021F6  0E00               	movlw	0
  3676  0021F8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3677  0021FA  0E0A               	movlw	10
  3678  0021FC  6E03               	movwf	___lwmod@divisor^0,c
  3679  0021FE  C034  F001         	movff	fround@prec,___lwmod@dividend
  3680  002202  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3681  002204  ECDB  F018         	call	___lwmod	;wreg free
  3682  002208  90D8               	bcf	status,0,c
  3683  00220A  3601               	rlcf	?___lwmod^0,f,c
  3684  00220C  3602               	rlcf	(?___lwmod+1)^0,f,c
  3685  00220E  90D8               	bcf	status,0,c
  3686  002210  3601               	rlcf	?___lwmod^0,f,c
  3687  002212  3602               	rlcf	(?___lwmod+1)^0,f,c
  3688  002214  0E35               	movlw	low __npowers_
  3689  002216  2401               	addwf	?___lwmod^0,w,c
  3690  002218  6EF6               	movwf	tblptrl,c
  3691  00221A  0E08               	movlw	high __npowers_
  3692  00221C  2002               	addwfc	(?___lwmod+1)^0,w,c
  3693  00221E  6EF7               	movwf	tblptrh,c
  3694  002220                     	if	0	;There are less than 3 active tblptr bytes
  3695  002220                     	endif
  3696  002220  0009               	tblrd		*+
  3697  002222  CFF5 F013          	movff	tablat,___flmul@a
  3698  002226  0009               	tblrd		*+
  3699  002228  CFF5 F014          	movff	tablat,___flmul@a+1
  3700  00222C  0009               	tblrd		*+
  3701  00222E  CFF5 F015          	movff	tablat,___flmul@a+2
  3702  002232  000A               	tblrd		*-
  3703  002234  CFF5 F016          	movff	tablat,___flmul@a+3
  3704  002238  EC57  F00C         	call	___flmul	;wreg free
  3705  00223C  C00F  F028         	movff	?___flmul,?_fround
  3706  002240  C010  F029         	movff	?___flmul+1,?_fround+1
  3707  002244  C011  F02A         	movff	?___flmul+2,?_fround+2
  3708  002248  C012  F02B         	movff	?___flmul+3,?_fround+3
  3709  00224C  EFC2  F011         	goto	l148
  3710  002250                     l2771:
  3711                           
  3712                           ;doprnt.c: 423: else if(prec > 10)
  3713  002250  0E0A               	movlw	10
  3714  002252  6434               	cpfsgt	fround@prec^0,c
  3715  002254  EF2E  F011         	goto	u2771
  3716  002258  EF30  F011         	goto	u2770
  3717  00225C                     u2771:
  3718  00225C  EF9C  F011         	goto	l2777
  3719  002260                     u2770:
  3720  002260                     
  3721                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3722  002260  0E00               	movlw	0
  3723  002262  6E13               	movwf	___flmul@a^0,c
  3724  002264  0E00               	movlw	0
  3725  002266  6E14               	movwf	(___flmul@a+1)^0,c
  3726  002268  0E00               	movlw	0
  3727  00226A  6E15               	movwf	(___flmul@a+2)^0,c
  3728  00226C  0E3F               	movlw	63
  3729  00226E  6E16               	movwf	(___flmul@a+3)^0,c
  3730  002270  0E00               	movlw	0
  3731  002272  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3732  002274  0E0A               	movlw	10
  3733  002276  6E08               	movwf	___lwdiv@divisor^0,c
  3734  002278  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3735  00227C  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3736  00227E  ECA1  F018         	call	___lwdiv	;wreg free
  3737  002282  90D8               	bcf	status,0,c
  3738  002284  3606               	rlcf	?___lwdiv^0,f,c
  3739  002286  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3740  002288  90D8               	bcf	status,0,c
  3741  00228A  3606               	rlcf	?___lwdiv^0,f,c
  3742  00228C  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3743  00228E  0E24               	movlw	36
  3744  002290  2606               	addwf	?___lwdiv^0,f,c
  3745  002292  0E00               	movlw	0
  3746  002294  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3747  002296  0E35               	movlw	low __npowers_
  3748  002298  2406               	addwf	?___lwdiv^0,w,c
  3749  00229A  6EF6               	movwf	tblptrl,c
  3750  00229C  0E08               	movlw	high __npowers_
  3751  00229E  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3752  0022A0  6EF7               	movwf	tblptrh,c
  3753  0022A2                     	if	0	;There are less than 3 active tblptr bytes
  3754  0022A2                     	endif
  3755  0022A2  0009               	tblrd		*+
  3756  0022A4  CFF5 F00F          	movff	tablat,___flmul@b
  3757  0022A8  0009               	tblrd		*+
  3758  0022AA  CFF5 F010          	movff	tablat,___flmul@b+1
  3759  0022AE  0009               	tblrd		*+
  3760  0022B0  CFF5 F011          	movff	tablat,___flmul@b+2
  3761  0022B4  000A               	tblrd		*-
  3762  0022B6  CFF5 F012          	movff	tablat,___flmul@b+3
  3763  0022BA  EC57  F00C         	call	___flmul	;wreg free
  3764  0022BE  C00F  F030         	movff	?___flmul,_fround$980
  3765  0022C2  C010  F031         	movff	?___flmul+1,_fround$980+1
  3766  0022C6  C011  F032         	movff	?___flmul+2,_fround$980+2
  3767  0022CA  C012  F033         	movff	?___flmul+3,_fround$980+3
  3768                           
  3769                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3770  0022CE  C030  F00F         	movff	_fround$980,___flmul@b
  3771  0022D2  C031  F010         	movff	_fround$980+1,___flmul@b+1
  3772  0022D6  C032  F011         	movff	_fround$980+2,___flmul@b+2
  3773  0022DA  C033  F012         	movff	_fround$980+3,___flmul@b+3
  3774  0022DE  0E00               	movlw	0
  3775  0022E0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3776  0022E2  0E0A               	movlw	10
  3777  0022E4  6E03               	movwf	___lwmod@divisor^0,c
  3778  0022E6  C034  F001         	movff	fround@prec,___lwmod@dividend
  3779  0022EA  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3780  0022EC  ECDB  F018         	call	___lwmod	;wreg free
  3781  0022F0  90D8               	bcf	status,0,c
  3782  0022F2  3601               	rlcf	?___lwmod^0,f,c
  3783  0022F4  3602               	rlcf	(?___lwmod+1)^0,f,c
  3784  0022F6  90D8               	bcf	status,0,c
  3785  0022F8  3601               	rlcf	?___lwmod^0,f,c
  3786  0022FA  3602               	rlcf	(?___lwmod+1)^0,f,c
  3787  0022FC  0E35               	movlw	low __npowers_
  3788  0022FE  2401               	addwf	?___lwmod^0,w,c
  3789  002300  6EF6               	movwf	tblptrl,c
  3790  002302  0E08               	movlw	high __npowers_
  3791  002304  2002               	addwfc	(?___lwmod+1)^0,w,c
  3792  002306  6EF7               	movwf	tblptrh,c
  3793  002308                     	if	0	;There are less than 3 active tblptr bytes
  3794  002308                     	endif
  3795  002308  0009               	tblrd		*+
  3796  00230A  CFF5 F013          	movff	tablat,___flmul@a
  3797  00230E  0009               	tblrd		*+
  3798  002310  CFF5 F014          	movff	tablat,___flmul@a+1
  3799  002314  0009               	tblrd		*+
  3800  002316  CFF5 F015          	movff	tablat,___flmul@a+2
  3801  00231A  000A               	tblrd		*-
  3802  00231C  CFF5 F016          	movff	tablat,___flmul@a+3
  3803  002320  EC57  F00C         	call	___flmul	;wreg free
  3804  002324  C00F  F028         	movff	?___flmul,?_fround
  3805  002328  C010  F029         	movff	?___flmul+1,?_fround+1
  3806  00232C  C011  F02A         	movff	?___flmul+2,?_fround+2
  3807  002330  C012  F02B         	movff	?___flmul+3,?_fround+3
  3808  002334  EFC2  F011         	goto	l148
  3809  002338                     l2777:
  3810                           
  3811                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3812  002338  5034               	movf	fround@prec^0,w,c
  3813  00233A  0D04               	mullw	4
  3814  00233C  0E35               	movlw	low __npowers_
  3815  00233E  24F3               	addwf	243,w,c
  3816  002340  6EF6               	movwf	tblptrl,c
  3817  002342  0E08               	movlw	high __npowers_
  3818  002344  20F4               	addwfc	244,w,c
  3819  002346  6EF7               	movwf	tblptrh,c
  3820  002348                     	if	0	;There are less than 3 active tblptr bytes
  3821  002348                     	endif
  3822  002348  0009               	tblrd		*+
  3823  00234A  CFF5 F00F          	movff	tablat,___flmul@b
  3824  00234E  0009               	tblrd		*+
  3825  002350  CFF5 F010          	movff	tablat,___flmul@b+1
  3826  002354  0009               	tblrd		*+
  3827  002356  CFF5 F011          	movff	tablat,___flmul@b+2
  3828  00235A  000A               	tblrd		*-
  3829  00235C  CFF5 F012          	movff	tablat,___flmul@b+3
  3830  002360  0E00               	movlw	0
  3831  002362  6E13               	movwf	___flmul@a^0,c
  3832  002364  0E00               	movlw	0
  3833  002366  6E14               	movwf	(___flmul@a+1)^0,c
  3834  002368  0E00               	movlw	0
  3835  00236A  6E15               	movwf	(___flmul@a+2)^0,c
  3836  00236C  0E3F               	movlw	63
  3837  00236E  6E16               	movwf	(___flmul@a+3)^0,c
  3838  002370  EC57  F00C         	call	___flmul	;wreg free
  3839  002374  C00F  F028         	movff	?___flmul,?_fround
  3840  002378  C010  F029         	movff	?___flmul+1,?_fround+1
  3841  00237C  C011  F02A         	movff	?___flmul+2,?_fround+2
  3842  002380  C012  F02B         	movff	?___flmul+3,?_fround+3
  3843  002384                     l148:
  3844  002384  0012               	return		;funcret
  3845  002386                     __end_of_fround:
  3846                           	callstack 0
  3847                           
  3848 ;; *************** function ___lwmod *****************
  3849 ;; Defined at:
  3850 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  dividend        2    0[COMRAM] unsigned int 
  3853 ;;  divisor         2    2[COMRAM] unsigned int 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  counter         1    4[COMRAM] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2    0[COMRAM] unsigned int 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3865 ;;      Params:         4       0       0       0       0       0       0       0       0
  3866 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3868 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3869 ;;Total ram usage:        5 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    1
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_fround
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text7
  3880  0031B6                     __ptext7:
  3881                           	callstack 0
  3882  0031B6                     ___lwmod:
  3883                           	callstack 27
  3884  0031B6  5003               	movf	___lwmod@divisor^0,w,c
  3885  0031B8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3886  0031BA  B4D8               	btfsc	status,2,c
  3887  0031BC  EFE2  F018         	goto	u2701
  3888  0031C0  EFE4  F018         	goto	u2700
  3889  0031C4                     u2701:
  3890  0031C4  EF08  F019         	goto	l764
  3891  0031C8                     u2700:
  3892  0031C8  0E01               	movlw	1
  3893  0031CA  6E05               	movwf	___lwmod@counter^0,c
  3894  0031CC  EFEC  F018         	goto	l2737
  3895  0031D0                     l2735:
  3896  0031D0  90D8               	bcf	status,0,c
  3897  0031D2  3603               	rlcf	___lwmod@divisor^0,f,c
  3898  0031D4  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3899  0031D6  2A05               	incf	___lwmod@counter^0,f,c
  3900  0031D8                     l2737:
  3901  0031D8  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3902  0031DA  EFF1  F018         	goto	u2711
  3903  0031DE  EFF3  F018         	goto	u2710
  3904  0031E2                     u2711:
  3905  0031E2  EFE8  F018         	goto	l2735
  3906  0031E6                     u2710:
  3907  0031E6                     l2739:
  3908  0031E6  5003               	movf	___lwmod@divisor^0,w,c
  3909  0031E8  5C01               	subwf	___lwmod@dividend^0,w,c
  3910  0031EA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3911  0031EC  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3912  0031EE  A0D8               	btfss	status,0,c
  3913  0031F0  EFFC  F018         	goto	u2721
  3914  0031F4  EFFE  F018         	goto	u2720
  3915  0031F8                     u2721:
  3916  0031F8  EF02  F019         	goto	l2743
  3917  0031FC                     u2720:
  3918  0031FC  5003               	movf	___lwmod@divisor^0,w,c
  3919  0031FE  5E01               	subwf	___lwmod@dividend^0,f,c
  3920  003200  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3921  003202  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3922  003204                     l2743:
  3923  003204  90D8               	bcf	status,0,c
  3924  003206  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3925  003208  3203               	rrcf	___lwmod@divisor^0,f,c
  3926  00320A  2E05               	decfsz	___lwmod@counter^0,f,c
  3927  00320C  EFF3  F018         	goto	l2739
  3928  003210                     l764:
  3929  003210  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3930  003214  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3931  003218  0012               	return		;funcret
  3932  00321A                     __end_of___lwmod:
  3933                           	callstack 0
  3934                           
  3935 ;; *************** function ___lwdiv *****************
  3936 ;; Defined at:
  3937 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  dividend        2    5[COMRAM] unsigned int 
  3940 ;;  divisor         2    7[COMRAM] unsigned int 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  quotient        2    9[COMRAM] unsigned int 
  3943 ;;  counter         1   11[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  2    5[COMRAM] unsigned int 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3953 ;;      Params:         4       0       0       0       0       0       0       0       0
  3954 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3956 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3957 ;;Total ram usage:        7 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    1
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_fround
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text8
  3968  003142                     __ptext8:
  3969                           	callstack 0
  3970  003142                     ___lwdiv:
  3971                           	callstack 27
  3972  003142  0E00               	movlw	0
  3973  003144  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  3974  003146  0E00               	movlw	0
  3975  003148  6E0A               	movwf	___lwdiv@quotient^0,c
  3976  00314A  5008               	movf	___lwdiv@divisor^0,w,c
  3977  00314C  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3978  00314E  B4D8               	btfsc	status,2,c
  3979  003150  EFAC  F018         	goto	u2671
  3980  003154  EFAE  F018         	goto	u2670
  3981  003158                     u2671:
  3982  003158  EFD6  F018         	goto	l754
  3983  00315C                     u2670:
  3984  00315C  0E01               	movlw	1
  3985  00315E  6E0C               	movwf	___lwdiv@counter^0,c
  3986  003160  EFB6  F018         	goto	l2717
  3987  003164                     l2715:
  3988  003164  90D8               	bcf	status,0,c
  3989  003166  3608               	rlcf	___lwdiv@divisor^0,f,c
  3990  003168  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3991  00316A  2A0C               	incf	___lwdiv@counter^0,f,c
  3992  00316C                     l2717:
  3993  00316C  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  3994  00316E  EFBB  F018         	goto	u2681
  3995  003172  EFBD  F018         	goto	u2680
  3996  003176                     u2681:
  3997  003176  EFB2  F018         	goto	l2715
  3998  00317A                     u2680:
  3999  00317A                     l2719:
  4000  00317A  90D8               	bcf	status,0,c
  4001  00317C  360A               	rlcf	___lwdiv@quotient^0,f,c
  4002  00317E  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4003  003180  5008               	movf	___lwdiv@divisor^0,w,c
  4004  003182  5C06               	subwf	___lwdiv@dividend^0,w,c
  4005  003184  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4006  003186  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4007  003188  A0D8               	btfss	status,0,c
  4008  00318A  EFC9  F018         	goto	u2691
  4009  00318E  EFCB  F018         	goto	u2690
  4010  003192                     u2691:
  4011  003192  EFD0  F018         	goto	l2727
  4012  003196                     u2690:
  4013  003196  5008               	movf	___lwdiv@divisor^0,w,c
  4014  003198  5E06               	subwf	___lwdiv@dividend^0,f,c
  4015  00319A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4016  00319C  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4017  00319E  800A               	bsf	___lwdiv@quotient^0,0,c
  4018  0031A0                     l2727:
  4019  0031A0  90D8               	bcf	status,0,c
  4020  0031A2  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4021  0031A4  3208               	rrcf	___lwdiv@divisor^0,f,c
  4022  0031A6  2E0C               	decfsz	___lwdiv@counter^0,f,c
  4023  0031A8  EFBD  F018         	goto	l2719
  4024  0031AC                     l754:
  4025  0031AC  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4026  0031B0  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4027  0031B4  0012               	return		;funcret
  4028  0031B6                     __end_of___lwdiv:
  4029                           	callstack 0
  4030                           
  4031 ;; *************** function ___flmul *****************
  4032 ;; Defined at:
  4033 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcmul.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  b               4   14[COMRAM] unsigned int 
  4036 ;;  a               4   18[COMRAM] unsigned int 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  prod            4   33[COMRAM] struct .
  4039 ;;  grs             4   27[COMRAM] unsigned long 
  4040 ;;  temp            2   37[COMRAM] struct .
  4041 ;;  bexp            1   32[COMRAM] unsigned char 
  4042 ;;  aexp            1   31[COMRAM] unsigned char 
  4043 ;;  sign            1   26[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  4   14[COMRAM] unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, prodl, prodh
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4053 ;;      Params:         8       0       0       0       0       0       0       0       0
  4054 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4055 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4056 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4057 ;;Total ram usage:       25 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    1
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;;		_fround
  4065 ;;		_scale
  4066 ;;		_sprintf
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text9
  4071  0018AE                     __ptext9:
  4072                           	callstack 0
  4073  0018AE                     ___flmul:
  4074                           	callstack 27
  4075  0018AE  5012               	movf	(___flmul@b+3)^0,w,c
  4076  0018B0  0B80               	andlw	128
  4077  0018B2  6E1B               	movwf	___flmul@sign^0,c
  4078  0018B4  5012               	movf	(___flmul@b+3)^0,w,c
  4079  0018B6  2412               	addwf	(___flmul@b+3)^0,w,c
  4080  0018B8  6E21               	movwf	___flmul@bexp^0,c
  4081  0018BA  AE11               	btfss	(___flmul@b+2)^0,7,c
  4082  0018BC  EF62  F00C         	goto	u2361
  4083  0018C0  EF64  F00C         	goto	u2360
  4084  0018C4                     u2361:
  4085  0018C4  EF65  F00C         	goto	l2505
  4086  0018C8                     u2360:
  4087  0018C8  8021               	bsf	___flmul@bexp^0,0,c
  4088  0018CA                     l2505:
  4089  0018CA  5021               	movf	___flmul@bexp^0,w,c
  4090  0018CC  B4D8               	btfsc	status,2,c
  4091  0018CE  EF6B  F00C         	goto	u2371
  4092  0018D2  EF6D  F00C         	goto	u2370
  4093  0018D6                     u2371:
  4094  0018D6  EF80  F00C         	goto	l2513
  4095  0018DA                     u2370:
  4096  0018DA  2821               	incf	___flmul@bexp^0,w,c
  4097  0018DC  A4D8               	btfss	status,2,c
  4098  0018DE  EF73  F00C         	goto	u2381
  4099  0018E2  EF75  F00C         	goto	u2380
  4100  0018E6                     u2381:
  4101  0018E6  EF7D  F00C         	goto	l2511
  4102  0018EA                     u2380:
  4103  0018EA  0E00               	movlw	0
  4104  0018EC  6E0F               	movwf	___flmul@b^0,c
  4105  0018EE  0E00               	movlw	0
  4106  0018F0  6E10               	movwf	(___flmul@b+1)^0,c
  4107  0018F2  0E00               	movlw	0
  4108  0018F4  6E11               	movwf	(___flmul@b+2)^0,c
  4109  0018F6  0E00               	movlw	0
  4110  0018F8  6E12               	movwf	(___flmul@b+3)^0,c
  4111  0018FA                     l2511:
  4112  0018FA  8E11               	bsf	(___flmul@b+2)^0,7,c
  4113  0018FC  EF88  F00C         	goto	l2515
  4114  001900                     l2513:
  4115  001900  0E00               	movlw	0
  4116  001902  6E0F               	movwf	___flmul@b^0,c
  4117  001904  0E00               	movlw	0
  4118  001906  6E10               	movwf	(___flmul@b+1)^0,c
  4119  001908  0E00               	movlw	0
  4120  00190A  6E11               	movwf	(___flmul@b+2)^0,c
  4121  00190C  0E00               	movlw	0
  4122  00190E  6E12               	movwf	(___flmul@b+3)^0,c
  4123  001910                     l2515:
  4124  001910  5016               	movf	(___flmul@a+3)^0,w,c
  4125  001912  0B80               	andlw	128
  4126  001914  1A1B               	xorwf	___flmul@sign^0,f,c
  4127  001916  5016               	movf	(___flmul@a+3)^0,w,c
  4128  001918  2416               	addwf	(___flmul@a+3)^0,w,c
  4129  00191A  6E20               	movwf	___flmul@aexp^0,c
  4130  00191C  AE15               	btfss	(___flmul@a+2)^0,7,c
  4131  00191E  EF93  F00C         	goto	u2391
  4132  001922  EF95  F00C         	goto	u2390
  4133  001926                     u2391:
  4134  001926  EF96  F00C         	goto	l2523
  4135  00192A                     u2390:
  4136  00192A  8020               	bsf	___flmul@aexp^0,0,c
  4137  00192C                     l2523:
  4138  00192C  5020               	movf	___flmul@aexp^0,w,c
  4139  00192E  B4D8               	btfsc	status,2,c
  4140  001930  EF9C  F00C         	goto	u2401
  4141  001934  EF9E  F00C         	goto	u2400
  4142  001938                     u2401:
  4143  001938  EFB1  F00C         	goto	l2531
  4144  00193C                     u2400:
  4145  00193C  2820               	incf	___flmul@aexp^0,w,c
  4146  00193E  A4D8               	btfss	status,2,c
  4147  001940  EFA4  F00C         	goto	u2411
  4148  001944  EFA6  F00C         	goto	u2410
  4149  001948                     u2411:
  4150  001948  EFAE  F00C         	goto	l2529
  4151  00194C                     u2410:
  4152  00194C  0E00               	movlw	0
  4153  00194E  6E13               	movwf	___flmul@a^0,c
  4154  001950  0E00               	movlw	0
  4155  001952  6E14               	movwf	(___flmul@a+1)^0,c
  4156  001954  0E00               	movlw	0
  4157  001956  6E15               	movwf	(___flmul@a+2)^0,c
  4158  001958  0E00               	movlw	0
  4159  00195A  6E16               	movwf	(___flmul@a+3)^0,c
  4160  00195C                     l2529:
  4161  00195C  8E15               	bsf	(___flmul@a+2)^0,7,c
  4162  00195E  EFB9  F00C         	goto	l877
  4163  001962                     l2531:
  4164  001962  0E00               	movlw	0
  4165  001964  6E13               	movwf	___flmul@a^0,c
  4166  001966  0E00               	movlw	0
  4167  001968  6E14               	movwf	(___flmul@a+1)^0,c
  4168  00196A  0E00               	movlw	0
  4169  00196C  6E15               	movwf	(___flmul@a+2)^0,c
  4170  00196E  0E00               	movlw	0
  4171  001970  6E16               	movwf	(___flmul@a+3)^0,c
  4172  001972                     l877:
  4173  001972  5020               	movf	___flmul@aexp^0,w,c
  4174  001974  B4D8               	btfsc	status,2,c
  4175  001976  EFBF  F00C         	goto	u2421
  4176  00197A  EFC1  F00C         	goto	u2420
  4177  00197E                     u2421:
  4178  00197E  EFC9  F00C         	goto	l2535
  4179  001982                     u2420:
  4180  001982  5021               	movf	___flmul@bexp^0,w,c
  4181  001984  A4D8               	btfss	status,2,c
  4182  001986  EFC7  F00C         	goto	u2431
  4183  00198A  EFC9  F00C         	goto	u2430
  4184  00198E                     u2431:
  4185  00198E  EFD3  F00C         	goto	l2539
  4186  001992                     u2430:
  4187  001992                     l2535:
  4188  001992  0E00               	movlw	0
  4189  001994  6E0F               	movwf	?___flmul^0,c
  4190  001996  0E00               	movlw	0
  4191  001998  6E10               	movwf	(?___flmul+1)^0,c
  4192  00199A  0E00               	movlw	0
  4193  00199C  6E11               	movwf	(?___flmul+2)^0,c
  4194  00199E  0E00               	movlw	0
  4195  0019A0  6E12               	movwf	(?___flmul+3)^0,c
  4196  0019A2  EF6B  F00E         	goto	l881
  4197  0019A6                     l2539:
  4198  0019A6  5015               	movf	(___flmul@a+2)^0,w,c
  4199  0019A8  020F               	mulwf	___flmul@b^0,c
  4200  0019AA  CFF3 F026          	movff	prodl,___flmul@temp
  4201  0019AE  CFF4 F027          	movff	prodh,___flmul@temp+1
  4202  0019B2  5026               	movf	___flmul@temp^0,w,c
  4203  0019B4  6E1C               	movwf	___flmul@grs^0,c
  4204  0019B6  6A1D               	clrf	(___flmul@grs+1)^0,c
  4205  0019B8  6A1E               	clrf	(___flmul@grs+2)^0,c
  4206  0019BA  6A1F               	clrf	(___flmul@grs+3)^0,c
  4207  0019BC  5027               	movf	(___flmul@temp+1)^0,w,c
  4208  0019BE  6E22               	movwf	___flmul@prod^0,c
  4209  0019C0  6A23               	clrf	(___flmul@prod+1)^0,c
  4210  0019C2  6A24               	clrf	(___flmul@prod+2)^0,c
  4211  0019C4  6A25               	clrf	(___flmul@prod+3)^0,c
  4212  0019C6  5014               	movf	(___flmul@a+1)^0,w,c
  4213  0019C8  0210               	mulwf	(___flmul@b+1)^0,c
  4214  0019CA  CFF3 F026          	movff	prodl,___flmul@temp
  4215  0019CE  CFF4 F027          	movff	prodh,___flmul@temp+1
  4216  0019D2  5026               	movf	___flmul@temp^0,w,c
  4217  0019D4  261C               	addwf	___flmul@grs^0,f,c
  4218  0019D6  0E00               	movlw	0
  4219  0019D8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4220  0019DA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4221  0019DC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4222  0019DE  5027               	movf	(___flmul@temp+1)^0,w,c
  4223  0019E0  2622               	addwf	___flmul@prod^0,f,c
  4224  0019E2  0E00               	movlw	0
  4225  0019E4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4226  0019E6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4227  0019E8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4228  0019EA  5013               	movf	___flmul@a^0,w,c
  4229  0019EC  0211               	mulwf	(___flmul@b+2)^0,c
  4230  0019EE  CFF3 F026          	movff	prodl,___flmul@temp
  4231  0019F2  CFF4 F027          	movff	prodh,___flmul@temp+1
  4232  0019F6  5026               	movf	___flmul@temp^0,w,c
  4233  0019F8  261C               	addwf	___flmul@grs^0,f,c
  4234  0019FA  0E00               	movlw	0
  4235  0019FC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4236  0019FE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4237  001A00  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4238  001A02  5027               	movf	(___flmul@temp+1)^0,w,c
  4239  001A04  2622               	addwf	___flmul@prod^0,f,c
  4240  001A06  0E00               	movlw	0
  4241  001A08  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4242  001A0A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4243  001A0C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4244  001A0E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4245  001A12  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4246  001A16  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4247  001A1A  6A1C               	clrf	___flmul@grs^0,c
  4248  001A1C  5013               	movf	___flmul@a^0,w,c
  4249  001A1E  0210               	mulwf	(___flmul@b+1)^0,c
  4250  001A20  CFF3 F026          	movff	prodl,___flmul@temp
  4251  001A24  CFF4 F027          	movff	prodh,___flmul@temp+1
  4252  001A28  5026               	movf	___flmul@temp^0,w,c
  4253  001A2A  261C               	addwf	___flmul@grs^0,f,c
  4254  001A2C  5027               	movf	(___flmul@temp+1)^0,w,c
  4255  001A2E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4256  001A30  0E00               	movlw	0
  4257  001A32  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4258  001A34  0E00               	movlw	0
  4259  001A36  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4260  001A38  5014               	movf	(___flmul@a+1)^0,w,c
  4261  001A3A  020F               	mulwf	___flmul@b^0,c
  4262  001A3C  CFF3 F026          	movff	prodl,___flmul@temp
  4263  001A40  CFF4 F027          	movff	prodh,___flmul@temp+1
  4264  001A44  5026               	movf	___flmul@temp^0,w,c
  4265  001A46  261C               	addwf	___flmul@grs^0,f,c
  4266  001A48  5027               	movf	(___flmul@temp+1)^0,w,c
  4267  001A4A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4268  001A4C  0E00               	movlw	0
  4269  001A4E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4270  001A50  0E00               	movlw	0
  4271  001A52  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4272  001A54  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4273  001A58  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4274  001A5C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4275  001A60  6A1C               	clrf	___flmul@grs^0,c
  4276  001A62  5013               	movf	___flmul@a^0,w,c
  4277  001A64  020F               	mulwf	___flmul@b^0,c
  4278  001A66  CFF3 F026          	movff	prodl,___flmul@temp
  4279  001A6A  CFF4 F027          	movff	prodh,___flmul@temp+1
  4280  001A6E  5026               	movf	___flmul@temp^0,w,c
  4281  001A70  261C               	addwf	___flmul@grs^0,f,c
  4282  001A72  5027               	movf	(___flmul@temp+1)^0,w,c
  4283  001A74  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4284  001A76  0E00               	movlw	0
  4285  001A78  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4286  001A7A  0E00               	movlw	0
  4287  001A7C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4288  001A7E  5015               	movf	(___flmul@a+2)^0,w,c
  4289  001A80  0210               	mulwf	(___flmul@b+1)^0,c
  4290  001A82  CFF3 F026          	movff	prodl,___flmul@temp
  4291  001A86  CFF4 F027          	movff	prodh,___flmul@temp+1
  4292  001A8A  5026               	movf	___flmul@temp^0,w,c
  4293  001A8C  2622               	addwf	___flmul@prod^0,f,c
  4294  001A8E  5027               	movf	(___flmul@temp+1)^0,w,c
  4295  001A90  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4296  001A92  0E00               	movlw	0
  4297  001A94  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4298  001A96  0E00               	movlw	0
  4299  001A98  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4300  001A9A  5014               	movf	(___flmul@a+1)^0,w,c
  4301  001A9C  0211               	mulwf	(___flmul@b+2)^0,c
  4302  001A9E  CFF3 F026          	movff	prodl,___flmul@temp
  4303  001AA2  CFF4 F027          	movff	prodh,___flmul@temp+1
  4304  001AA6  5026               	movf	___flmul@temp^0,w,c
  4305  001AA8  2622               	addwf	___flmul@prod^0,f,c
  4306  001AAA  5027               	movf	(___flmul@temp+1)^0,w,c
  4307  001AAC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4308  001AAE  0E00               	movlw	0
  4309  001AB0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4310  001AB2  0E00               	movlw	0
  4311  001AB4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4312  001AB6  5015               	movf	(___flmul@a+2)^0,w,c
  4313  001AB8  0211               	mulwf	(___flmul@b+2)^0,c
  4314  001ABA  CFF3 F026          	movff	prodl,___flmul@temp
  4315  001ABE  CFF4 F027          	movff	prodh,___flmul@temp+1
  4316  001AC2  5026               	movf	___flmul@temp^0,w,c
  4317  001AC4  6E17               	movwf	??___flmul^0,c
  4318  001AC6  5027               	movf	(___flmul@temp+1)^0,w,c
  4319  001AC8  6E18               	movwf	(??___flmul+1)^0,c
  4320  001ACA  6A19               	clrf	(??___flmul+2)^0,c
  4321  001ACC  6A1A               	clrf	(??___flmul+3)^0,c
  4322  001ACE  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4323  001AD2  C018  F019         	movff	??___flmul+1,??___flmul+2
  4324  001AD6  C017  F018         	movff	??___flmul,??___flmul+1
  4325  001ADA  6A17               	clrf	??___flmul^0,c
  4326  001ADC  5017               	movf	??___flmul^0,w,c
  4327  001ADE  2622               	addwf	___flmul@prod^0,f,c
  4328  001AE0  5018               	movf	(??___flmul+1)^0,w,c
  4329  001AE2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4330  001AE4  5019               	movf	(??___flmul+2)^0,w,c
  4331  001AE6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4332  001AE8  501A               	movf	(??___flmul+3)^0,w,c
  4333  001AEA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4334  001AEC  C01C  F017         	movff	___flmul@grs,??___flmul
  4335  001AF0  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4336  001AF4  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4337  001AF8  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4338  001AFC  0E19               	movlw	25
  4339  001AFE  EF86  F00D         	goto	u2440
  4340  001B02                     u2445:
  4341  001B02  90D8               	bcf	status,0,c
  4342  001B04  321A               	rrcf	(??___flmul+3)^0,f,c
  4343  001B06  3219               	rrcf	(??___flmul+2)^0,f,c
  4344  001B08  3218               	rrcf	(??___flmul+1)^0,f,c
  4345  001B0A  3217               	rrcf	??___flmul^0,f,c
  4346  001B0C                     u2440:
  4347  001B0C  2EE8               	decfsz	wreg,f,c
  4348  001B0E  EF81  F00D         	goto	u2445
  4349  001B12  5017               	movf	??___flmul^0,w,c
  4350  001B14  2622               	addwf	___flmul@prod^0,f,c
  4351  001B16  5018               	movf	(??___flmul+1)^0,w,c
  4352  001B18  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4353  001B1A  5019               	movf	(??___flmul+2)^0,w,c
  4354  001B1C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4355  001B1E  501A               	movf	(??___flmul+3)^0,w,c
  4356  001B20  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4357  001B22  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4358  001B26  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4359  001B2A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4360  001B2E  6A1C               	clrf	___flmul@grs^0,c
  4361  001B30  5020               	movf	___flmul@aexp^0,w,c
  4362  001B32  C021  F017         	movff	___flmul@bexp,??___flmul
  4363  001B36  6A18               	clrf	(??___flmul+1)^0,c
  4364  001B38  2617               	addwf	??___flmul^0,f,c
  4365  001B3A  0E00               	movlw	0
  4366  001B3C  2218               	addwfc	(??___flmul+1)^0,f,c
  4367  001B3E  0E82               	movlw	130
  4368  001B40  2417               	addwf	??___flmul^0,w,c
  4369  001B42  6E26               	movwf	___flmul@temp^0,c
  4370  001B44  0EFF               	movlw	255
  4371  001B46  2018               	addwfc	(??___flmul+1)^0,w,c
  4372  001B48  6E27               	movwf	(___flmul@temp+1)^0,c
  4373  001B4A  EFBC  F00D         	goto	l2587
  4374  001B4E                     l2581:
  4375  001B4E  90D8               	bcf	status,0,c
  4376  001B50  3622               	rlcf	___flmul@prod^0,f,c
  4377  001B52  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4378  001B54  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4379  001B56  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4380  001B58  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4381  001B5A  EFB1  F00D         	goto	u2451
  4382  001B5E  EFB3  F00D         	goto	u2450
  4383  001B62                     u2451:
  4384  001B62  EFB4  F00D         	goto	l884
  4385  001B66                     u2450:
  4386  001B66  8022               	bsf	___flmul@prod^0,0,c
  4387  001B68                     l884:
  4388  001B68  90D8               	bcf	status,0,c
  4389  001B6A  361C               	rlcf	___flmul@grs^0,f,c
  4390  001B6C  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4391  001B6E  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4392  001B70  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4393  001B72  0626               	decf	___flmul@temp^0,f,c
  4394  001B74  A0D8               	btfss	status,0,c
  4395  001B76  0627               	decf	(___flmul@temp+1)^0,f,c
  4396  001B78                     l2587:
  4397  001B78  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4398  001B7A  EFC1  F00D         	goto	u2461
  4399  001B7E  EFC3  F00D         	goto	u2460
  4400  001B82                     u2461:
  4401  001B82  EFA7  F00D         	goto	l2581
  4402  001B86                     u2460:
  4403  001B86  0E00               	movlw	0
  4404  001B88  6E20               	movwf	___flmul@aexp^0,c
  4405  001B8A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4406  001B8C  EFCA  F00D         	goto	u2471
  4407  001B90  EFCC  F00D         	goto	u2470
  4408  001B94                     u2471:
  4409  001B94  EFF0  F00D         	goto	l886
  4410  001B98                     u2470:
  4411  001B98  0EFF               	movlw	255
  4412  001B9A  141C               	andwf	___flmul@grs^0,w,c
  4413  001B9C  6E17               	movwf	??___flmul^0,c
  4414  001B9E  0EFF               	movlw	255
  4415  001BA0  141D               	andwf	(___flmul@grs+1)^0,w,c
  4416  001BA2  6E18               	movwf	(??___flmul+1)^0,c
  4417  001BA4  0EFF               	movlw	255
  4418  001BA6  141E               	andwf	(___flmul@grs+2)^0,w,c
  4419  001BA8  6E19               	movwf	(??___flmul+2)^0,c
  4420  001BAA  0E7F               	movlw	127
  4421  001BAC  141F               	andwf	(___flmul@grs+3)^0,w,c
  4422  001BAE  6E1A               	movwf	(??___flmul+3)^0,c
  4423  001BB0  5017               	movf	??___flmul^0,w,c
  4424  001BB2  1018               	iorwf	(??___flmul+1)^0,w,c
  4425  001BB4  1019               	iorwf	(??___flmul+2)^0,w,c
  4426  001BB6  101A               	iorwf	(??___flmul+3)^0,w,c
  4427  001BB8  B4D8               	btfsc	status,2,c
  4428  001BBA  EFE1  F00D         	goto	u2481
  4429  001BBE  EFE3  F00D         	goto	u2480
  4430  001BC2                     u2481:
  4431  001BC2  EFE7  F00D         	goto	l887
  4432  001BC6                     u2480:
  4433  001BC6                     l2595:
  4434  001BC6  0E01               	movlw	1
  4435  001BC8  6E20               	movwf	___flmul@aexp^0,c
  4436  001BCA  EFF0  F00D         	goto	l886
  4437  001BCE                     l887:
  4438  001BCE  A022               	btfss	___flmul@prod^0,0,c
  4439  001BD0  EFEC  F00D         	goto	u2491
  4440  001BD4  EFEE  F00D         	goto	u2490
  4441  001BD8                     u2491:
  4442  001BD8  EFF0  F00D         	goto	l886
  4443  001BDC                     u2490:
  4444  001BDC  EFE3  F00D         	goto	l2595
  4445  001BE0                     l886:
  4446  001BE0  5020               	movf	___flmul@aexp^0,w,c
  4447  001BE2  B4D8               	btfsc	status,2,c
  4448  001BE4  EFF6  F00D         	goto	u2501
  4449  001BE8  EFF8  F00D         	goto	u2500
  4450  001BEC                     u2501:
  4451  001BEC  EF1C  F00E         	goto	l2607
  4452  001BF0                     u2500:
  4453  001BF0  0E01               	movlw	1
  4454  001BF2  2622               	addwf	___flmul@prod^0,f,c
  4455  001BF4  0E00               	movlw	0
  4456  001BF6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4457  001BF8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4458  001BFA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4459  001BFC  A025               	btfss	(___flmul@prod+3)^0,0,c
  4460  001BFE  EF03  F00E         	goto	u2511
  4461  001C02  EF05  F00E         	goto	u2510
  4462  001C06                     u2511:
  4463  001C06  EF1C  F00E         	goto	l2607
  4464  001C0A                     u2510:
  4465  001C0A  C022  F017         	movff	___flmul@prod,??___flmul
  4466  001C0E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4467  001C12  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4468  001C16  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4469  001C1A  341A               	rlcf	(??___flmul+3)^0,w,c
  4470  001C1C  321A               	rrcf	(??___flmul+3)^0,f,c
  4471  001C1E  3219               	rrcf	(??___flmul+2)^0,f,c
  4472  001C20  3218               	rrcf	(??___flmul+1)^0,f,c
  4473  001C22  3217               	rrcf	??___flmul^0,f,c
  4474  001C24  C017  F022         	movff	??___flmul,___flmul@prod
  4475  001C28  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4476  001C2C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4477  001C30  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4478  001C34  4A26               	infsnz	___flmul@temp^0,f,c
  4479  001C36  2A27               	incf	(___flmul@temp+1)^0,f,c
  4480  001C38                     l2607:
  4481  001C38  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4482  001C3A  EF27  F00E         	goto	u2521
  4483  001C3E  5027               	movf	(___flmul@temp+1)^0,w,c
  4484  001C40  E108               	bnz	u2520
  4485  001C42  2826               	incf	___flmul@temp^0,w,c
  4486  001C44  A0D8               	btfss	status,0,c
  4487  001C46  EF27  F00E         	goto	u2521
  4488  001C4A  EF29  F00E         	goto	u2520
  4489  001C4E                     u2521:
  4490  001C4E  EF33  F00E         	goto	l2611
  4491  001C52                     u2520:
  4492  001C52  0E00               	movlw	0
  4493  001C54  6E22               	movwf	___flmul@prod^0,c
  4494  001C56  0E00               	movlw	0
  4495  001C58  6E23               	movwf	(___flmul@prod+1)^0,c
  4496  001C5A  0E80               	movlw	128
  4497  001C5C  6E24               	movwf	(___flmul@prod+2)^0,c
  4498  001C5E  0E7F               	movlw	127
  4499  001C60  6E25               	movwf	(___flmul@prod+3)^0,c
  4500  001C62  EF61  F00E         	goto	l2623
  4501  001C66                     l2611:
  4502  001C66  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4503  001C68  EF40  F00E         	goto	u2530
  4504  001C6C  5027               	movf	(___flmul@temp+1)^0,w,c
  4505  001C6E  E106               	bnz	u2531
  4506  001C70  0426               	decf	___flmul@temp^0,w,c
  4507  001C72  B0D8               	btfsc	status,0,c
  4508  001C74  EF3E  F00E         	goto	u2531
  4509  001C78  EF40  F00E         	goto	u2530
  4510  001C7C                     u2531:
  4511  001C7C  EF4C  F00E         	goto	l894
  4512  001C80                     u2530:
  4513  001C80  0E00               	movlw	0
  4514  001C82  6E22               	movwf	___flmul@prod^0,c
  4515  001C84  0E00               	movlw	0
  4516  001C86  6E23               	movwf	(___flmul@prod+1)^0,c
  4517  001C88  0E00               	movlw	0
  4518  001C8A  6E24               	movwf	(___flmul@prod+2)^0,c
  4519  001C8C  0E00               	movlw	0
  4520  001C8E  6E25               	movwf	(___flmul@prod+3)^0,c
  4521  001C90  0E00               	movlw	0
  4522  001C92  6E1B               	movwf	___flmul@sign^0,c
  4523  001C94  EF61  F00E         	goto	l2623
  4524  001C98                     l894:
  4525  001C98  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4526  001C9C  0EFF               	movlw	255
  4527  001C9E  1622               	andwf	___flmul@prod^0,f,c
  4528  001CA0  0EFF               	movlw	255
  4529  001CA2  1623               	andwf	(___flmul@prod+1)^0,f,c
  4530  001CA4  0E7F               	movlw	127
  4531  001CA6  1624               	andwf	(___flmul@prod+2)^0,f,c
  4532  001CA8  0E00               	movlw	0
  4533  001CAA  1625               	andwf	(___flmul@prod+3)^0,f,c
  4534  001CAC  A021               	btfss	___flmul@bexp^0,0,c
  4535  001CAE  EF5B  F00E         	goto	u2541
  4536  001CB2  EF5D  F00E         	goto	u2540
  4537  001CB6                     u2541:
  4538  001CB6  EF5E  F00E         	goto	l2621
  4539  001CBA                     u2540:
  4540  001CBA  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4541  001CBC                     l2621:
  4542  001CBC  90D8               	bcf	status,0,c
  4543  001CBE  3021               	rrcf	___flmul@bexp^0,w,c
  4544  001CC0  6E25               	movwf	(___flmul@prod+3)^0,c
  4545  001CC2                     l2623:
  4546  001CC2  501B               	movf	___flmul@sign^0,w,c
  4547  001CC4  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4548  001CC6  C022  F00F         	movff	___flmul@prod,?___flmul
  4549  001CCA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4550  001CCE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4551  001CD2  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4552  001CD6                     l881:
  4553  001CD6  0012               	return		;funcret
  4554  001CD8                     __end_of___flmul:
  4555                           	callstack 0
  4556                           
  4557 ;; *************** function __tdiv_to_l_ *****************
  4558 ;; Defined at:
  4559 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdivl.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  f1              4    0[COMRAM] float 
  4562 ;;  f2              4    4[COMRAM] float 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  quot            4   11[COMRAM] unsigned long 
  4565 ;;  exp1            1   16[COMRAM] unsigned char 
  4566 ;;  cntr            1   15[COMRAM] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  4    0[COMRAM] unsigned long 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4576 ;;      Params:         8       0       0       0       0       0       0       0       0
  4577 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4578 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4579 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4580 ;;Total ram usage:       17 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_sprintf
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text10
  4591  0027B4                     __ptext10:
  4592                           	callstack 0
  4593  0027B4                     __tdiv_to_l_:
  4594                           	callstack 28
  4595  0027B4  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4596  0027B8  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4597  0027BA  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4598  0027BC  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  4599  0027BE  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4600  0027C0  E301               	bnc	u2851
  4601  0027C2  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4602  0027C4                     u2851:
  4603  0027C4  5009               	movf	??__tdiv_to_l_^0,w,c
  4604  0027C6  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  4605  0027C8  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4606  0027CA  A4D8               	btfss	status,2,c
  4607  0027CC  EFEA  F013         	goto	u2861
  4608  0027D0  EFEC  F013         	goto	u2860
  4609  0027D4                     u2861:
  4610  0027D4  EFF6  F013         	goto	l2837
  4611  0027D8                     u2860:
  4612  0027D8                     l2833:
  4613  0027D8  0E00               	movlw	0
  4614  0027DA  6E01               	movwf	?__tdiv_to_l_^0,c
  4615  0027DC  0E00               	movlw	0
  4616  0027DE  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  4617  0027E0  0E00               	movlw	0
  4618  0027E2  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  4619  0027E4  0E00               	movlw	0
  4620  0027E6  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  4621  0027E8  EF84  F014         	goto	l604
  4622  0027EC                     l2837:
  4623  0027EC  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4624  0027F0  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4625  0027F2  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4626  0027F4  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  4627  0027F6  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4628  0027F8  E301               	bnc	u2871
  4629  0027FA  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4630  0027FC                     u2871:
  4631  0027FC  5009               	movf	??__tdiv_to_l_^0,w,c
  4632  0027FE  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4633  002800  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4634  002802  A4D8               	btfss	status,2,c
  4635  002804  EF06  F014         	goto	u2881
  4636  002808  EF08  F014         	goto	u2880
  4637  00280C                     u2881:
  4638  00280C  EF0A  F014         	goto	l2843
  4639  002810                     u2880:
  4640  002810  EFEC  F013         	goto	l2833
  4641  002814                     l2843:
  4642  002814  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  4643  002816  0EFF               	movlw	255
  4644  002818  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  4645  00281A  0EFF               	movlw	255
  4646  00281C  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  4647  00281E  0E00               	movlw	0
  4648  002820  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  4649  002822  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  4650  002824  0EFF               	movlw	255
  4651  002826  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  4652  002828  0EFF               	movlw	255
  4653  00282A  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  4654  00282C  0E00               	movlw	0
  4655  00282E  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  4656  002830  0E00               	movlw	0
  4657  002832  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  4658  002834  0E00               	movlw	0
  4659  002836  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  4660  002838  0E00               	movlw	0
  4661  00283A  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  4662  00283C  0E00               	movlw	0
  4663  00283E  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  4664  002840  0E7F               	movlw	127
  4665  002842  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4666  002844  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4667  002846  0F98               	addlw	152
  4668  002848  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4669  00284A  0E18               	movlw	24
  4670  00284C  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4671  00284E                     l606:
  4672  00284E  90D8               	bcf	status,0,c
  4673  002850  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4674  002852  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4675  002854  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4676  002856  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4677  002858  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4678  00285A  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  4679  00285C  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4680  00285E  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  4681  002860  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4682  002862  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  4683  002864  A0D8               	btfss	status,0,c
  4684  002866  EF37  F014         	goto	u2891
  4685  00286A  EF39  F014         	goto	u2890
  4686  00286E                     u2891:
  4687  00286E  EF40  F014         	goto	l607
  4688  002872                     u2890:
  4689  002872  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4690  002874  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  4691  002876  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4692  002878  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  4693  00287A  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4694  00287C  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  4695  00287E  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  4696  002880                     l607:
  4697  002880  90D8               	bcf	status,0,c
  4698  002882  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  4699  002884  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  4700  002886  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  4701  002888  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  4702  00288A  EF27  F014         	goto	l606
  4703  00288E  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  4704  002890  EF4E  F014         	goto	u2900
  4705  002894  EF4C  F014         	goto	u2901
  4706  002898                     u2901:
  4707  002898  EF64  F014         	goto	l2877
  4708  00289C                     u2900:
  4709  00289C  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4710  00289E  0A80               	xorlw	128
  4711  0028A0  0F97               	addlw	151
  4712  0028A2  B0D8               	btfsc	status,0,c
  4713  0028A4  EF56  F014         	goto	u2911
  4714  0028A8  EF58  F014         	goto	u2910
  4715  0028AC                     u2911:
  4716  0028AC  EF5A  F014         	goto	l2873
  4717  0028B0                     u2910:
  4718  0028B0  EFEC  F013         	goto	l2833
  4719  0028B4                     l2873:
  4720  0028B4  90D8               	bcf	status,0,c
  4721  0028B6  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  4722  0028B8  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  4723  0028BA  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  4724  0028BC  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  4725  0028BE  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  4726  0028C0  EF5A  F014         	goto	l2873
  4727  0028C4  EF7C  F014         	goto	l613
  4728  0028C8                     l2877:
  4729  0028C8  0E17               	movlw	23
  4730  0028CA  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  4731  0028CC  EF6A  F014         	goto	u2921
  4732  0028D0  EF6C  F014         	goto	u2920
  4733  0028D4                     u2921:
  4734  0028D4  EF74  F014         	goto	l2885
  4735  0028D8                     u2920:
  4736  0028D8  EFEC  F013         	goto	l2833
  4737  0028DC                     l2883:
  4738  0028DC  90D8               	bcf	status,0,c
  4739  0028DE  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4740  0028E0  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4741  0028E2  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4742  0028E4  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4743  0028E6  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  4744  0028E8                     l2885:
  4745  0028E8  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4746  0028EA  A4D8               	btfss	status,2,c
  4747  0028EC  EF7A  F014         	goto	u2931
  4748  0028F0  EF7C  F014         	goto	u2930
  4749  0028F4                     u2931:
  4750  0028F4  EF6E  F014         	goto	l2883
  4751  0028F8                     u2930:
  4752  0028F8                     l613:
  4753  0028F8  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4754  0028FC  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4755  002900  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4756  002904  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4757  002908                     l604:
  4758  002908  0012               	return		;funcret
  4759  00290A                     __end_of__tdiv_to_l_:
  4760                           	callstack 0
  4761                           
  4762 ;; *************** function __div_to_l_ *****************
  4763 ;; Defined at:
  4764 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fldivl.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  f1              4    0[COMRAM] unsigned long 
  4767 ;;  f2              4    4[COMRAM] unsigned long 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  quot            4    8[COMRAM] unsigned long 
  4770 ;;  exp1            1   13[COMRAM] unsigned char 
  4771 ;;  cntr            1   12[COMRAM] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  4    0[COMRAM] unsigned long 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4781 ;;      Params:         8       0       0       0       0       0       0       0       0
  4782 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4784 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:       14 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_sprintf
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text11
  4796  00290A                     __ptext11:
  4797                           	callstack 0
  4798  00290A                     __div_to_l_:
  4799                           	callstack 28
  4800  00290A  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  4801  00290C  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  4802  00290E  6E0E               	movwf	__div_to_l_@exp1^0,c
  4803  002910  500E               	movf	__div_to_l_@exp1^0,w,c
  4804  002912  A4D8               	btfss	status,2,c
  4805  002914  EF8E  F014         	goto	u2941
  4806  002918  EF90  F014         	goto	u2940
  4807  00291C                     u2941:
  4808  00291C  EF9A  F014         	goto	l2893
  4809  002920                     u2940:
  4810  002920                     l2889:
  4811  002920  0E00               	movlw	0
  4812  002922  6E01               	movwf	?__div_to_l_^0,c
  4813  002924  0E00               	movlw	0
  4814  002926  6E02               	movwf	(?__div_to_l_+1)^0,c
  4815  002928  0E00               	movlw	0
  4816  00292A  6E03               	movwf	(?__div_to_l_+2)^0,c
  4817  00292C  0E00               	movlw	0
  4818  00292E  6E04               	movwf	(?__div_to_l_+3)^0,c
  4819  002930  EF2A  F015         	goto	l495
  4820  002934                     l2893:
  4821  002934  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  4822  002936  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  4823  002938  6E0D               	movwf	__div_to_l_@cntr^0,c
  4824  00293A  500D               	movf	__div_to_l_@cntr^0,w,c
  4825  00293C  A4D8               	btfss	status,2,c
  4826  00293E  EFA3  F014         	goto	u2951
  4827  002942  EFA5  F014         	goto	u2950
  4828  002946                     u2951:
  4829  002946  EFA7  F014         	goto	l2899
  4830  00294A                     u2950:
  4831  00294A  EF90  F014         	goto	l2889
  4832  00294E                     l2899:
  4833  00294E  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  4834  002950  0EFF               	movlw	255
  4835  002952  1601               	andwf	__div_to_l_@f1^0,f,c
  4836  002954  0EFF               	movlw	255
  4837  002956  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  4838  002958  0EFF               	movlw	255
  4839  00295A  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  4840  00295C  0E00               	movlw	0
  4841  00295E  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  4842  002960  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  4843  002962  0EFF               	movlw	255
  4844  002964  1605               	andwf	__div_to_l_@f2^0,f,c
  4845  002966  0EFF               	movlw	255
  4846  002968  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  4847  00296A  0EFF               	movlw	255
  4848  00296C  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  4849  00296E  0E00               	movlw	0
  4850  002970  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  4851  002972  0E00               	movlw	0
  4852  002974  6E09               	movwf	__div_to_l_@quot^0,c
  4853  002976  0E00               	movlw	0
  4854  002978  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  4855  00297A  0E00               	movlw	0
  4856  00297C  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  4857  00297E  0E00               	movlw	0
  4858  002980  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  4859  002982  0E7F               	movlw	127
  4860  002984  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4861  002986  500D               	movf	__div_to_l_@cntr^0,w,c
  4862  002988  0FA0               	addlw	160
  4863  00298A  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4864  00298C  0E20               	movlw	32
  4865  00298E  6E0D               	movwf	__div_to_l_@cntr^0,c
  4866  002990                     l2913:
  4867  002990  90D8               	bcf	status,0,c
  4868  002992  3609               	rlcf	__div_to_l_@quot^0,f,c
  4869  002994  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4870  002996  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4871  002998  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4872  00299A  5005               	movf	__div_to_l_@f2^0,w,c
  4873  00299C  5C01               	subwf	__div_to_l_@f1^0,w,c
  4874  00299E  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4875  0029A0  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  4876  0029A2  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4877  0029A4  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  4878  0029A6  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4879  0029A8  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  4880  0029AA  A0D8               	btfss	status,0,c
  4881  0029AC  EFDA  F014         	goto	u2961
  4882  0029B0  EFDC  F014         	goto	u2960
  4883  0029B4                     u2961:
  4884  0029B4  EFE5  F014         	goto	l2921
  4885  0029B8                     u2960:
  4886  0029B8  5005               	movf	__div_to_l_@f2^0,w,c
  4887  0029BA  5E01               	subwf	__div_to_l_@f1^0,f,c
  4888  0029BC  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4889  0029BE  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  4890  0029C0  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4891  0029C2  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  4892  0029C4  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4893  0029C6  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  4894  0029C8  8009               	bsf	__div_to_l_@quot^0,0,c
  4895  0029CA                     l2921:
  4896  0029CA  90D8               	bcf	status,0,c
  4897  0029CC  3601               	rlcf	__div_to_l_@f1^0,f,c
  4898  0029CE  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  4899  0029D0  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  4900  0029D2  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  4901  0029D4  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  4902  0029D6  EFC8  F014         	goto	l2913
  4903  0029DA  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  4904  0029DC  EFF4  F014         	goto	u2970
  4905  0029E0  EFF2  F014         	goto	u2971
  4906  0029E4                     u2971:
  4907  0029E4  EF0A  F015         	goto	l2937
  4908  0029E8                     u2970:
  4909  0029E8  500E               	movf	__div_to_l_@exp1^0,w,c
  4910  0029EA  0A80               	xorlw	128
  4911  0029EC  0F9F               	addlw	159
  4912  0029EE  B0D8               	btfsc	status,0,c
  4913  0029F0  EFFC  F014         	goto	u2981
  4914  0029F4  EFFE  F014         	goto	u2980
  4915  0029F8                     u2981:
  4916  0029F8  EF00  F015         	goto	l2933
  4917  0029FC                     u2980:
  4918  0029FC  EF90  F014         	goto	l2889
  4919  002A00                     l2933:
  4920  002A00  90D8               	bcf	status,0,c
  4921  002A02  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  4922  002A04  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  4923  002A06  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  4924  002A08  3209               	rrcf	__div_to_l_@quot^0,f,c
  4925  002A0A  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  4926  002A0C  EF00  F015         	goto	l2933
  4927  002A10  EF22  F015         	goto	l504
  4928  002A14                     l2937:
  4929  002A14  0E1F               	movlw	31
  4930  002A16  640E               	cpfsgt	__div_to_l_@exp1^0,c
  4931  002A18  EF10  F015         	goto	u2991
  4932  002A1C  EF12  F015         	goto	u2990
  4933  002A20                     u2991:
  4934  002A20  EF1A  F015         	goto	l2945
  4935  002A24                     u2990:
  4936  002A24  EF90  F014         	goto	l2889
  4937  002A28                     l2943:
  4938  002A28  90D8               	bcf	status,0,c
  4939  002A2A  3609               	rlcf	__div_to_l_@quot^0,f,c
  4940  002A2C  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4941  002A2E  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4942  002A30  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4943  002A32  060E               	decf	__div_to_l_@exp1^0,f,c
  4944  002A34                     l2945:
  4945  002A34  500E               	movf	__div_to_l_@exp1^0,w,c
  4946  002A36  A4D8               	btfss	status,2,c
  4947  002A38  EF20  F015         	goto	u3001
  4948  002A3C  EF22  F015         	goto	u3000
  4949  002A40                     u3001:
  4950  002A40  EF14  F015         	goto	l2943
  4951  002A44                     u3000:
  4952  002A44                     l504:
  4953  002A44  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4954  002A48  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4955  002A4C  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4956  002A50  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4957  002A54                     l495:
  4958  002A54  0012               	return		;funcret
  4959  002A56                     __end_of__div_to_l_:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function ___xxtofl *****************
  4963 ;; Defined at:
  4964 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  sign            1    wreg     unsigned char 
  4967 ;;  val             4    0[COMRAM] long 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  sign            1    8[COMRAM] unsigned char 
  4970 ;;  arg             4   10[COMRAM] unsigned long 
  4971 ;;  exp             1    9[COMRAM] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4    0[COMRAM] unsigned char 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4981 ;;      Params:         4       0       0       0       0       0       0       0       0
  4982 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4983 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4984 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4985 ;;Total ram usage:       14 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;;		_sprintf
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text12
  4997  002600                     __ptext12:
  4998                           	callstack 0
  4999  002600                     ___xxtofl:
  5000                           	callstack 28
  5001                           
  5002                           ;incstack = 0
  5003                           ;___xxtofl@sign stored from wreg
  5004  002600  6E09               	movwf	___xxtofl@sign^0,c
  5005  002602  5009               	movf	___xxtofl@sign^0,w,c
  5006  002604  B4D8               	btfsc	status,2,c
  5007  002606  EF07  F013         	goto	u3291
  5008  00260A  EF09  F013         	goto	u3290
  5009  00260E                     u3291:
  5010  00260E  EF2B  F013         	goto	l918
  5011  002612                     u3290:
  5012  002612  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5013  002614  EF10  F013         	goto	u3300
  5014  002618  EF0E  F013         	goto	u3301
  5015  00261C                     u3301:
  5016  00261C  EF2B  F013         	goto	l918
  5017  002620                     u3300:
  5018  002620  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5019  002624  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5020  002628  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5021  00262C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5022  002630  1E05               	comf	??___xxtofl^0,f,c
  5023  002632  1E06               	comf	(??___xxtofl+1)^0,f,c
  5024  002634  1E07               	comf	(??___xxtofl+2)^0,f,c
  5025  002636  1E08               	comf	(??___xxtofl+3)^0,f,c
  5026  002638  2A05               	incf	??___xxtofl^0,f,c
  5027  00263A  0E00               	movlw	0
  5028  00263C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5029  00263E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5030  002640  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5031  002642  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5032  002646  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5033  00264A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5034  00264E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5035  002652  EF33  F013         	goto	l3137
  5036  002656                     l918:
  5037  002656  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5038  00265A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5039  00265E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5040  002662  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5041  002666                     l3137:
  5042  002666  5001               	movf	___xxtofl@val^0,w,c
  5043  002668  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5044  00266A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5045  00266C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5046  00266E  A4D8               	btfss	status,2,c
  5047  002670  EF3C  F013         	goto	u3311
  5048  002674  EF3E  F013         	goto	u3310
  5049  002678                     u3311:
  5050  002678  EF48  F013         	goto	l3143
  5051  00267C                     u3310:
  5052  00267C  0E00               	movlw	0
  5053  00267E  6E01               	movwf	?___xxtofl^0,c
  5054  002680  0E00               	movlw	0
  5055  002682  6E02               	movwf	(?___xxtofl+1)^0,c
  5056  002684  0E00               	movlw	0
  5057  002686  6E03               	movwf	(?___xxtofl+2)^0,c
  5058  002688  0E00               	movlw	0
  5059  00268A  6E04               	movwf	(?___xxtofl+3)^0,c
  5060  00268C  EFD9  F013         	goto	l921
  5061  002690                     l3143:
  5062  002690  0E96               	movlw	150
  5063  002692  6E0A               	movwf	___xxtofl@exp^0,c
  5064  002694  EF52  F013         	goto	l3147
  5065  002698                     l3145:
  5066  002698  2A0A               	incf	___xxtofl@exp^0,f,c
  5067  00269A  90D8               	bcf	status,0,c
  5068  00269C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5069  00269E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5070  0026A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5071  0026A2  320B               	rrcf	___xxtofl@arg^0,f,c
  5072  0026A4                     l3147:
  5073  0026A4  0E00               	movlw	0
  5074  0026A6  140B               	andwf	___xxtofl@arg^0,w,c
  5075  0026A8  6E05               	movwf	??___xxtofl^0,c
  5076  0026AA  0E00               	movlw	0
  5077  0026AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5078  0026AE  6E06               	movwf	(??___xxtofl+1)^0,c
  5079  0026B0  0E00               	movlw	0
  5080  0026B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5081  0026B4  6E07               	movwf	(??___xxtofl+2)^0,c
  5082  0026B6  0EFE               	movlw	254
  5083  0026B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5084  0026BA  6E08               	movwf	(??___xxtofl+3)^0,c
  5085  0026BC  5005               	movf	??___xxtofl^0,w,c
  5086  0026BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5087  0026C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5088  0026C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5089  0026C4  A4D8               	btfss	status,2,c
  5090  0026C6  EF67  F013         	goto	u3321
  5091  0026CA  EF69  F013         	goto	u3320
  5092  0026CE                     u3321:
  5093  0026CE  EF4C  F013         	goto	l3145
  5094  0026D2                     u3320:
  5095  0026D2  EF77  F013         	goto	l925
  5096  0026D6                     l3149:
  5097  0026D6  2A0A               	incf	___xxtofl@exp^0,f,c
  5098  0026D8  0E01               	movlw	1
  5099  0026DA  260B               	addwf	___xxtofl@arg^0,f,c
  5100  0026DC  0E00               	movlw	0
  5101  0026DE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5102  0026E0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5103  0026E2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5104  0026E4  90D8               	bcf	status,0,c
  5105  0026E6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5106  0026E8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5107  0026EA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5108  0026EC  320B               	rrcf	___xxtofl@arg^0,f,c
  5109  0026EE                     l925:
  5110  0026EE  0E00               	movlw	0
  5111  0026F0  140B               	andwf	___xxtofl@arg^0,w,c
  5112  0026F2  6E05               	movwf	??___xxtofl^0,c
  5113  0026F4  0E00               	movlw	0
  5114  0026F6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5115  0026F8  6E06               	movwf	(??___xxtofl+1)^0,c
  5116  0026FA  0E00               	movlw	0
  5117  0026FC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5118  0026FE  6E07               	movwf	(??___xxtofl+2)^0,c
  5119  002700  0EFF               	movlw	255
  5120  002702  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5121  002704  6E08               	movwf	(??___xxtofl+3)^0,c
  5122  002706  5005               	movf	??___xxtofl^0,w,c
  5123  002708  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5124  00270A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5125  00270C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5126  00270E  A4D8               	btfss	status,2,c
  5127  002710  EF8C  F013         	goto	u3331
  5128  002714  EF8E  F013         	goto	u3330
  5129  002718                     u3331:
  5130  002718  EF6B  F013         	goto	l3149
  5131  00271C                     u3330:
  5132  00271C  EF96  F013         	goto	l3157
  5133  002720                     l3155:
  5134  002720  060A               	decf	___xxtofl@exp^0,f,c
  5135  002722  90D8               	bcf	status,0,c
  5136  002724  360B               	rlcf	___xxtofl@arg^0,f,c
  5137  002726  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5138  002728  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5139  00272A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5140  00272C                     l3157:
  5141  00272C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5142  00272E  EF9B  F013         	goto	u3341
  5143  002732  EF9D  F013         	goto	u3340
  5144  002736                     u3341:
  5145  002736  EFA5  F013         	goto	l932
  5146  00273A                     u3340:
  5147  00273A  0E02               	movlw	2
  5148  00273C  600A               	cpfslt	___xxtofl@exp^0,c
  5149  00273E  EFA3  F013         	goto	u3351
  5150  002742  EFA5  F013         	goto	u3350
  5151  002746                     u3351:
  5152  002746  EF90  F013         	goto	l3155
  5153  00274A                     u3350:
  5154  00274A                     l932:
  5155  00274A  B00A               	btfsc	___xxtofl@exp^0,0,c
  5156  00274C  EFAA  F013         	goto	u3361
  5157  002750  EFAC  F013         	goto	u3360
  5158  002754                     u3361:
  5159  002754  EFAD  F013         	goto	l3163
  5160  002758                     u3360:
  5161  002758  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5162  00275A                     l3163:
  5163  00275A  90D8               	bcf	status,0,c
  5164  00275C  320A               	rrcf	___xxtofl@exp^0,f,c
  5165  00275E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5166  002762  6A06               	clrf	(??___xxtofl+1)^0,c
  5167  002764  6A07               	clrf	(??___xxtofl+2)^0,c
  5168  002766  6A08               	clrf	(??___xxtofl+3)^0,c
  5169  002768  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5170  00276C  6A07               	clrf	(??___xxtofl+2)^0,c
  5171  00276E  6A06               	clrf	(??___xxtofl+1)^0,c
  5172  002770  6A05               	clrf	??___xxtofl^0,c
  5173  002772  5005               	movf	??___xxtofl^0,w,c
  5174  002774  120B               	iorwf	___xxtofl@arg^0,f,c
  5175  002776  5006               	movf	(??___xxtofl+1)^0,w,c
  5176  002778  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5177  00277A  5007               	movf	(??___xxtofl+2)^0,w,c
  5178  00277C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5179  00277E  5008               	movf	(??___xxtofl+3)^0,w,c
  5180  002780  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5181  002782  5009               	movf	___xxtofl@sign^0,w,c
  5182  002784  B4D8               	btfsc	status,2,c
  5183  002786  EFC7  F013         	goto	u3371
  5184  00278A  EFC9  F013         	goto	u3370
  5185  00278E                     u3371:
  5186  00278E  EFD1  F013         	goto	l3173
  5187  002792                     u3370:
  5188  002792  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5189  002794  EFD0  F013         	goto	u3380
  5190  002798  EFCE  F013         	goto	u3381
  5191  00279C                     u3381:
  5192  00279C  EFD1  F013         	goto	l3173
  5193  0027A0                     u3380:
  5194  0027A0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5195  0027A2                     l3173:
  5196  0027A2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5197  0027A6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5198  0027AA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5199  0027AE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5200  0027B2                     l921:
  5201  0027B2  0012               	return		;funcret
  5202  0027B4                     __end_of___xxtofl:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function ___wmul *****************
  5206 ;; Defined at:
  5207 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  multiplier      2    0[COMRAM] unsigned int 
  5210 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  product         2    4[COMRAM] unsigned int 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  2    0[COMRAM] unsigned int 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, prodl, prodh
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5222 ;;      Params:         4       0       0       0       0       0       0       0       0
  5223 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5225 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5226 ;;Total ram usage:        6 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_sprintf
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text13
  5237  00339E                     __ptext13:
  5238                           	callstack 0
  5239  00339E                     ___wmul:
  5240                           	callstack 28
  5241  00339E  5001               	movf	___wmul@multiplier^0,w,c
  5242  0033A0  0203               	mulwf	___wmul@multiplicand^0,c
  5243  0033A2  CFF3 F005          	movff	prodl,___wmul@product
  5244  0033A6  CFF4 F006          	movff	prodh,___wmul@product+1
  5245  0033AA  5001               	movf	___wmul@multiplier^0,w,c
  5246  0033AC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5247  0033AE  50F3               	movf	243,w,c
  5248  0033B0  2606               	addwf	(___wmul@product+1)^0,f,c
  5249  0033B2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5250  0033B4  0203               	mulwf	___wmul@multiplicand^0,c
  5251  0033B6  50F3               	movf	243,w,c
  5252  0033B8  2606               	addwf	(___wmul@product+1)^0,f,c
  5253  0033BA  C005  F001         	movff	___wmul@product,?___wmul
  5254  0033BE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5255  0033C2  0012               	return		;funcret
  5256  0033C4                     __end_of___wmul:
  5257                           	callstack 0
  5258                           
  5259 ;; *************** function ___llmod *****************
  5260 ;; Defined at:
  5261 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  dividend        4    0[COMRAM] unsigned long 
  5264 ;;  divisor         4    4[COMRAM] unsigned long 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  counter         1    8[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  4    0[COMRAM] unsigned long 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         8       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        9 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_sprintf
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text14
  5291  0030BA                     __ptext14:
  5292                           	callstack 0
  5293  0030BA                     ___llmod:
  5294                           	callstack 28
  5295  0030BA  5005               	movf	___llmod@divisor^0,w,c
  5296  0030BC  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  5297  0030BE  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  5298  0030C0  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  5299  0030C2  B4D8               	btfsc	status,2,c
  5300  0030C4  EF66  F018         	goto	u3261
  5301  0030C8  EF68  F018         	goto	u3260
  5302  0030CC                     u3261:
  5303  0030CC  EF98  F018         	goto	l683
  5304  0030D0                     u3260:
  5305  0030D0  0E01               	movlw	1
  5306  0030D2  6E09               	movwf	___llmod@counter^0,c
  5307  0030D4  EF72  F018         	goto	l3121
  5308  0030D8                     l3119:
  5309  0030D8  90D8               	bcf	status,0,c
  5310  0030DA  3605               	rlcf	___llmod@divisor^0,f,c
  5311  0030DC  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  5312  0030DE  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  5313  0030E0  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  5314  0030E2  2A09               	incf	___llmod@counter^0,f,c
  5315  0030E4                     l3121:
  5316  0030E4  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  5317  0030E6  EF77  F018         	goto	u3271
  5318  0030EA  EF79  F018         	goto	u3270
  5319  0030EE                     u3271:
  5320  0030EE  EF6C  F018         	goto	l3119
  5321  0030F2                     u3270:
  5322  0030F2                     l3123:
  5323  0030F2  5005               	movf	___llmod@divisor^0,w,c
  5324  0030F4  5C01               	subwf	___llmod@dividend^0,w,c
  5325  0030F6  5006               	movf	(___llmod@divisor+1)^0,w,c
  5326  0030F8  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  5327  0030FA  5007               	movf	(___llmod@divisor+2)^0,w,c
  5328  0030FC  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  5329  0030FE  5008               	movf	(___llmod@divisor+3)^0,w,c
  5330  003100  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  5331  003102  A0D8               	btfss	status,0,c
  5332  003104  EF86  F018         	goto	u3281
  5333  003108  EF88  F018         	goto	u3280
  5334  00310C                     u3281:
  5335  00310C  EF90  F018         	goto	l3127
  5336  003110                     u3280:
  5337  003110  5005               	movf	___llmod@divisor^0,w,c
  5338  003112  5E01               	subwf	___llmod@dividend^0,f,c
  5339  003114  5006               	movf	(___llmod@divisor+1)^0,w,c
  5340  003116  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  5341  003118  5007               	movf	(___llmod@divisor+2)^0,w,c
  5342  00311A  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  5343  00311C  5008               	movf	(___llmod@divisor+3)^0,w,c
  5344  00311E  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  5345  003120                     l3127:
  5346  003120  90D8               	bcf	status,0,c
  5347  003122  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  5348  003124  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  5349  003126  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  5350  003128  3205               	rrcf	___llmod@divisor^0,f,c
  5351  00312A  2E09               	decfsz	___llmod@counter^0,f,c
  5352  00312C  EF79  F018         	goto	l3123
  5353  003130                     l683:
  5354  003130  C001  F001         	movff	___llmod@dividend,?___llmod
  5355  003134  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  5356  003138  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  5357  00313C  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  5358  003140  0012               	return		;funcret
  5359  003142                     __end_of___llmod:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function ___lldiv *****************
  5363 ;; Defined at:
  5364 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  dividend        4    0[COMRAM] unsigned long 
  5367 ;;  divisor         4    4[COMRAM] unsigned long 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  quotient        4    8[COMRAM] unsigned long 
  5370 ;;  counter         1   12[COMRAM] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  4    0[COMRAM] unsigned long 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5380 ;;      Params:         8       0       0       0       0       0       0       0       0
  5381 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5383 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5384 ;;Total ram usage:       13 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_sprintf
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text15
  5395  002F8A                     __ptext15:
  5396                           	callstack 0
  5397  002F8A                     ___lldiv:
  5398                           	callstack 28
  5399  002F8A  0E00               	movlw	0
  5400  002F8C  6E09               	movwf	___lldiv@quotient^0,c
  5401  002F8E  0E00               	movlw	0
  5402  002F90  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5403  002F92  0E00               	movlw	0
  5404  002F94  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5405  002F96  0E00               	movlw	0
  5406  002F98  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5407  002F9A  5005               	movf	___lldiv@divisor^0,w,c
  5408  002F9C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5409  002F9E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5410  002FA0  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5411  002FA2  B4D8               	btfsc	status,2,c
  5412  002FA4  EFD6  F017         	goto	u3011
  5413  002FA8  EFD8  F017         	goto	u3010
  5414  002FAC                     u3011:
  5415  002FAC  EF0E  F018         	goto	l268
  5416  002FB0                     u3010:
  5417  002FB0  0E01               	movlw	1
  5418  002FB2  6E0D               	movwf	___lldiv@counter^0,c
  5419  002FB4  EFE2  F017         	goto	l2961
  5420  002FB8                     l2959:
  5421  002FB8  90D8               	bcf	status,0,c
  5422  002FBA  3605               	rlcf	___lldiv@divisor^0,f,c
  5423  002FBC  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5424  002FBE  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5425  002FC0  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5426  002FC2  2A0D               	incf	___lldiv@counter^0,f,c
  5427  002FC4                     l2961:
  5428  002FC4  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5429  002FC6  EFE7  F017         	goto	u3021
  5430  002FCA  EFE9  F017         	goto	u3020
  5431  002FCE                     u3021:
  5432  002FCE  EFDC  F017         	goto	l2959
  5433  002FD2                     u3020:
  5434  002FD2                     l2963:
  5435  002FD2  90D8               	bcf	status,0,c
  5436  002FD4  3609               	rlcf	___lldiv@quotient^0,f,c
  5437  002FD6  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5438  002FD8  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5439  002FDA  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5440  002FDC  5005               	movf	___lldiv@divisor^0,w,c
  5441  002FDE  5C01               	subwf	___lldiv@dividend^0,w,c
  5442  002FE0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5443  002FE2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5444  002FE4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5445  002FE6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5446  002FE8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5447  002FEA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5448  002FEC  A0D8               	btfss	status,0,c
  5449  002FEE  EFFB  F017         	goto	u3031
  5450  002FF2  EFFD  F017         	goto	u3030
  5451  002FF6                     u3031:
  5452  002FF6  EF06  F018         	goto	l2971
  5453  002FFA                     u3030:
  5454  002FFA  5005               	movf	___lldiv@divisor^0,w,c
  5455  002FFC  5E01               	subwf	___lldiv@dividend^0,f,c
  5456  002FFE  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5457  003000  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5458  003002  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5459  003004  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5460  003006  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5461  003008  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5462  00300A  8009               	bsf	___lldiv@quotient^0,0,c
  5463  00300C                     l2971:
  5464  00300C  90D8               	bcf	status,0,c
  5465  00300E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5466  003010  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5467  003012  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5468  003014  3205               	rrcf	___lldiv@divisor^0,f,c
  5469  003016  2E0D               	decfsz	___lldiv@counter^0,f,c
  5470  003018  EFE9  F017         	goto	l2963
  5471  00301C                     l268:
  5472  00301C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5473  003020  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5474  003024  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5475  003028  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5476  00302C  0012               	return		;funcret
  5477  00302E                     __end_of___lldiv:
  5478                           	callstack 0
  5479                           
  5480 ;; *************** function ___fltol *****************
  5481 ;; Defined at:
  5482 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  f1              4   48[COMRAM] unsigned long 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  exp1            1   57[COMRAM] unsigned char 
  5487 ;;  sign1           1   56[COMRAM] unsigned char 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  4   48[COMRAM] long 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5497 ;;      Params:         4       0       0       0       0       0       0       0       0
  5498 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5499 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5500 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5501 ;;Total ram usage:       10 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    1
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_sprintf
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text16
  5512  002B62                     __ptext16:
  5513                           	callstack 0
  5514  002B62                     ___fltol:
  5515                           	callstack 28
  5516  002B62  3433               	rlcf	(___fltol@f1+2)^0,w,c
  5517  002B64  3434               	rlcf	(___fltol@f1+3)^0,w,c
  5518  002B66  6E3A               	movwf	___fltol@exp1^0,c
  5519  002B68  503A               	movf	___fltol@exp1^0,w,c
  5520  002B6A  A4D8               	btfss	status,2,c
  5521  002B6C  EFBA  F015         	goto	u3191
  5522  002B70  EFBC  F015         	goto	u3190
  5523  002B74                     u3191:
  5524  002B74  EFC6  F015         	goto	l3077
  5525  002B78                     u3190:
  5526  002B78                     l3073:
  5527  002B78  0E00               	movlw	0
  5528  002B7A  6E31               	movwf	?___fltol^0,c
  5529  002B7C  0E00               	movlw	0
  5530  002B7E  6E32               	movwf	(?___fltol+1)^0,c
  5531  002B80  0E00               	movlw	0
  5532  002B82  6E33               	movwf	(?___fltol+2)^0,c
  5533  002B84  0E00               	movlw	0
  5534  002B86  6E34               	movwf	(?___fltol+3)^0,c
  5535  002B88  EF33  F016         	goto	l547
  5536  002B8C                     l3077:
  5537  002B8C  C031  F035         	movff	___fltol@f1,??___fltol
  5538  002B90  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  5539  002B94  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  5540  002B98  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  5541  002B9C  0E20               	movlw	32
  5542  002B9E  EFD6  F015         	goto	u3200
  5543  002BA2                     u3205:
  5544  002BA2  90D8               	bcf	status,0,c
  5545  002BA4  3238               	rrcf	(??___fltol+3)^0,f,c
  5546  002BA6  3237               	rrcf	(??___fltol+2)^0,f,c
  5547  002BA8  3236               	rrcf	(??___fltol+1)^0,f,c
  5548  002BAA  3235               	rrcf	??___fltol^0,f,c
  5549  002BAC                     u3200:
  5550  002BAC  2EE8               	decfsz	wreg,f,c
  5551  002BAE  EFD1  F015         	goto	u3205
  5552  002BB2  5035               	movf	??___fltol^0,w,c
  5553  002BB4  6E39               	movwf	___fltol@sign1^0,c
  5554  002BB6  8E33               	bsf	(___fltol@f1+2)^0,7,c
  5555  002BB8  0EFF               	movlw	255
  5556  002BBA  1631               	andwf	___fltol@f1^0,f,c
  5557  002BBC  0EFF               	movlw	255
  5558  002BBE  1632               	andwf	(___fltol@f1+1)^0,f,c
  5559  002BC0  0EFF               	movlw	255
  5560  002BC2  1633               	andwf	(___fltol@f1+2)^0,f,c
  5561  002BC4  0E00               	movlw	0
  5562  002BC6  1634               	andwf	(___fltol@f1+3)^0,f,c
  5563  002BC8  0E96               	movlw	150
  5564  002BCA  5E3A               	subwf	___fltol@exp1^0,f,c
  5565  002BCC  BE3A               	btfsc	___fltol@exp1^0,7,c
  5566  002BCE  EFED  F015         	goto	u3210
  5567  002BD2  EFEB  F015         	goto	u3211
  5568  002BD6                     u3211:
  5569  002BD6  EF03  F016         	goto	l3097
  5570  002BDA                     u3210:
  5571  002BDA  503A               	movf	___fltol@exp1^0,w,c
  5572  002BDC  0A80               	xorlw	128
  5573  002BDE  0F97               	addlw	151
  5574  002BE0  B0D8               	btfsc	status,0,c
  5575  002BE2  EFF5  F015         	goto	u3221
  5576  002BE6  EFF7  F015         	goto	u3220
  5577  002BEA                     u3221:
  5578  002BEA  EFF9  F015         	goto	l3093
  5579  002BEE                     u3220:
  5580  002BEE  EFBC  F015         	goto	l3073
  5581  002BF2                     l3093:
  5582  002BF2  90D8               	bcf	status,0,c
  5583  002BF4  3234               	rrcf	(___fltol@f1+3)^0,f,c
  5584  002BF6  3233               	rrcf	(___fltol@f1+2)^0,f,c
  5585  002BF8  3232               	rrcf	(___fltol@f1+1)^0,f,c
  5586  002BFA  3231               	rrcf	___fltol@f1^0,f,c
  5587  002BFC  3E3A               	incfsz	___fltol@exp1^0,f,c
  5588  002BFE  EFF9  F015         	goto	l3093
  5589  002C02  EF1B  F016         	goto	l3107
  5590  002C06                     l3097:
  5591  002C06  0E1F               	movlw	31
  5592  002C08  643A               	cpfsgt	___fltol@exp1^0,c
  5593  002C0A  EF09  F016         	goto	u3231
  5594  002C0E  EF0B  F016         	goto	u3230
  5595  002C12                     u3231:
  5596  002C12  EF13  F016         	goto	l3105
  5597  002C16                     u3230:
  5598  002C16  EFBC  F015         	goto	l3073
  5599  002C1A                     l3103:
  5600  002C1A  90D8               	bcf	status,0,c
  5601  002C1C  3631               	rlcf	___fltol@f1^0,f,c
  5602  002C1E  3632               	rlcf	(___fltol@f1+1)^0,f,c
  5603  002C20  3633               	rlcf	(___fltol@f1+2)^0,f,c
  5604  002C22  3634               	rlcf	(___fltol@f1+3)^0,f,c
  5605  002C24  063A               	decf	___fltol@exp1^0,f,c
  5606  002C26                     l3105:
  5607  002C26  503A               	movf	___fltol@exp1^0,w,c
  5608  002C28  A4D8               	btfss	status,2,c
  5609  002C2A  EF19  F016         	goto	u3241
  5610  002C2E  EF1B  F016         	goto	u3240
  5611  002C32                     u3241:
  5612  002C32  EF0D  F016         	goto	l3103
  5613  002C36                     u3240:
  5614  002C36                     l3107:
  5615  002C36  5039               	movf	___fltol@sign1^0,w,c
  5616  002C38  B4D8               	btfsc	status,2,c
  5617  002C3A  EF21  F016         	goto	u3251
  5618  002C3E  EF23  F016         	goto	u3250
  5619  002C42                     u3251:
  5620  002C42  EF2B  F016         	goto	l3111
  5621  002C46                     u3250:
  5622  002C46  1E34               	comf	(___fltol@f1+3)^0,f,c
  5623  002C48  1E33               	comf	(___fltol@f1+2)^0,f,c
  5624  002C4A  1E32               	comf	(___fltol@f1+1)^0,f,c
  5625  002C4C  6C31               	negf	___fltol@f1^0,c
  5626  002C4E  0E00               	movlw	0
  5627  002C50  2232               	addwfc	(___fltol@f1+1)^0,f,c
  5628  002C52  2233               	addwfc	(___fltol@f1+2)^0,f,c
  5629  002C54  2234               	addwfc	(___fltol@f1+3)^0,f,c
  5630  002C56                     l3111:
  5631  002C56  C031  F031         	movff	___fltol@f1,?___fltol
  5632  002C5A  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5633  002C5E  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5634  002C62  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5635  002C66                     l547:
  5636  002C66  0012               	return		;funcret
  5637  002C68                     __end_of___fltol:
  5638                           	callstack 0
  5639                           
  5640 ;; *************** function ___flsub *****************
  5641 ;; Defined at:
  5642 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  b               4   68[COMRAM] long 
  5645 ;;  a               4   72[COMRAM] long 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  4   68[COMRAM] long 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5657 ;;      Params:         8       0       0       0       0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5660 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5661 ;;Total ram usage:        8 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    2
  5664 ;; This function calls:
  5665 ;;		___fladd
  5666 ;; This function is called by:
  5667 ;;		_sprintf
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text17
  5672  0032C6                     __ptext17:
  5673                           	callstack 0
  5674  0032C6                     ___flsub:
  5675                           	callstack 27
  5676  0032C6  0E00               	movlw	0
  5677  0032C8  1A49               	xorwf	___flsub@a^0,f,c
  5678  0032CA  0E00               	movlw	0
  5679  0032CC  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  5680  0032CE  0E00               	movlw	0
  5681  0032D0  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  5682  0032D2  0E80               	movlw	128
  5683  0032D4  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  5684  0032D6  C045  F035         	movff	___flsub@b,___fladd@b
  5685  0032DA  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5686  0032DE  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5687  0032E2  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5688  0032E6  C049  F039         	movff	___flsub@a,___fladd@a
  5689  0032EA  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5690  0032EE  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5691  0032F2  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5692  0032F6  ECF7  F009         	call	___fladd	;wreg free
  5693  0032FA  C035  F045         	movff	?___fladd,?___flsub
  5694  0032FE  C036  F046         	movff	?___fladd+1,?___flsub+1
  5695  003302  C037  F047         	movff	?___fladd+2,?___flsub+2
  5696  003306  C038  F048         	movff	?___fladd+3,?___flsub+3
  5697  00330A  0012               	return		;funcret
  5698  00330C                     __end_of___flsub:
  5699                           	callstack 0
  5700                           
  5701 ;; *************** function ___fladd *****************
  5702 ;; Defined at:
  5703 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  b               4   52[COMRAM] long 
  5706 ;;  a               4   56[COMRAM] long 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  grs             1   67[COMRAM] unsigned char 
  5709 ;;  bexp            1   66[COMRAM] unsigned char 
  5710 ;;  aexp            1   65[COMRAM] unsigned char 
  5711 ;;  signs           1   64[COMRAM] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  4   52[COMRAM] unsigned char 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5721 ;;      Params:         8       0       0       0       0       0       0       0       0
  5722 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5723 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5724 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5725 ;;Total ram usage:       16 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_sprintf
  5732 ;;		___flsub
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text18
  5737  0013EE                     __ptext18:
  5738                           	callstack 0
  5739  0013EE                     ___fladd:
  5740                           	callstack 27
  5741  0013EE  5038               	movf	(___fladd@b+3)^0,w,c
  5742  0013F0  0B80               	andlw	128
  5743  0013F2  6E41               	movwf	___fladd@signs^0,c
  5744  0013F4  5038               	movf	(___fladd@b+3)^0,w,c
  5745  0013F6  2438               	addwf	(___fladd@b+3)^0,w,c
  5746  0013F8  6E43               	movwf	___fladd@bexp^0,c
  5747  0013FA  AE37               	btfss	(___fladd@b+2)^0,7,c
  5748  0013FC  EF02  F00A         	goto	u1971
  5749  001400  EF04  F00A         	goto	u1970
  5750  001404                     u1971:
  5751  001404  EF05  F00A         	goto	l2303
  5752  001408                     u1970:
  5753  001408  8043               	bsf	___fladd@bexp^0,0,c
  5754  00140A                     l2303:
  5755  00140A  5043               	movf	___fladd@bexp^0,w,c
  5756  00140C  B4D8               	btfsc	status,2,c
  5757  00140E  EF0B  F00A         	goto	u1981
  5758  001412  EF0D  F00A         	goto	u1980
  5759  001416                     u1981:
  5760  001416  EF22  F00A         	goto	l2313
  5761  00141A                     u1980:
  5762  00141A  2843               	incf	___fladd@bexp^0,w,c
  5763  00141C  A4D8               	btfss	status,2,c
  5764  00141E  EF13  F00A         	goto	u1991
  5765  001422  EF15  F00A         	goto	u1990
  5766  001426                     u1991:
  5767  001426  EF1D  F00A         	goto	l2309
  5768  00142A                     u1990:
  5769  00142A  0E00               	movlw	0
  5770  00142C  6E35               	movwf	___fladd@b^0,c
  5771  00142E  0E00               	movlw	0
  5772  001430  6E36               	movwf	(___fladd@b+1)^0,c
  5773  001432  0E00               	movlw	0
  5774  001434  6E37               	movwf	(___fladd@b+2)^0,c
  5775  001436  0E00               	movlw	0
  5776  001438  6E38               	movwf	(___fladd@b+3)^0,c
  5777  00143A                     l2309:
  5778  00143A  8E37               	bsf	(___fladd@b+2)^0,7,c
  5779  00143C  0E00               	movlw	0
  5780  00143E  6E38               	movwf	(___fladd@b+3)^0,c
  5781  001440  EF2A  F00A         	goto	l2315
  5782  001444                     l2313:
  5783  001444  0E00               	movlw	0
  5784  001446  6E35               	movwf	___fladd@b^0,c
  5785  001448  0E00               	movlw	0
  5786  00144A  6E36               	movwf	(___fladd@b+1)^0,c
  5787  00144C  0E00               	movlw	0
  5788  00144E  6E37               	movwf	(___fladd@b+2)^0,c
  5789  001450  0E00               	movlw	0
  5790  001452  6E38               	movwf	(___fladd@b+3)^0,c
  5791  001454                     l2315:
  5792  001454  503C               	movf	(___fladd@a+3)^0,w,c
  5793  001456  0B80               	andlw	128
  5794  001458  6E42               	movwf	___fladd@aexp^0,c
  5795  00145A  5041               	movf	___fladd@signs^0,w,c
  5796  00145C  1842               	xorwf	___fladd@aexp^0,w,c
  5797  00145E  B4D8               	btfsc	status,2,c
  5798  001460  EF34  F00A         	goto	u2001
  5799  001464  EF36  F00A         	goto	u2000
  5800  001468                     u2001:
  5801  001468  EF37  F00A         	goto	l2321
  5802  00146C                     u2000:
  5803  00146C  8C41               	bsf	___fladd@signs^0,6,c
  5804  00146E                     l2321:
  5805  00146E  503C               	movf	(___fladd@a+3)^0,w,c
  5806  001470  243C               	addwf	(___fladd@a+3)^0,w,c
  5807  001472  6E42               	movwf	___fladd@aexp^0,c
  5808  001474  AE3B               	btfss	(___fladd@a+2)^0,7,c
  5809  001476  EF3F  F00A         	goto	u2011
  5810  00147A  EF41  F00A         	goto	u2010
  5811  00147E                     u2011:
  5812  00147E  EF42  F00A         	goto	l2327
  5813  001482                     u2010:
  5814  001482  8042               	bsf	___fladd@aexp^0,0,c
  5815  001484                     l2327:
  5816  001484  5042               	movf	___fladd@aexp^0,w,c
  5817  001486  B4D8               	btfsc	status,2,c
  5818  001488  EF48  F00A         	goto	u2021
  5819  00148C  EF4A  F00A         	goto	u2020
  5820  001490                     u2021:
  5821  001490  EF5F  F00A         	goto	l2337
  5822  001494                     u2020:
  5823  001494  2842               	incf	___fladd@aexp^0,w,c
  5824  001496  A4D8               	btfss	status,2,c
  5825  001498  EF50  F00A         	goto	u2031
  5826  00149C  EF52  F00A         	goto	u2030
  5827  0014A0                     u2031:
  5828  0014A0  EF5A  F00A         	goto	l2333
  5829  0014A4                     u2030:
  5830  0014A4  0E00               	movlw	0
  5831  0014A6  6E39               	movwf	___fladd@a^0,c
  5832  0014A8  0E00               	movlw	0
  5833  0014AA  6E3A               	movwf	(___fladd@a+1)^0,c
  5834  0014AC  0E00               	movlw	0
  5835  0014AE  6E3B               	movwf	(___fladd@a+2)^0,c
  5836  0014B0  0E00               	movlw	0
  5837  0014B2  6E3C               	movwf	(___fladd@a+3)^0,c
  5838  0014B4                     l2333:
  5839  0014B4  8E3B               	bsf	(___fladd@a+2)^0,7,c
  5840  0014B6  0E00               	movlw	0
  5841  0014B8  6E3C               	movwf	(___fladd@a+3)^0,c
  5842  0014BA  EF67  F00A         	goto	l2339
  5843  0014BE                     l2337:
  5844  0014BE  0E00               	movlw	0
  5845  0014C0  6E39               	movwf	___fladd@a^0,c
  5846  0014C2  0E00               	movlw	0
  5847  0014C4  6E3A               	movwf	(___fladd@a+1)^0,c
  5848  0014C6  0E00               	movlw	0
  5849  0014C8  6E3B               	movwf	(___fladd@a+2)^0,c
  5850  0014CA  0E00               	movlw	0
  5851  0014CC  6E3C               	movwf	(___fladd@a+3)^0,c
  5852  0014CE                     l2339:
  5853  0014CE  5043               	movf	___fladd@bexp^0,w,c
  5854  0014D0  5C42               	subwf	___fladd@aexp^0,w,c
  5855  0014D2  B0D8               	btfsc	status,0,c
  5856  0014D4  EF6E  F00A         	goto	u2041
  5857  0014D8  EF70  F00A         	goto	u2040
  5858  0014DC                     u2041:
  5859  0014DC  EF97  F00A         	goto	l2375
  5860  0014E0                     u2040:
  5861  0014E0  AC41               	btfss	___fladd@signs^0,6,c
  5862  0014E2  EF75  F00A         	goto	u2051
  5863  0014E6  EF77  F00A         	goto	u2050
  5864  0014EA                     u2051:
  5865  0014EA  EF79  F00A         	goto	l2345
  5866  0014EE                     u2050:
  5867  0014EE  0E80               	movlw	128
  5868  0014F0  1A41               	xorwf	___fladd@signs^0,f,c
  5869  0014F2                     l2345:
  5870  0014F2  C043  F044         	movff	___fladd@bexp,___fladd@grs
  5871  0014F6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5872  0014FA  C044  F042         	movff	___fladd@grs,___fladd@aexp
  5873  0014FE  C035  F044         	movff	___fladd@b,___fladd@grs
  5874  001502  C039  F035         	movff	___fladd@a,___fladd@b
  5875  001506  C044  F039         	movff	___fladd@grs,___fladd@a
  5876  00150A  C036  F044         	movff	___fladd@b+1,___fladd@grs
  5877  00150E  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  5878  001512  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  5879  001516  C037  F044         	movff	___fladd@b+2,___fladd@grs
  5880  00151A  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  5881  00151E  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  5882  001522  C038  F044         	movff	___fladd@b+3,___fladd@grs
  5883  001526  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  5884  00152A  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  5885  00152E                     l2375:
  5886  00152E  0E00               	movlw	0
  5887  001530  6E44               	movwf	___fladd@grs^0,c
  5888  001532  5043               	movf	___fladd@bexp^0,w,c
  5889  001534  C042  F03D         	movff	___fladd@aexp,??___fladd
  5890  001538  6A3E               	clrf	(??___fladd+1)^0,c
  5891  00153A  5E3D               	subwf	??___fladd^0,f,c
  5892  00153C  0E00               	movlw	0
  5893  00153E  5A3E               	subwfb	(??___fladd+1)^0,f,c
  5894  001540  BE3E               	btfsc	(??___fladd+1)^0,7,c
  5895  001542  EFAC  F00A         	goto	u2061
  5896  001546  503E               	movf	(??___fladd+1)^0,w,c
  5897  001548  E109               	bnz	u2060
  5898  00154A  0E1A               	movlw	26
  5899  00154C  5C3D               	subwf	??___fladd^0,w,c
  5900  00154E  A0D8               	btfss	status,0,c
  5901  001550  EFAC  F00A         	goto	u2061
  5902  001554  EFAE  F00A         	goto	u2060
  5903  001558                     u2061:
  5904  001558  EFE5  F00A         	goto	l792
  5905  00155C                     u2060:
  5906  00155C  5035               	movf	___fladd@b^0,w,c
  5907  00155E  1036               	iorwf	(___fladd@b+1)^0,w,c
  5908  001560  1037               	iorwf	(___fladd@b+2)^0,w,c
  5909  001562  1038               	iorwf	(___fladd@b+3)^0,w,c
  5910  001564  A4D8               	btfss	status,2,c
  5911  001566  EFB7  F00A         	goto	u2071
  5912  00156A  EFBA  F00A         	goto	u2070
  5913  00156E                     u2071:
  5914  00156E  0E01               	movlw	1
  5915  001570  EFBB  F00A         	goto	u2080
  5916  001574                     u2070:
  5917  001574  0E00               	movlw	0
  5918  001576                     u2080:
  5919  001576  6E44               	movwf	___fladd@grs^0,c
  5920  001578  0E00               	movlw	0
  5921  00157A  6E35               	movwf	___fladd@b^0,c
  5922  00157C  0E00               	movlw	0
  5923  00157E  6E36               	movwf	(___fladd@b+1)^0,c
  5924  001580  0E00               	movlw	0
  5925  001582  6E37               	movwf	(___fladd@b+2)^0,c
  5926  001584  0E00               	movlw	0
  5927  001586  6E38               	movwf	(___fladd@b+3)^0,c
  5928  001588  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5929  00158C  EFEE  F00A         	goto	l791
  5930  001590                     l793:
  5931  001590  A044               	btfss	___fladd@grs^0,0,c
  5932  001592  EFCD  F00A         	goto	u2091
  5933  001596  EFCF  F00A         	goto	u2090
  5934  00159A                     u2091:
  5935  00159A  EFD5  F00A         	goto	l2387
  5936  00159E                     u2090:
  5937  00159E  90D8               	bcf	status,0,c
  5938  0015A0  3044               	rrcf	___fladd@grs^0,w,c
  5939  0015A2  0901               	iorlw	1
  5940  0015A4  6E44               	movwf	___fladd@grs^0,c
  5941  0015A6  EFD7  F00A         	goto	l2389
  5942  0015AA                     l2387:
  5943  0015AA  90D8               	bcf	status,0,c
  5944  0015AC  3244               	rrcf	___fladd@grs^0,f,c
  5945  0015AE                     l2389:
  5946  0015AE  A035               	btfss	___fladd@b^0,0,c
  5947  0015B0  EFDC  F00A         	goto	u2101
  5948  0015B4  EFDE  F00A         	goto	u2100
  5949  0015B8                     u2101:
  5950  0015B8  EFDF  F00A         	goto	l2393
  5951  0015BC                     u2100:
  5952  0015BC  8E44               	bsf	___fladd@grs^0,7,c
  5953  0015BE                     l2393:
  5954  0015BE  3438               	rlcf	(___fladd@b+3)^0,w,c
  5955  0015C0  3238               	rrcf	(___fladd@b+3)^0,f,c
  5956  0015C2  3237               	rrcf	(___fladd@b+2)^0,f,c
  5957  0015C4  3236               	rrcf	(___fladd@b+1)^0,f,c
  5958  0015C6  3235               	rrcf	___fladd@b^0,f,c
  5959  0015C8  2A43               	incf	___fladd@bexp^0,f,c
  5960  0015CA                     l792:
  5961  0015CA  5042               	movf	___fladd@aexp^0,w,c
  5962  0015CC  5C43               	subwf	___fladd@bexp^0,w,c
  5963  0015CE  A0D8               	btfss	status,0,c
  5964  0015D0  EFEC  F00A         	goto	u2111
  5965  0015D4  EFEE  F00A         	goto	u2110
  5966  0015D8                     u2111:
  5967  0015D8  EFC8  F00A         	goto	l793
  5968  0015DC                     u2110:
  5969  0015DC                     l791:
  5970  0015DC  BC41               	btfsc	___fladd@signs^0,6,c
  5971  0015DE  EFF3  F00A         	goto	u2121
  5972  0015E2  EFF5  F00A         	goto	u2120
  5973  0015E6                     u2121:
  5974  0015E6  EF35  F00B         	goto	l2421
  5975  0015EA                     u2120:
  5976  0015EA  5043               	movf	___fladd@bexp^0,w,c
  5977  0015EC  A4D8               	btfss	status,2,c
  5978  0015EE  EFFB  F00A         	goto	u2131
  5979  0015F2  EFFD  F00A         	goto	u2130
  5980  0015F6                     u2131:
  5981  0015F6  EF07  F00B         	goto	l2403
  5982  0015FA                     u2130:
  5983  0015FA  0E00               	movlw	0
  5984  0015FC  6E35               	movwf	?___fladd^0,c
  5985  0015FE  0E00               	movlw	0
  5986  001600  6E36               	movwf	(?___fladd+1)^0,c
  5987  001602  0E00               	movlw	0
  5988  001604  6E37               	movwf	(?___fladd+2)^0,c
  5989  001606  0E00               	movlw	0
  5990  001608  6E38               	movwf	(?___fladd+3)^0,c
  5991  00160A  EF56  F00C         	goto	l800
  5992  00160E                     l2403:
  5993  00160E  5039               	movf	___fladd@a^0,w,c
  5994  001610  2635               	addwf	___fladd@b^0,f,c
  5995  001612  503A               	movf	(___fladd@a+1)^0,w,c
  5996  001614  2236               	addwfc	(___fladd@b+1)^0,f,c
  5997  001616  503B               	movf	(___fladd@a+2)^0,w,c
  5998  001618  2237               	addwfc	(___fladd@b+2)^0,f,c
  5999  00161A  503C               	movf	(___fladd@a+3)^0,w,c
  6000  00161C  2238               	addwfc	(___fladd@b+3)^0,f,c
  6001  00161E  A038               	btfss	(___fladd@b+3)^0,0,c
  6002  001620  EF14  F00B         	goto	u2141
  6003  001624  EF16  F00B         	goto	u2140
  6004  001628                     u2141:
  6005  001628  EFC2  F00B         	goto	l2457
  6006  00162C                     u2140:
  6007  00162C  A044               	btfss	___fladd@grs^0,0,c
  6008  00162E  EF1B  F00B         	goto	u2151
  6009  001632  EF1D  F00B         	goto	u2150
  6010  001636                     u2151:
  6011  001636  EF23  F00B         	goto	l2411
  6012  00163A                     u2150:
  6013  00163A  90D8               	bcf	status,0,c
  6014  00163C  3044               	rrcf	___fladd@grs^0,w,c
  6015  00163E  0901               	iorlw	1
  6016  001640  6E44               	movwf	___fladd@grs^0,c
  6017  001642  EF25  F00B         	goto	l2413
  6018  001646                     l2411:
  6019  001646  90D8               	bcf	status,0,c
  6020  001648  3244               	rrcf	___fladd@grs^0,f,c
  6021  00164A                     l2413:
  6022  00164A  A035               	btfss	___fladd@b^0,0,c
  6023  00164C  EF2A  F00B         	goto	u2161
  6024  001650  EF2C  F00B         	goto	u2160
  6025  001654                     u2161:
  6026  001654  EF2D  F00B         	goto	l2417
  6027  001658                     u2160:
  6028  001658  8E44               	bsf	___fladd@grs^0,7,c
  6029  00165A                     l2417:
  6030  00165A  3438               	rlcf	(___fladd@b+3)^0,w,c
  6031  00165C  3238               	rrcf	(___fladd@b+3)^0,f,c
  6032  00165E  3237               	rrcf	(___fladd@b+2)^0,f,c
  6033  001660  3236               	rrcf	(___fladd@b+1)^0,f,c
  6034  001662  3235               	rrcf	___fladd@b^0,f,c
  6035  001664  2A43               	incf	___fladd@bexp^0,f,c
  6036  001666  EFC2  F00B         	goto	l2457
  6037  00166A                     l2421:
  6038  00166A  5039               	movf	___fladd@a^0,w,c
  6039  00166C  5C35               	subwf	___fladd@b^0,w,c
  6040  00166E  503A               	movf	(___fladd@a+1)^0,w,c
  6041  001670  5836               	subwfb	(___fladd@b+1)^0,w,c
  6042  001672  503B               	movf	(___fladd@a+2)^0,w,c
  6043  001674  5837               	subwfb	(___fladd@b+2)^0,w,c
  6044  001676  5038               	movf	(___fladd@b+3)^0,w,c
  6045  001678  0A80               	xorlw	128
  6046  00167A  6E3D               	movwf	??___fladd^0,c
  6047  00167C  503C               	movf	(___fladd@a+3)^0,w,c
  6048  00167E  0A80               	xorlw	128
  6049  001680  583D               	subwfb	??___fladd^0,w,c
  6050  001682  B0D8               	btfsc	status,0,c
  6051  001684  EF46  F00B         	goto	u2171
  6052  001688  EF48  F00B         	goto	u2170
  6053  00168C                     u2171:
  6054  00168C  EF73  F00B         	goto	l2431
  6055  001690                     u2170:
  6056  001690  5035               	movf	___fladd@b^0,w,c
  6057  001692  5C39               	subwf	___fladd@a^0,w,c
  6058  001694  6E3D               	movwf	??___fladd^0,c
  6059  001696  5036               	movf	(___fladd@b+1)^0,w,c
  6060  001698  583A               	subwfb	(___fladd@a+1)^0,w,c
  6061  00169A  6E3E               	movwf	(??___fladd+1)^0,c
  6062  00169C  5037               	movf	(___fladd@b+2)^0,w,c
  6063  00169E  583B               	subwfb	(___fladd@a+2)^0,w,c
  6064  0016A0  6E3F               	movwf	(??___fladd+2)^0,c
  6065  0016A2  5038               	movf	(___fladd@b+3)^0,w,c
  6066  0016A4  583C               	subwfb	(___fladd@a+3)^0,w,c
  6067  0016A6  6E40               	movwf	(??___fladd+3)^0,c
  6068  0016A8  0EFF               	movlw	255
  6069  0016AA  243D               	addwf	??___fladd^0,w,c
  6070  0016AC  6E35               	movwf	___fladd@b^0,c
  6071  0016AE  0EFF               	movlw	255
  6072  0016B0  203E               	addwfc	(??___fladd+1)^0,w,c
  6073  0016B2  6E36               	movwf	(___fladd@b+1)^0,c
  6074  0016B4  0EFF               	movlw	255
  6075  0016B6  203F               	addwfc	(??___fladd+2)^0,w,c
  6076  0016B8  6E37               	movwf	(___fladd@b+2)^0,c
  6077  0016BA  0EFF               	movlw	255
  6078  0016BC  2040               	addwfc	(??___fladd+3)^0,w,c
  6079  0016BE  6E38               	movwf	(___fladd@b+3)^0,c
  6080  0016C0  0E80               	movlw	128
  6081  0016C2  1A41               	xorwf	___fladd@signs^0,f,c
  6082  0016C4  6C44               	negf	___fladd@grs^0,c
  6083  0016C6  5044               	movf	___fladd@grs^0,w,c
  6084  0016C8  A4D8               	btfss	status,2,c
  6085  0016CA  EF69  F00B         	goto	u2181
  6086  0016CE  EF6B  F00B         	goto	u2180
  6087  0016D2                     u2181:
  6088  0016D2  EF7B  F00B         	goto	l808
  6089  0016D6                     u2180:
  6090  0016D6  0E01               	movlw	1
  6091  0016D8  2635               	addwf	___fladd@b^0,f,c
  6092  0016DA  0E00               	movlw	0
  6093  0016DC  2236               	addwfc	(___fladd@b+1)^0,f,c
  6094  0016DE  2237               	addwfc	(___fladd@b+2)^0,f,c
  6095  0016E0  2238               	addwfc	(___fladd@b+3)^0,f,c
  6096  0016E2  EF7B  F00B         	goto	l808
  6097  0016E6                     l2431:
  6098  0016E6  5039               	movf	___fladd@a^0,w,c
  6099  0016E8  5E35               	subwf	___fladd@b^0,f,c
  6100  0016EA  503A               	movf	(___fladd@a+1)^0,w,c
  6101  0016EC  5A36               	subwfb	(___fladd@b+1)^0,f,c
  6102  0016EE  503B               	movf	(___fladd@a+2)^0,w,c
  6103  0016F0  5A37               	subwfb	(___fladd@b+2)^0,f,c
  6104  0016F2  503C               	movf	(___fladd@a+3)^0,w,c
  6105  0016F4  5A38               	subwfb	(___fladd@b+3)^0,f,c
  6106  0016F6                     l808:
  6107  0016F6  5035               	movf	___fladd@b^0,w,c
  6108  0016F8  1036               	iorwf	(___fladd@b+1)^0,w,c
  6109  0016FA  1037               	iorwf	(___fladd@b+2)^0,w,c
  6110  0016FC  1038               	iorwf	(___fladd@b+3)^0,w,c
  6111  0016FE  A4D8               	btfss	status,2,c
  6112  001700  EF84  F00B         	goto	u2191
  6113  001704  EF86  F00B         	goto	u2190
  6114  001708                     u2191:
  6115  001708  EFBB  F00B         	goto	l2455
  6116  00170C                     u2190:
  6117  00170C  5044               	movf	___fladd@grs^0,w,c
  6118  00170E  A4D8               	btfss	status,2,c
  6119  001710  EF8C  F00B         	goto	u2201
  6120  001714  EF8E  F00B         	goto	u2200
  6121  001718                     u2201:
  6122  001718  EFBB  F00B         	goto	l2455
  6123  00171C                     u2200:
  6124  00171C  0E00               	movlw	0
  6125  00171E  6E35               	movwf	?___fladd^0,c
  6126  001720  0E00               	movlw	0
  6127  001722  6E36               	movwf	(?___fladd+1)^0,c
  6128  001724  0E00               	movlw	0
  6129  001726  6E37               	movwf	(?___fladd+2)^0,c
  6130  001728  0E00               	movlw	0
  6131  00172A  6E38               	movwf	(?___fladd+3)^0,c
  6132  00172C  EF56  F00C         	goto	l800
  6133  001730                     l2439:
  6134  001730  90D8               	bcf	status,0,c
  6135  001732  3635               	rlcf	___fladd@b^0,f,c
  6136  001734  3636               	rlcf	(___fladd@b+1)^0,f,c
  6137  001736  3637               	rlcf	(___fladd@b+2)^0,f,c
  6138  001738  3638               	rlcf	(___fladd@b+3)^0,f,c
  6139  00173A  AE44               	btfss	___fladd@grs^0,7,c
  6140  00173C  EFA2  F00B         	goto	u2211
  6141  001740  EFA4  F00B         	goto	u2210
  6142  001744                     u2211:
  6143  001744  EFA5  F00B         	goto	l2445
  6144  001748                     u2210:
  6145  001748  8035               	bsf	___fladd@b^0,0,c
  6146  00174A                     l2445:
  6147  00174A  A044               	btfss	___fladd@grs^0,0,c
  6148  00174C  EFAA  F00B         	goto	u2221
  6149  001750  EFAC  F00B         	goto	u2220
  6150  001754                     u2221:
  6151  001754  EFB0  F00B         	goto	l2449
  6152  001758                     u2220:
  6153  001758  80D8               	bsf	status,0,c
  6154  00175A  3644               	rlcf	___fladd@grs^0,f,c
  6155  00175C  EFB2  F00B         	goto	l2451
  6156  001760                     l2449:
  6157  001760  90D8               	bcf	status,0,c
  6158  001762  3644               	rlcf	___fladd@grs^0,f,c
  6159  001764                     l2451:
  6160  001764  5043               	movf	___fladd@bexp^0,w,c
  6161  001766  B4D8               	btfsc	status,2,c
  6162  001768  EFB8  F00B         	goto	u2231
  6163  00176C  EFBA  F00B         	goto	u2230
  6164  001770                     u2231:
  6165  001770  EFBB  F00B         	goto	l2455
  6166  001774                     u2230:
  6167  001774  0643               	decf	___fladd@bexp^0,f,c
  6168  001776                     l2455:
  6169  001776  AE37               	btfss	(___fladd@b+2)^0,7,c
  6170  001778  EFC0  F00B         	goto	u2241
  6171  00177C  EFC2  F00B         	goto	u2240
  6172  001780                     u2241:
  6173  001780  EF98  F00B         	goto	l2439
  6174  001784                     u2240:
  6175  001784                     l2457:
  6176  001784  0E00               	movlw	0
  6177  001786  6E42               	movwf	___fladd@aexp^0,c
  6178  001788  AE44               	btfss	___fladd@grs^0,7,c
  6179  00178A  EFC9  F00B         	goto	u2251
  6180  00178E  EFCB  F00B         	goto	u2250
  6181  001792                     u2251:
  6182  001792  EFE3  F00B         	goto	l817
  6183  001796                     u2250:
  6184  001796  C044  F03D         	movff	___fladd@grs,??___fladd
  6185  00179A  0E7F               	movlw	127
  6186  00179C  163D               	andwf	??___fladd^0,f,c
  6187  00179E  B4D8               	btfsc	status,2,c
  6188  0017A0  EFD4  F00B         	goto	u2261
  6189  0017A4  EFD6  F00B         	goto	u2260
  6190  0017A8                     u2261:
  6191  0017A8  EFDA  F00B         	goto	l818
  6192  0017AC                     u2260:
  6193  0017AC                     l2463:
  6194  0017AC  0E01               	movlw	1
  6195  0017AE  6E42               	movwf	___fladd@aexp^0,c
  6196  0017B0  EFE3  F00B         	goto	l817
  6197  0017B4                     l818:
  6198  0017B4  A035               	btfss	___fladd@b^0,0,c
  6199  0017B6  EFDF  F00B         	goto	u2271
  6200  0017BA  EFE1  F00B         	goto	u2270
  6201  0017BE                     u2271:
  6202  0017BE  EFE3  F00B         	goto	l817
  6203  0017C2                     u2270:
  6204  0017C2  EFD6  F00B         	goto	l2463
  6205  0017C6                     l817:
  6206  0017C6  5042               	movf	___fladd@aexp^0,w,c
  6207  0017C8  B4D8               	btfsc	status,2,c
  6208  0017CA  EFE9  F00B         	goto	u2281
  6209  0017CE  EFEB  F00B         	goto	u2280
  6210  0017D2                     u2281:
  6211  0017D2  EF16  F00C         	goto	l2475
  6212  0017D6                     u2280:
  6213  0017D6  0E01               	movlw	1
  6214  0017D8  2635               	addwf	___fladd@b^0,f,c
  6215  0017DA  0E00               	movlw	0
  6216  0017DC  2236               	addwfc	(___fladd@b+1)^0,f,c
  6217  0017DE  2237               	addwfc	(___fladd@b+2)^0,f,c
  6218  0017E0  2238               	addwfc	(___fladd@b+3)^0,f,c
  6219  0017E2  A038               	btfss	(___fladd@b+3)^0,0,c
  6220  0017E4  EFF6  F00B         	goto	u2291
  6221  0017E8  EFF8  F00B         	goto	u2290
  6222  0017EC                     u2291:
  6223  0017EC  EF16  F00C         	goto	l2475
  6224  0017F0                     u2290:
  6225  0017F0  C035  F03D         	movff	___fladd@b,??___fladd
  6226  0017F4  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  6227  0017F8  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  6228  0017FC  C038  F040         	movff	___fladd@b+3,??___fladd+3
  6229  001800  3440               	rlcf	(??___fladd+3)^0,w,c
  6230  001802  3240               	rrcf	(??___fladd+3)^0,f,c
  6231  001804  323F               	rrcf	(??___fladd+2)^0,f,c
  6232  001806  323E               	rrcf	(??___fladd+1)^0,f,c
  6233  001808  323D               	rrcf	??___fladd^0,f,c
  6234  00180A  C03D  F035         	movff	??___fladd,___fladd@b
  6235  00180E  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  6236  001812  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  6237  001816  C040  F038         	movff	??___fladd+3,___fladd@b+3
  6238  00181A  2843               	incf	___fladd@bexp^0,w,c
  6239  00181C  B4D8               	btfsc	status,2,c
  6240  00181E  EF13  F00C         	goto	u2301
  6241  001822  EF15  F00C         	goto	u2300
  6242  001826                     u2301:
  6243  001826  EF16  F00C         	goto	l2475
  6244  00182A                     u2300:
  6245  00182A  2A43               	incf	___fladd@bexp^0,f,c
  6246  00182C                     l2475:
  6247  00182C  2843               	incf	___fladd@bexp^0,w,c
  6248  00182E  B4D8               	btfsc	status,2,c
  6249  001830  EF1C  F00C         	goto	u2311
  6250  001834  EF1E  F00C         	goto	u2310
  6251  001838                     u2311:
  6252  001838  EF26  F00C         	goto	l2479
  6253  00183C                     u2310:
  6254  00183C  5043               	movf	___fladd@bexp^0,w,c
  6255  00183E  A4D8               	btfss	status,2,c
  6256  001840  EF24  F00C         	goto	u2321
  6257  001844  EF26  F00C         	goto	u2320
  6258  001848                     u2321:
  6259  001848  EF38  F00C         	goto	l2483
  6260  00184C                     u2320:
  6261  00184C                     l2479:
  6262  00184C  0E00               	movlw	0
  6263  00184E  6E35               	movwf	___fladd@b^0,c
  6264  001850  0E00               	movlw	0
  6265  001852  6E36               	movwf	(___fladd@b+1)^0,c
  6266  001854  0E00               	movlw	0
  6267  001856  6E37               	movwf	(___fladd@b+2)^0,c
  6268  001858  0E00               	movlw	0
  6269  00185A  6E38               	movwf	(___fladd@b+3)^0,c
  6270  00185C  5043               	movf	___fladd@bexp^0,w,c
  6271  00185E  A4D8               	btfss	status,2,c
  6272  001860  EF34  F00C         	goto	u2331
  6273  001864  EF36  F00C         	goto	u2330
  6274  001868                     u2331:
  6275  001868  EF38  F00C         	goto	l2483
  6276  00186C                     u2330:
  6277  00186C  0E00               	movlw	0
  6278  00186E  6E41               	movwf	___fladd@signs^0,c
  6279  001870                     l2483:
  6280  001870  A043               	btfss	___fladd@bexp^0,0,c
  6281  001872  EF3D  F00C         	goto	u2341
  6282  001876  EF3F  F00C         	goto	u2340
  6283  00187A                     u2341:
  6284  00187A  EF42  F00C         	goto	l2487
  6285  00187E                     u2340:
  6286  00187E  8E37               	bsf	(___fladd@b+2)^0,7,c
  6287  001880  EF43  F00C         	goto	l2489
  6288  001884                     l2487:
  6289  001884  9E37               	bcf	(___fladd@b+2)^0,7,c
  6290  001886                     l2489:
  6291  001886  90D8               	bcf	status,0,c
  6292  001888  3043               	rrcf	___fladd@bexp^0,w,c
  6293  00188A  6E38               	movwf	(___fladd@b+3)^0,c
  6294  00188C  AE41               	btfss	___fladd@signs^0,7,c
  6295  00188E  EF4B  F00C         	goto	u2351
  6296  001892  EF4D  F00C         	goto	u2350
  6297  001896                     u2351:
  6298  001896  EF4E  F00C         	goto	l2495
  6299  00189A                     u2350:
  6300  00189A  8E38               	bsf	(___fladd@b+3)^0,7,c
  6301  00189C                     l2495:
  6302  00189C  C035  F035         	movff	___fladd@b,?___fladd
  6303  0018A0  C036  F036         	movff	___fladd@b+1,?___fladd+1
  6304  0018A4  C037  F037         	movff	___fladd@b+2,?___fladd+2
  6305  0018A8  C038  F038         	movff	___fladd@b+3,?___fladd+3
  6306  0018AC                     l800:
  6307  0018AC  0012               	return		;funcret
  6308  0018AE                     __end_of___fladd:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function ___flneg *****************
  6312 ;; Defined at:
  6313 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flneg.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  f1              4    0[COMRAM] unsigned char 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;		None
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  4    0[COMRAM] unsigned char 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6327 ;;      Params:         4       0       0       0       0       0       0       0       0
  6328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6330 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6331 ;;Total ram usage:        4 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    1
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_sprintf
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text19
  6342  00330C                     __ptext19:
  6343                           	callstack 0
  6344  00330C                     ___flneg:
  6345                           	callstack 28
  6346  00330C  5001               	movf	___flneg@f1^0,w,c
  6347  00330E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6348  003310  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6349  003312  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6350  003314  B4D8               	btfsc	status,2,c
  6351  003316  EF8F  F019         	goto	u3181
  6352  00331A  EF91  F019         	goto	u3180
  6353  00331E                     u3181:
  6354  00331E  EF99  F019         	goto	l3067
  6355  003322                     u3180:
  6356  003322  0E00               	movlw	0
  6357  003324  1A01               	xorwf	___flneg@f1^0,f,c
  6358  003326  0E00               	movlw	0
  6359  003328  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6360  00332A  0E00               	movlw	0
  6361  00332C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6362  00332E  0E80               	movlw	128
  6363  003330  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6364  003332                     l3067:
  6365  003332  C001  F001         	movff	___flneg@f1,?___flneg
  6366  003336  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6367  00333A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6368  00333E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6369  003342  0012               	return		;funcret
  6370  003344                     __end_of___flneg:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function ___flge *****************
  6374 ;; Defined at:
  6375 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flge.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  ff1             4    0[COMRAM] unsigned char 
  6378 ;;  ff2             4    4[COMRAM] unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;		None               void
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6390 ;;      Params:         8       0       0       0       0       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6392 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6393 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6394 ;;Total ram usage:       12 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_main
  6401 ;;		_sprintf
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text20
  6406  002C68                     __ptext20:
  6407                           	callstack 0
  6408  002C68                     ___flge:
  6409                           	callstack 28
  6410  002C68  0E00               	movlw	0
  6411  002C6A  1401               	andwf	___flge@ff1^0,w,c
  6412  002C6C  6E09               	movwf	??___flge^0,c
  6413  002C6E  0E00               	movlw	0
  6414  002C70  1402               	andwf	(___flge@ff1+1)^0,w,c
  6415  002C72  6E0A               	movwf	(??___flge+1)^0,c
  6416  002C74  0E80               	movlw	128
  6417  002C76  1403               	andwf	(___flge@ff1+2)^0,w,c
  6418  002C78  6E0B               	movwf	(??___flge+2)^0,c
  6419  002C7A  0E7F               	movlw	127
  6420  002C7C  1404               	andwf	(___flge@ff1+3)^0,w,c
  6421  002C7E  6E0C               	movwf	(??___flge+3)^0,c
  6422  002C80  5009               	movf	??___flge^0,w,c
  6423  002C82  100A               	iorwf	(??___flge+1)^0,w,c
  6424  002C84  100B               	iorwf	(??___flge+2)^0,w,c
  6425  002C86  100C               	iorwf	(??___flge+3)^0,w,c
  6426  002C88  A4D8               	btfss	status,2,c
  6427  002C8A  EF49  F016         	goto	u3131
  6428  002C8E  EF4B  F016         	goto	u3130
  6429  002C92                     u3131:
  6430  002C92  EF53  F016         	goto	l3045
  6431  002C96                     u3130:
  6432  002C96  0E00               	movlw	0
  6433  002C98  6E01               	movwf	___flge@ff1^0,c
  6434  002C9A  0E00               	movlw	0
  6435  002C9C  6E02               	movwf	(___flge@ff1+1)^0,c
  6436  002C9E  0E00               	movlw	0
  6437  002CA0  6E03               	movwf	(___flge@ff1+2)^0,c
  6438  002CA2  0E00               	movlw	0
  6439  002CA4  6E04               	movwf	(___flge@ff1+3)^0,c
  6440  002CA6                     l3045:
  6441  002CA6  0E00               	movlw	0
  6442  002CA8  1405               	andwf	___flge@ff2^0,w,c
  6443  002CAA  6E09               	movwf	??___flge^0,c
  6444  002CAC  0E00               	movlw	0
  6445  002CAE  1406               	andwf	(___flge@ff2+1)^0,w,c
  6446  002CB0  6E0A               	movwf	(??___flge+1)^0,c
  6447  002CB2  0E80               	movlw	128
  6448  002CB4  1407               	andwf	(___flge@ff2+2)^0,w,c
  6449  002CB6  6E0B               	movwf	(??___flge+2)^0,c
  6450  002CB8  0E7F               	movlw	127
  6451  002CBA  1408               	andwf	(___flge@ff2+3)^0,w,c
  6452  002CBC  6E0C               	movwf	(??___flge+3)^0,c
  6453  002CBE  5009               	movf	??___flge^0,w,c
  6454  002CC0  100A               	iorwf	(??___flge+1)^0,w,c
  6455  002CC2  100B               	iorwf	(??___flge+2)^0,w,c
  6456  002CC4  100C               	iorwf	(??___flge+3)^0,w,c
  6457  002CC6  A4D8               	btfss	status,2,c
  6458  002CC8  EF68  F016         	goto	u3141
  6459  002CCC  EF6A  F016         	goto	u3140
  6460  002CD0                     u3141:
  6461  002CD0  EF72  F016         	goto	l3049
  6462  002CD4                     u3140:
  6463  002CD4  0E00               	movlw	0
  6464  002CD6  6E05               	movwf	___flge@ff2^0,c
  6465  002CD8  0E00               	movlw	0
  6466  002CDA  6E06               	movwf	(___flge@ff2+1)^0,c
  6467  002CDC  0E00               	movlw	0
  6468  002CDE  6E07               	movwf	(___flge@ff2+2)^0,c
  6469  002CE0  0E00               	movlw	0
  6470  002CE2  6E08               	movwf	(___flge@ff2+3)^0,c
  6471  002CE4                     l3049:
  6472  002CE4  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6473  002CE6  EF77  F016         	goto	u3151
  6474  002CEA  EF79  F016         	goto	u3150
  6475  002CEE                     u3151:
  6476  002CEE  EF82  F016         	goto	l3053
  6477  002CF2                     u3150:
  6478  002CF2  6C01               	negf	___flge@ff1^0,c
  6479  002CF4  1E02               	comf	(___flge@ff1+1)^0,f,c
  6480  002CF6  B0D8               	btfsc	status,0,c
  6481  002CF8  2A02               	incf	(___flge@ff1+1)^0,f,c
  6482  002CFA  1E03               	comf	(___flge@ff1+2)^0,f,c
  6483  002CFC  B0D8               	btfsc	status,0,c
  6484  002CFE  2A03               	incf	(___flge@ff1+2)^0,f,c
  6485  002D00  0E80               	movlw	128
  6486  002D02  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6487  002D04                     l3053:
  6488  002D04  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6489  002D06  EF87  F016         	goto	u3161
  6490  002D0A  EF89  F016         	goto	u3160
  6491  002D0E                     u3161:
  6492  002D0E  EF92  F016         	goto	l519
  6493  002D12                     u3160:
  6494  002D12  6C05               	negf	___flge@ff2^0,c
  6495  002D14  1E06               	comf	(___flge@ff2+1)^0,f,c
  6496  002D16  B0D8               	btfsc	status,0,c
  6497  002D18  2A06               	incf	(___flge@ff2+1)^0,f,c
  6498  002D1A  1E07               	comf	(___flge@ff2+2)^0,f,c
  6499  002D1C  B0D8               	btfsc	status,0,c
  6500  002D1E  2A07               	incf	(___flge@ff2+2)^0,f,c
  6501  002D20  0E80               	movlw	128
  6502  002D22  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6503  002D24                     l519:
  6504  002D24  0E00               	movlw	0
  6505  002D26  1A01               	xorwf	___flge@ff1^0,f,c
  6506  002D28  0E00               	movlw	0
  6507  002D2A  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6508  002D2C  0E00               	movlw	0
  6509  002D2E  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6510  002D30  0E80               	movlw	128
  6511  002D32  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6512  002D34  0E00               	movlw	0
  6513  002D36  1A05               	xorwf	___flge@ff2^0,f,c
  6514  002D38  0E00               	movlw	0
  6515  002D3A  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6516  002D3C  0E00               	movlw	0
  6517  002D3E  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6518  002D40  0E80               	movlw	128
  6519  002D42  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6520  002D44  5005               	movf	___flge@ff2^0,w,c
  6521  002D46  5C01               	subwf	___flge@ff1^0,w,c
  6522  002D48  5006               	movf	(___flge@ff2+1)^0,w,c
  6523  002D4A  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6524  002D4C  5007               	movf	(___flge@ff2+2)^0,w,c
  6525  002D4E  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6526  002D50  5008               	movf	(___flge@ff2+3)^0,w,c
  6527  002D52  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6528  002D54  B0D8               	btfsc	status,0,c
  6529  002D56  EFAF  F016         	goto	u3171
  6530  002D5A  EFB1  F016         	goto	u3170
  6531  002D5E                     u3171:
  6532  002D5E  EFB4  F016         	goto	l3059
  6533  002D62                     u3170:
  6534  002D62  90D8               	bcf	status,0,c
  6535  002D64  EFB5  F016         	goto	l520
  6536  002D68                     l3059:
  6537  002D68  80D8               	bsf	status,0,c
  6538  002D6A                     l520:
  6539  002D6A  0012               	return		;funcret
  6540  002D6C                     __end_of___flge:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function ___fleq *****************
  6544 ;; Defined at:
  6545 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  ff1             4    0[COMRAM] unsigned char 
  6548 ;;  ff2             4    4[COMRAM] unsigned char 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;		None               void
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6560 ;;      Params:         8       0       0       0       0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6562 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6563 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6564 ;;Total ram usage:       12 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    1
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_sprintf
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text21
  6575  002EE0                     __ptext21:
  6576                           	callstack 0
  6577  002EE0                     ___fleq:
  6578                           	callstack 28
  6579  002EE0  0E00               	movlw	0
  6580  002EE2  1401               	andwf	___fleq@ff1^0,w,c
  6581  002EE4  6E09               	movwf	??___fleq^0,c
  6582  002EE6  0E00               	movlw	0
  6583  002EE8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6584  002EEA  6E0A               	movwf	(??___fleq+1)^0,c
  6585  002EEC  0E80               	movlw	128
  6586  002EEE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6587  002EF0  6E0B               	movwf	(??___fleq+2)^0,c
  6588  002EF2  0E7F               	movlw	127
  6589  002EF4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6590  002EF6  6E0C               	movwf	(??___fleq+3)^0,c
  6591  002EF8  5009               	movf	??___fleq^0,w,c
  6592  002EFA  100A               	iorwf	(??___fleq+1)^0,w,c
  6593  002EFC  100B               	iorwf	(??___fleq+2)^0,w,c
  6594  002EFE  100C               	iorwf	(??___fleq+3)^0,w,c
  6595  002F00  A4D8               	btfss	status,2,c
  6596  002F02  EF85  F017         	goto	u3101
  6597  002F06  EF87  F017         	goto	u3100
  6598  002F0A                     u3101:
  6599  002F0A  EF8F  F017         	goto	l3029
  6600  002F0E                     u3100:
  6601  002F0E  0E00               	movlw	0
  6602  002F10  6E01               	movwf	___fleq@ff1^0,c
  6603  002F12  0E00               	movlw	0
  6604  002F14  6E02               	movwf	(___fleq@ff1+1)^0,c
  6605  002F16  0E00               	movlw	0
  6606  002F18  6E03               	movwf	(___fleq@ff1+2)^0,c
  6607  002F1A  0E00               	movlw	0
  6608  002F1C  6E04               	movwf	(___fleq@ff1+3)^0,c
  6609  002F1E                     l3029:
  6610  002F1E  0E00               	movlw	0
  6611  002F20  1405               	andwf	___fleq@ff2^0,w,c
  6612  002F22  6E09               	movwf	??___fleq^0,c
  6613  002F24  0E00               	movlw	0
  6614  002F26  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6615  002F28  6E0A               	movwf	(??___fleq+1)^0,c
  6616  002F2A  0E80               	movlw	128
  6617  002F2C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6618  002F2E  6E0B               	movwf	(??___fleq+2)^0,c
  6619  002F30  0E7F               	movlw	127
  6620  002F32  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6621  002F34  6E0C               	movwf	(??___fleq+3)^0,c
  6622  002F36  5009               	movf	??___fleq^0,w,c
  6623  002F38  100A               	iorwf	(??___fleq+1)^0,w,c
  6624  002F3A  100B               	iorwf	(??___fleq+2)^0,w,c
  6625  002F3C  100C               	iorwf	(??___fleq+3)^0,w,c
  6626  002F3E  A4D8               	btfss	status,2,c
  6627  002F40  EFA4  F017         	goto	u3111
  6628  002F44  EFA6  F017         	goto	u3110
  6629  002F48                     u3111:
  6630  002F48  EFAE  F017         	goto	l3033
  6631  002F4C                     u3110:
  6632  002F4C  0E00               	movlw	0
  6633  002F4E  6E05               	movwf	___fleq@ff2^0,c
  6634  002F50  0E00               	movlw	0
  6635  002F52  6E06               	movwf	(___fleq@ff2+1)^0,c
  6636  002F54  0E00               	movlw	0
  6637  002F56  6E07               	movwf	(___fleq@ff2+2)^0,c
  6638  002F58  0E00               	movlw	0
  6639  002F5A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6640  002F5C                     l3033:
  6641  002F5C  5005               	movf	___fleq@ff2^0,w,c
  6642  002F5E  1801               	xorwf	___fleq@ff1^0,w,c
  6643  002F60  E10F               	bnz	u3120
  6644  002F62  5006               	movf	(___fleq@ff2+1)^0,w,c
  6645  002F64  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6646  002F66  E10C               	bnz	u3120
  6647  002F68  5007               	movf	(___fleq@ff2+2)^0,w,c
  6648  002F6A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6649  002F6C  E109               	bnz	u3120
  6650  002F6E  5008               	movf	(___fleq@ff2+3)^0,w,c
  6651  002F70  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6652  002F72  B4D8               	btfsc	status,2,c
  6653  002F74  EFBE  F017         	goto	u3121
  6654  002F78  EFC0  F017         	goto	u3120
  6655  002F7C                     u3121:
  6656  002F7C  EFC3  F017         	goto	l3037
  6657  002F80                     u3120:
  6658  002F80  90D8               	bcf	status,0,c
  6659  002F82  EFC4  F017         	goto	l513
  6660  002F86                     l3037:
  6661  002F86  80D8               	bsf	status,0,c
  6662  002F88                     l513:
  6663  002F88  0012               	return		;funcret
  6664  002F8A                     __end_of___fleq:
  6665                           	callstack 0
  6666                           
  6667 ;; *************** function _setup_Int *****************
  6668 ;; Defined at:
  6669 ;;		line 18 in file "main.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      void 
  6676 ;; Registers used:
  6677 ;;		None
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6683 ;;      Params:         0       0       0       0       0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_main
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text22
  6698  00341A                     __ptext22:
  6699                           	callstack 0
  6700  00341A                     _setup_Int:
  6701                           	callstack 29
  6702  00341A                     
  6703                           ;main.c: 19: GIE = 1;
  6704  00341A  8EF2               	bsf	4082,7,c	;volatile
  6705                           
  6706                           ;main.c: 20: PEIE = 1;
  6707  00341C  8CF2               	bsf	4082,6,c	;volatile
  6708                           
  6709                           ;main.c: 21: RCIE = 1;
  6710  00341E  8A9D               	bsf	3997,5,c	;volatile
  6711                           
  6712                           ;main.c: 22: TXIE = 0;
  6713  003420  989D               	bcf	3997,4,c	;volatile
  6714  003422  0012               	return		;funcret
  6715  003424                     __end_of_setup_Int:
  6716                           	callstack 0
  6717                           
  6718 ;; *************** function _setupTmr0 *****************
  6719 ;; Defined at:
  6720 ;;		line 59 in file "main.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;		None
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;		None
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      void 
  6727 ;; Registers used:
  6728 ;;		wreg, status,2
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6738 ;;Total ram usage:        0 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    1
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_main
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text23
  6749  0033E8                     __ptext23:
  6750                           	callstack 0
  6751  0033E8                     _setupTmr0:
  6752                           	callstack 29
  6753  0033E8                     
  6754                           ;main.c: 60: T08BIT = 0;
  6755  0033E8  9CD5               	bcf	4053,6,c	;volatile
  6756                           
  6757                           ;main.c: 61: T0CS = 0;
  6758  0033EA  9AD5               	bcf	4053,5,c	;volatile
  6759                           
  6760                           ;main.c: 62: T0SE = 0;
  6761  0033EC  98D5               	bcf	4053,4,c	;volatile
  6762                           
  6763                           ;main.c: 63: PSA = 1;
  6764  0033EE  86D5               	bsf	4053,3,c	;volatile
  6765  0033F0                     
  6766                           ;main.c: 64: TMR0L = 0;
  6767  0033F0  0E00               	movlw	0
  6768  0033F2  6ED6               	movwf	214,c	;volatile
  6769                           
  6770                           ;main.c: 65: TMR0H = 0;
  6771  0033F4  0E00               	movlw	0
  6772  0033F6  6ED7               	movwf	215,c	;volatile
  6773  0033F8                     
  6774                           ;main.c: 66: TMR0IF = 0;
  6775  0033F8  94F2               	bcf	4082,2,c	;volatile
  6776  0033FA                     
  6777                           ;main.c: 67: TMR0ON = 0;
  6778  0033FA  9ED5               	bcf	4053,7,c	;volatile
  6779  0033FC  0012               	return		;funcret
  6780  0033FE                     __end_of_setupTmr0:
  6781                           	callstack 0
  6782                           
  6783 ;; *************** function _inicializa_Serial *****************
  6784 ;; Defined at:
  6785 ;;		line 32 in file "main.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;		None
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6799 ;;      Params:         0       0       0       0       0       0       0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6802 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6803 ;;Total ram usage:        0 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    1
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_main
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text24
  6814  0033FE                     __ptext24:
  6815                           	callstack 0
  6816  0033FE                     _inicializa_Serial:
  6817                           	callstack 29
  6818  0033FE                     
  6819                           ;main.c: 34: RCSTA = 0X90;
  6820  0033FE  0E90               	movlw	144
  6821  003400  6EAB               	movwf	171,c	;volatile
  6822                           
  6823                           ;main.c: 35: TXSTA = 0X24;
  6824  003402  0E24               	movlw	36
  6825  003404  6EAC               	movwf	172,c	;volatile
  6826                           
  6827                           ;main.c: 36: SPBRG = 25;
  6828  003406  0E19               	movlw	25
  6829  003408  6EAF               	movwf	175,c	;volatile
  6830  00340A  0012               	return		;funcret
  6831  00340C                     __end_of_inicializa_Serial:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function _envia_texto_serial *****************
  6835 ;; Defined at:
  6836 ;;		line 48 in file "main.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  frase           2    4[COMRAM] PTR const unsigned char 
  6839 ;;		 -> linha2(32), STR_1(29), 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  indice          1    9[COMRAM] unsigned char 
  6842 ;;  tamanho         1    8[COMRAM] unsigned char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6852 ;;      Params:         2       0       0       0       0       0       0       0       0
  6853 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6854 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6855 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6856 ;;Total ram usage:        6 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    2
  6859 ;; This function calls:
  6860 ;;		_envia_serial
  6861 ;;		_strlen
  6862 ;; This function is called by:
  6863 ;;		_main
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text25
  6868  00321A                     __ptext25:
  6869                           	callstack 0
  6870  00321A                     _envia_texto_serial:
  6871                           	callstack 28
  6872  00321A                     
  6873                           ;main.c: 50: char indice = 0;
  6874  00321A  0E00               	movlw	0
  6875  00321C  6E0A               	movwf	envia_texto_serial@indice^0,c
  6876  00321E                     
  6877                           ;main.c: 51: char tamanho = strlen(frase);
  6878  00321E  C005  F001         	movff	envia_texto_serial@frase,strlen@s
  6879  003222  C006  F002         	movff	envia_texto_serial@frase+1,strlen@s+1
  6880  003226  EC3C  F019         	call	_strlen	;wreg free
  6881  00322A  5001               	movf	?_strlen^0,w,c
  6882  00322C  6E09               	movwf	envia_texto_serial@tamanho^0,c
  6883                           
  6884                           ;main.c: 53: while(indice< tamanho ) {
  6885  00322E  EF32  F019         	goto	l3189
  6886  003232                     l3185:
  6887                           
  6888                           ;main.c: 54: envia_serial (frase[indice]);
  6889  003232  500A               	movf	envia_texto_serial@indice^0,w,c
  6890  003234  2405               	addwf	envia_texto_serial@frase^0,w,c
  6891  003236  6E07               	movwf	??_envia_texto_serial^0,c
  6892  003238  0E00               	movlw	0
  6893  00323A  2006               	addwfc	(envia_texto_serial@frase+1)^0,w,c
  6894  00323C  6E08               	movwf	(??_envia_texto_serial+1)^0,c
  6895  00323E  C007  FFF6         	movff	??_envia_texto_serial,tblptrl
  6896  003242  C008  FFF7         	movff	??_envia_texto_serial+1,tblptrh
  6897  003246  6AF8               	clrf	tblptru,c
  6898  003248  0E07               	movlw	(high __ramtop+-1)
  6899  00324A  64F7               	cpfsgt	tblptrh,c
  6900  00324C  D003               	bra	u3397
  6901  00324E  0008               	tblrd		*
  6902  003250  50F5               	movf	tablat,w,c
  6903  003252  D005               	bra	u3390
  6904  003254                     u3397:
  6905  003254  CFF6 FFE9          	movff	tblptrl,fsr0l
  6906  003258  CFF7 FFEA          	movff	tblptrh,fsr0h
  6907  00325C  50EF               	movf	indf0,w,c
  6908  00325E                     u3390:
  6909  00325E  ECBB  F019         	call	_envia_serial
  6910  003262                     
  6911                           ;main.c: 55: indice++;
  6912  003262  2A0A               	incf	envia_texto_serial@indice^0,f,c
  6913  003264                     l3189:
  6914  003264  5009               	movf	envia_texto_serial@tamanho^0,w,c
  6915  003266  5C0A               	subwf	envia_texto_serial@indice^0,w,c
  6916  003268  A0D8               	btfss	status,0,c
  6917  00326A  EF39  F019         	goto	u3401
  6918  00326E  EF3B  F019         	goto	u3400
  6919  003272                     u3401:
  6920  003272  EF19  F019         	goto	l3185
  6921  003276                     u3400:
  6922  003276  0012               	return		;funcret
  6923  003278                     __end_of_envia_texto_serial:
  6924                           	callstack 0
  6925                           
  6926 ;; *************** function _strlen *****************
  6927 ;; Defined at:
  6928 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6931 ;;		 -> linha2(32), STR_1(29), 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  6934 ;;		 -> linha2(32), STR_1(29), 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  2    0[COMRAM] unsigned int 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6944 ;;      Params:         2       0       0       0       0       0       0       0       0
  6945 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6947 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6948 ;;Total ram usage:        4 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    1
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_envia_texto_serial
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text26
  6959  003278                     __ptext26:
  6960                           	callstack 0
  6961  003278                     _strlen:
  6962                           	callstack 28
  6963  003278  C001  F003         	movff	strlen@s,strlen@cp
  6964  00327C  C002  F004         	movff	strlen@s+1,strlen@cp+1
  6965  003280  EF44  F019         	goto	l2757
  6966  003284                     l2755:
  6967  003284  4A03               	infsnz	strlen@cp^0,f,c
  6968  003286  2A04               	incf	(strlen@cp+1)^0,f,c
  6969  003288                     l2757:
  6970  003288  C003  FFF6         	movff	strlen@cp,tblptrl
  6971  00328C  C004  FFF7         	movff	strlen@cp+1,tblptrh
  6972  003290  6AF8               	clrf	tblptru,c
  6973  003292  0E07               	movlw	(high __ramtop+-1)
  6974  003294  64F7               	cpfsgt	tblptrh,c
  6975  003296  D003               	bra	u2747
  6976  003298  0008               	tblrd		*
  6977  00329A  50F5               	movf	tablat,w,c
  6978  00329C  D005               	bra	u2740
  6979  00329E                     u2747:
  6980  00329E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6981  0032A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  6982  0032A6  50EF               	movf	indf0,w,c
  6983  0032A8                     u2740:
  6984  0032A8  0900               	iorlw	0
  6985  0032AA  A4D8               	btfss	status,2,c
  6986  0032AC  EF5A  F019         	goto	u2751
  6987  0032B0  EF5C  F019         	goto	u2750
  6988  0032B4                     u2751:
  6989  0032B4  EF42  F019         	goto	l2755
  6990  0032B8                     u2750:
  6991  0032B8  5001               	movf	strlen@s^0,w,c
  6992  0032BA  5C03               	subwf	strlen@cp^0,w,c
  6993  0032BC  6E01               	movwf	?_strlen^0,c
  6994  0032BE  5002               	movf	(strlen@s+1)^0,w,c
  6995  0032C0  5804               	subwfb	(strlen@cp+1)^0,w,c
  6996  0032C2  6E02               	movwf	(?_strlen+1)^0,c
  6997  0032C4  0012               	return		;funcret
  6998  0032C6                     __end_of_strlen:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _envia_serial *****************
  7002 ;; Defined at:
  7003 ;;		line 39 in file "main.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  valor           1    wreg     unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  valor           1    1[COMRAM] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0
  7018 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7020 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7021 ;;Total ram usage:        2 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    1
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		_envia_texto_serial
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text27
  7032  003376                     __ptext27:
  7033                           	callstack 0
  7034  003376                     _envia_serial:
  7035                           	callstack 28
  7036                           
  7037                           ;incstack = 0
  7038                           ;envia_serial@valor stored from wreg
  7039  003376  6E02               	movwf	envia_serial@valor^0,c
  7040  003378                     
  7041                           ;main.c: 41: TXIF = 0;
  7042  003378  989E               	bcf	3998,4,c	;volatile
  7043  00337A                     
  7044                           ;main.c: 42: TXREG = valor;
  7045  00337A  C002  FFAD         	movff	envia_serial@valor,4013	;volatile
  7046  00337E                     l90:
  7047  00337E  A89E               	btfss	3998,4,c	;volatile
  7048  003380  EFC4  F019         	goto	u2731
  7049  003384  EFC6  F019         	goto	u2730
  7050  003388                     u2731:
  7051  003388  EFBF  F019         	goto	l90
  7052  00338C                     u2730:
  7053  00338C                     
  7054                           ;main.c: 44: };main.c: 45: _delay((unsigned long)((1)*(20000000/4000.0)));
  7055  00338C  0E07               	movlw	7
  7056  00338E  6E01               	movwf	??_envia_serial^0,c
  7057  003390  0E7D               	movlw	125
  7058  003392                     u3947:
  7059  003392  2EE8               	decfsz	wreg,f,c
  7060  003394  D7FE               	bra	u3947
  7061  003396  2E01               	decfsz	??_envia_serial^0,f,c
  7062  003398  D7FC               	bra	u3947
  7063  00339A  F000               	nop	
  7064  00339C  0012               	return		;funcret
  7065  00339E                     __end_of_envia_serial:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function _SuperDelay *****************
  7069 ;; Defined at:
  7070 ;;		line 70 in file "main.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  counter         4   14[COMRAM] long 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  i               4   19[COMRAM] long 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7084 ;;      Params:         4       0       0       0       0       0       0       0       0
  7085 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7086 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7087 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7088 ;;Total ram usage:        9 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    2
  7091 ;; This function calls:
  7092 ;;		___aldiv
  7093 ;; This function is called by:
  7094 ;;		_main
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text28
  7099  00302E                     __ptext28:
  7100                           	callstack 0
  7101  00302E                     _SuperDelay:
  7102                           	callstack 28
  7103  00302E                     
  7104                           ;main.c: 71: counter = counter / 10;
  7105  00302E  C00F  F001         	movff	SuperDelay@counter,___aldiv@dividend
  7106  003032  C010  F002         	movff	SuperDelay@counter+1,___aldiv@dividend+1
  7107  003036  C011  F003         	movff	SuperDelay@counter+2,___aldiv@dividend+2
  7108  00303A  C012  F004         	movff	SuperDelay@counter+3,___aldiv@dividend+3
  7109  00303E  0E0A               	movlw	10
  7110  003040  6E05               	movwf	___aldiv@divisor^0,c
  7111  003042  0E00               	movlw	0
  7112  003044  6E06               	movwf	(___aldiv@divisor+1)^0,c
  7113  003046  0E00               	movlw	0
  7114  003048  6E07               	movwf	(___aldiv@divisor+2)^0,c
  7115  00304A  0E00               	movlw	0
  7116  00304C  6E08               	movwf	(___aldiv@divisor+3)^0,c
  7117  00304E  EC2B  F015         	call	___aldiv	;wreg free
  7118  003052  C001  F00F         	movff	?___aldiv,SuperDelay@counter
  7119  003056  C002  F010         	movff	?___aldiv+1,SuperDelay@counter+1
  7120  00305A  C003  F011         	movff	?___aldiv+2,SuperDelay@counter+2
  7121  00305E  C004  F012         	movff	?___aldiv+3,SuperDelay@counter+3
  7122  003062                     
  7123                           ;main.c: 72: for (long i = 1; i<= counter; i++) {
  7124  003062  0E01               	movlw	1
  7125  003064  6E14               	movwf	SuperDelay@i^0,c
  7126  003066  0E00               	movlw	0
  7127  003068  6E15               	movwf	(SuperDelay@i+1)^0,c
  7128  00306A  0E00               	movlw	0
  7129  00306C  6E16               	movwf	(SuperDelay@i+2)^0,c
  7130  00306E  0E00               	movlw	0
  7131  003070  6E17               	movwf	(SuperDelay@i+3)^0,c
  7132  003072  EF49  F018         	goto	l3207
  7133  003076                     l3203:
  7134                           
  7135                           ;main.c: 73: _delay((unsigned long)((10)*(20000000/4000.0)));
  7136  003076  0E41               	movlw	65
  7137  003078  6E13               	movwf	??_SuperDelay^0,c
  7138  00307A  0EEE               	movlw	238
  7139  00307C                     u3957:
  7140  00307C  2EE8               	decfsz	wreg,f,c
  7141  00307E  D7FE               	bra	u3957
  7142  003080  2E13               	decfsz	??_SuperDelay^0,f,c
  7143  003082  D7FC               	bra	u3957
  7144  003084  D000               	nop2	
  7145  003086  0E01               	movlw	1
  7146  003088  2614               	addwf	SuperDelay@i^0,f,c
  7147  00308A  0E00               	movlw	0
  7148  00308C  2215               	addwfc	(SuperDelay@i+1)^0,f,c
  7149  00308E  2216               	addwfc	(SuperDelay@i+2)^0,f,c
  7150  003090  2217               	addwfc	(SuperDelay@i+3)^0,f,c
  7151  003092                     l3207:
  7152  003092  5014               	movf	SuperDelay@i^0,w,c
  7153  003094  5C0F               	subwf	SuperDelay@counter^0,w,c
  7154  003096  5015               	movf	(SuperDelay@i+1)^0,w,c
  7155  003098  5810               	subwfb	(SuperDelay@counter+1)^0,w,c
  7156  00309A  5016               	movf	(SuperDelay@i+2)^0,w,c
  7157  00309C  5811               	subwfb	(SuperDelay@counter+2)^0,w,c
  7158  00309E  5012               	movf	(SuperDelay@counter+3)^0,w,c
  7159  0030A0  0A80               	xorlw	128
  7160  0030A2  6E13               	movwf	??_SuperDelay^0,c
  7161  0030A4  5017               	movf	(SuperDelay@i+3)^0,w,c
  7162  0030A6  0A80               	xorlw	128
  7163  0030A8  5813               	subwfb	??_SuperDelay^0,w,c
  7164  0030AA  B0D8               	btfsc	status,0,c
  7165  0030AC  EF5A  F018         	goto	u3411
  7166  0030B0  EF5C  F018         	goto	u3410
  7167  0030B4                     u3411:
  7168  0030B4  EF3B  F018         	goto	l3203
  7169  0030B8                     u3410:
  7170  0030B8  0012               	return		;funcret
  7171  0030BA                     __end_of_SuperDelay:
  7172                           	callstack 0
  7173                           
  7174 ;; *************** function ___aldiv *****************
  7175 ;; Defined at:
  7176 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  dividend        4    0[COMRAM] long 
  7179 ;;  divisor         4    4[COMRAM] long 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  quotient        4   10[COMRAM] long 
  7182 ;;  sign            1    9[COMRAM] unsigned char 
  7183 ;;  counter         1    8[COMRAM] unsigned char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  4    0[COMRAM] long 
  7186 ;; Registers used:
  7187 ;;		wreg, status,2, status,0
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7193 ;;      Params:         8       0       0       0       0       0       0       0       0
  7194 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7196 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7197 ;;Total ram usage:       14 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    1
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_SuperDelay
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           	psect	text29
  7208  002A56                     __ptext29:
  7209                           	callstack 0
  7210  002A56                     ___aldiv:
  7211                           	callstack 28
  7212  002A56  0E00               	movlw	0
  7213  002A58  6E0A               	movwf	___aldiv@sign^0,c
  7214  002A5A  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  7215  002A5C  EF34  F015         	goto	u3040
  7216  002A60  EF32  F015         	goto	u3041
  7217  002A64                     u3041:
  7218  002A64  EF3E  F015         	goto	l2983
  7219  002A68                     u3040:
  7220  002A68  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  7221  002A6A  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  7222  002A6C  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  7223  002A6E  6C05               	negf	___aldiv@divisor^0,c
  7224  002A70  0E00               	movlw	0
  7225  002A72  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  7226  002A74  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  7227  002A76  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  7228  002A78  0E01               	movlw	1
  7229  002A7A  6E0A               	movwf	___aldiv@sign^0,c
  7230  002A7C                     l2983:
  7231  002A7C  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  7232  002A7E  EF45  F015         	goto	u3050
  7233  002A82  EF43  F015         	goto	u3051
  7234  002A86                     u3051:
  7235  002A86  EF4F  F015         	goto	l2989
  7236  002A8A                     u3050:
  7237  002A8A  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  7238  002A8C  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  7239  002A8E  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  7240  002A90  6C01               	negf	___aldiv@dividend^0,c
  7241  002A92  0E00               	movlw	0
  7242  002A94  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  7243  002A96  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  7244  002A98  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  7245  002A9A  0E01               	movlw	1
  7246  002A9C  1A0A               	xorwf	___aldiv@sign^0,f,c
  7247  002A9E                     l2989:
  7248  002A9E  0E00               	movlw	0
  7249  002AA0  6E0B               	movwf	___aldiv@quotient^0,c
  7250  002AA2  0E00               	movlw	0
  7251  002AA4  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  7252  002AA6  0E00               	movlw	0
  7253  002AA8  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  7254  002AAA  0E00               	movlw	0
  7255  002AAC  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  7256  002AAE  5005               	movf	___aldiv@divisor^0,w,c
  7257  002AB0  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  7258  002AB2  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  7259  002AB4  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  7260  002AB6  B4D8               	btfsc	status,2,c
  7261  002AB8  EF60  F015         	goto	u3061
  7262  002ABC  EF62  F015         	goto	u3060
  7263  002AC0                     u3061:
  7264  002AC0  EF98  F015         	goto	l3011
  7265  002AC4                     u3060:
  7266  002AC4  0E01               	movlw	1
  7267  002AC6  6E09               	movwf	___aldiv@counter^0,c
  7268  002AC8  EF6C  F015         	goto	l2997
  7269  002ACC                     l2995:
  7270  002ACC  90D8               	bcf	status,0,c
  7271  002ACE  3605               	rlcf	___aldiv@divisor^0,f,c
  7272  002AD0  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  7273  002AD2  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  7274  002AD4  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  7275  002AD6  2A09               	incf	___aldiv@counter^0,f,c
  7276  002AD8                     l2997:
  7277  002AD8  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  7278  002ADA  EF71  F015         	goto	u3071
  7279  002ADE  EF73  F015         	goto	u3070
  7280  002AE2                     u3071:
  7281  002AE2  EF66  F015         	goto	l2995
  7282  002AE6                     u3070:
  7283  002AE6                     l2999:
  7284  002AE6  90D8               	bcf	status,0,c
  7285  002AE8  360B               	rlcf	___aldiv@quotient^0,f,c
  7286  002AEA  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  7287  002AEC  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  7288  002AEE  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  7289  002AF0  5005               	movf	___aldiv@divisor^0,w,c
  7290  002AF2  5C01               	subwf	___aldiv@dividend^0,w,c
  7291  002AF4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7292  002AF6  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  7293  002AF8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7294  002AFA  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  7295  002AFC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7296  002AFE  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  7297  002B00  A0D8               	btfss	status,0,c
  7298  002B02  EF85  F015         	goto	u3081
  7299  002B06  EF87  F015         	goto	u3080
  7300  002B0A                     u3081:
  7301  002B0A  EF90  F015         	goto	l3007
  7302  002B0E                     u3080:
  7303  002B0E  5005               	movf	___aldiv@divisor^0,w,c
  7304  002B10  5E01               	subwf	___aldiv@dividend^0,f,c
  7305  002B12  5006               	movf	(___aldiv@divisor+1)^0,w,c
  7306  002B14  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  7307  002B16  5007               	movf	(___aldiv@divisor+2)^0,w,c
  7308  002B18  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  7309  002B1A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  7310  002B1C  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  7311  002B1E  800B               	bsf	___aldiv@quotient^0,0,c
  7312  002B20                     l3007:
  7313  002B20  90D8               	bcf	status,0,c
  7314  002B22  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  7315  002B24  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  7316  002B26  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  7317  002B28  3205               	rrcf	___aldiv@divisor^0,f,c
  7318  002B2A  2E09               	decfsz	___aldiv@counter^0,f,c
  7319  002B2C  EF73  F015         	goto	l2999
  7320  002B30                     l3011:
  7321  002B30  500A               	movf	___aldiv@sign^0,w,c
  7322  002B32  B4D8               	btfsc	status,2,c
  7323  002B34  EF9E  F015         	goto	u3091
  7324  002B38  EFA0  F015         	goto	u3090
  7325  002B3C                     u3091:
  7326  002B3C  EFA8  F015         	goto	l3015
  7327  002B40                     u3090:
  7328  002B40  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  7329  002B42  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  7330  002B44  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  7331  002B46  6C0B               	negf	___aldiv@quotient^0,c
  7332  002B48  0E00               	movlw	0
  7333  002B4A  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  7334  002B4C  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  7335  002B4E  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  7336  002B50                     l3015:
  7337  002B50  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  7338  002B54  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  7339  002B58  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  7340  002B5C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  7341  002B60  0012               	return		;funcret
  7342  002B62                     __end_of___aldiv:
  7343                           	callstack 0
  7344                           
  7345 ;; *************** function _Serial *****************
  7346 ;; Defined at:
  7347 ;;		line 25 in file "main.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;		None
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		None
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7365 ;;Total ram usage:        0 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		Interrupt level 2
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	intcode
  7375  000008                     __pintcode:
  7376                           	callstack 0
  7377  000008                     _Serial:
  7378                           	callstack 27
  7379                           
  7380                           ;incstack = 0
  7381  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7382  00000A  ED06  F01A         	call	int_func,f	;refresh shadow registers
  7383                           
  7384                           	psect	intcode_body
  7385  00340C                     __pintcode_body:
  7386                           	callstack 27
  7387  00340C                     int_func:
  7388                           	callstack 27
  7389  00340C  0006               	pop		; remove dummy address from shadow register refresh
  7390  00340E                     
  7391                           ;main.c: 27: caracter = RCREG;
  7392  00340E  CFAE F080          	movff	4014,_caracter	;volatile
  7393                           
  7394                           ;main.c: 28: flag_interrupcao = 1;
  7395  003412  805E               	bsf	(_flag_interrupcao/(0+8))^0,_flag_interrupcao& (0+7),c
  7396                           
  7397                           ;main.c: 29: RCIF = 0;
  7398  003414  9A9E               	bcf	3998,5,c	;volatile
  7399  003416  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7400  003418  0011               	retfie		f
  7401  00341A                     __end_of_Serial:
  7402                           	callstack 0
  7403                           
  7404                           	psect	rparam
  7405  0000                     
  7406                           	psect	temp
  7407  00005F                     btemp:
  7408                           	callstack 0
  7409  00005F                     	ds	1
  7410  0000                     int$flags	set	btemp
  7411  0000                     wtemp8	set	btemp+1
  7412  0000                     ttemp5	set	btemp+1
  7413  0000                     ttemp6	set	btemp+4
  7414  0000                     ttemp7	set	btemp+8
  7415                           
  7416                           	psect	idloc
  7417                           
  7418                           ;Config register IDLOC0 @ 0x200000
  7419                           ;	unspecified, using default values
  7420  200000                     	org	2097152
  7421  200000  FF                 	db	255
  7422                           
  7423                           ;Config register IDLOC1 @ 0x200001
  7424                           ;	unspecified, using default values
  7425  200001                     	org	2097153
  7426  200001  FF                 	db	255
  7427                           
  7428                           ;Config register IDLOC2 @ 0x200002
  7429                           ;	unspecified, using default values
  7430  200002                     	org	2097154
  7431  200002  FF                 	db	255
  7432                           
  7433                           ;Config register IDLOC3 @ 0x200003
  7434                           ;	unspecified, using default values
  7435  200003                     	org	2097155
  7436  200003  FF                 	db	255
  7437                           
  7438                           ;Config register IDLOC4 @ 0x200004
  7439                           ;	unspecified, using default values
  7440  200004                     	org	2097156
  7441  200004  FF                 	db	255
  7442                           
  7443                           ;Config register IDLOC5 @ 0x200005
  7444                           ;	unspecified, using default values
  7445  200005                     	org	2097157
  7446  200005  FF                 	db	255
  7447                           
  7448                           ;Config register IDLOC6 @ 0x200006
  7449                           ;	unspecified, using default values
  7450  200006                     	org	2097158
  7451  200006  FF                 	db	255
  7452                           
  7453                           ;Config register IDLOC7 @ 0x200007
  7454                           ;	unspecified, using default values
  7455  200007                     	org	2097159
  7456  200007  FF                 	db	255
  7457                           
  7458                           	psect	config
  7459                           
  7460                           ;Config register CONFIG1L @ 0x300000
  7461                           ;	unspecified, using default values
  7462                           ;	PLL Prescaler Selection bits
  7463                           ;	PLLDIV = 0x0, unprogrammed default
  7464                           ;	System Clock Postscaler Selection bits
  7465                           ;	CPUDIV = 0x0, unprogrammed default
  7466                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7467                           ;	USBDIV = 0x0, unprogrammed default
  7468  300000                     	org	3145728
  7469  300000  00                 	db	0
  7470                           
  7471                           ;Config register CONFIG1H @ 0x300001
  7472                           ;	Oscillator Selection bits
  7473                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7474                           ;	Fail-Safe Clock Monitor Enable bit
  7475                           ;	FCMEN = 0x0, unprogrammed default
  7476                           ;	Internal/External Oscillator Switchover bit
  7477                           ;	IESO = 0x0, unprogrammed default
  7478  300001                     	org	3145729
  7479  300001  09                 	db	9
  7480                           
  7481                           ;Config register CONFIG2L @ 0x300002
  7482                           ;	unspecified, using default values
  7483                           ;	Power-up Timer Enable bit
  7484                           ;	PWRT = 0x1, unprogrammed default
  7485                           ;	Brown-out Reset Enable bits
  7486                           ;	BOR = 0x3, unprogrammed default
  7487                           ;	Brown-out Reset Voltage bits
  7488                           ;	BORV = 0x3, unprogrammed default
  7489                           ;	USB Voltage Regulator Enable bit
  7490                           ;	VREGEN = 0x0, unprogrammed default
  7491  300002                     	org	3145730
  7492  300002  1F                 	db	31
  7493                           
  7494                           ;Config register CONFIG2H @ 0x300003
  7495                           ;	unspecified, using default values
  7496                           ;	Watchdog Timer Enable bit
  7497                           ;	WDT = 0x1, unprogrammed default
  7498                           ;	Watchdog Timer Postscale Select bits
  7499                           ;	WDTPS = 0xF, unprogrammed default
  7500  300003                     	org	3145731
  7501  300003  1F                 	db	31
  7502                           
  7503                           ; Padding undefined space
  7504  300004                     	org	3145732
  7505  300004  FF                 	db	255
  7506                           
  7507                           ;Config register CONFIG3H @ 0x300005
  7508                           ;	CCP2 MUX bit
  7509                           ;	CCP2MX = 0x1, unprogrammed default
  7510                           ;	PORTB A/D Enable bit
  7511                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7512                           ;	Low-Power Timer 1 Oscillator Enable bit
  7513                           ;	LPT1OSC = 0x0, unprogrammed default
  7514                           ;	MCLR Pin Enable bit
  7515                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  7516  300005                     	org	3145733
  7517  300005  01                 	db	1
  7518                           
  7519                           ;Config register CONFIG4L @ 0x300006
  7520                           ;	unspecified, using default values
  7521                           ;	Stack Full/Underflow Reset Enable bit
  7522                           ;	STVREN = 0x1, unprogrammed default
  7523                           ;	Single-Supply ICSP Enable bit
  7524                           ;	LVP = 0x1, unprogrammed default
  7525                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7526                           ;	ICPRT = 0x0, unprogrammed default
  7527                           ;	Extended Instruction Set Enable bit
  7528                           ;	XINST = 0x0, unprogrammed default
  7529                           ;	Background Debugger Enable bit
  7530                           ;	DEBUG = 0x1, unprogrammed default
  7531  300006                     	org	3145734
  7532  300006  85                 	db	133
  7533                           
  7534                           ; Padding undefined space
  7535  300007                     	org	3145735
  7536  300007  FF                 	db	255
  7537                           
  7538                           ;Config register CONFIG5L @ 0x300008
  7539                           ;	unspecified, using default values
  7540                           ;	Code Protection bit
  7541                           ;	CP0 = 0x1, unprogrammed default
  7542                           ;	Code Protection bit
  7543                           ;	CP1 = 0x1, unprogrammed default
  7544                           ;	Code Protection bit
  7545                           ;	CP2 = 0x1, unprogrammed default
  7546                           ;	Code Protection bit
  7547                           ;	CP3 = 0x1, unprogrammed default
  7548  300008                     	org	3145736
  7549  300008  0F                 	db	15
  7550                           
  7551                           ;Config register CONFIG5H @ 0x300009
  7552                           ;	unspecified, using default values
  7553                           ;	Boot Block Code Protection bit
  7554                           ;	CPB = 0x1, unprogrammed default
  7555                           ;	Data EEPROM Code Protection bit
  7556                           ;	CPD = 0x1, unprogrammed default
  7557  300009                     	org	3145737
  7558  300009  C0                 	db	192
  7559                           
  7560                           ;Config register CONFIG6L @ 0x30000A
  7561                           ;	unspecified, using default values
  7562                           ;	Write Protection bit
  7563                           ;	WRT0 = 0x1, unprogrammed default
  7564                           ;	Write Protection bit
  7565                           ;	WRT1 = 0x1, unprogrammed default
  7566                           ;	Write Protection bit
  7567                           ;	WRT2 = 0x1, unprogrammed default
  7568                           ;	Write Protection bit
  7569                           ;	WRT3 = 0x1, unprogrammed default
  7570  30000A                     	org	3145738
  7571  30000A  0F                 	db	15
  7572                           
  7573                           ;Config register CONFIG6H @ 0x30000B
  7574                           ;	unspecified, using default values
  7575                           ;	Configuration Register Write Protection bit
  7576                           ;	WRTC = 0x1, unprogrammed default
  7577                           ;	Boot Block Write Protection bit
  7578                           ;	WRTB = 0x1, unprogrammed default
  7579                           ;	Data EEPROM Write Protection bit
  7580                           ;	WRTD = 0x1, unprogrammed default
  7581  30000B                     	org	3145739
  7582  30000B  E0                 	db	224
  7583                           
  7584                           ;Config register CONFIG7L @ 0x30000C
  7585                           ;	unspecified, using default values
  7586                           ;	Table Read Protection bit
  7587                           ;	EBTR0 = 0x1, unprogrammed default
  7588                           ;	Table Read Protection bit
  7589                           ;	EBTR1 = 0x1, unprogrammed default
  7590                           ;	Table Read Protection bit
  7591                           ;	EBTR2 = 0x1, unprogrammed default
  7592                           ;	Table Read Protection bit
  7593                           ;	EBTR3 = 0x1, unprogrammed default
  7594  30000C                     	org	3145740
  7595  30000C  0F                 	db	15
  7596                           
  7597                           ;Config register CONFIG7H @ 0x30000D
  7598                           ;	unspecified, using default values
  7599                           ;	Boot Block Table Read Protection bit
  7600                           ;	EBTRB = 0x1, unprogrammed default
  7601  30000D                     	org	3145741
  7602  30000D  40                 	db	64
  7603                           tosu	equ	0xFFF
  7604                           tosh	equ	0xFFE
  7605                           tosl	equ	0xFFD
  7606                           stkptr	equ	0xFFC
  7607                           pclatu	equ	0xFFB
  7608                           pclath	equ	0xFFA
  7609                           pcl	equ	0xFF9
  7610                           tblptru	equ	0xFF8
  7611                           tblptrh	equ	0xFF7
  7612                           tblptrl	equ	0xFF6
  7613                           tablat	equ	0xFF5
  7614                           prodh	equ	0xFF4
  7615                           prodl	equ	0xFF3
  7616                           indf0	equ	0xFEF
  7617                           postinc0	equ	0xFEE
  7618                           postdec0	equ	0xFED
  7619                           preinc0	equ	0xFEC
  7620                           plusw0	equ	0xFEB
  7621                           fsr0h	equ	0xFEA
  7622                           fsr0l	equ	0xFE9
  7623                           wreg	equ	0xFE8
  7624                           indf1	equ	0xFE7
  7625                           postinc1	equ	0xFE6
  7626                           postdec1	equ	0xFE5
  7627                           preinc1	equ	0xFE4
  7628                           plusw1	equ	0xFE3
  7629                           fsr1h	equ	0xFE2
  7630                           fsr1l	equ	0xFE1
  7631                           bsr	equ	0xFE0
  7632                           indf2	equ	0xFDF
  7633                           postinc2	equ	0xFDE
  7634                           postdec2	equ	0xFDD
  7635                           preinc2	equ	0xFDC
  7636                           plusw2	equ	0xFDB
  7637                           fsr2h	equ	0xFDA
  7638                           fsr2l	equ	0xFD9
  7639                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    144
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      94
    BANK0           160     27      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> linha2(BANK0[32]), STR_1(CODE[29]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> linha2(BANK0[32]), STR_1(CODE[29]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> linha2(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    envia_texto_serial@frase	PTR const unsigned char  size(2) Largest target is 32
		 -> linha2(BANK0[32]), STR_1(CODE[29]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _envia_texto_serial->_strlen
    _SuperDelay->___aldiv

Critical Paths under _Serial in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _Serial in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Serial in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Serial in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Serial in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Serial in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Serial in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Serial in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Serial in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   38663
                                             88 COMRAM     1     1      0
                         _SuperDelay
                             ___flge
                            ___flmul
                           ___xxtofl
                 _envia_texto_serial
                  _inicializa_Serial
                          _setupTmr0
                          _setup_Int
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   31413
                                             76 COMRAM    12     4      8
                                              0 BANK0     27    27      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    6887
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    5350
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3872
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2737
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2414
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1854
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup_Int                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTmr0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_Serial                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _envia_texto_serial                                   6     4      2     453
                                              4 COMRAM     6     4      2
                       _envia_serial
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _envia_serial                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SuperDelay                                           9     5      4     597
                                             14 COMRAM     9     5      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Serial                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SuperDelay
     ___aldiv
   ___flge
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _envia_texto_serial
     _envia_serial
     _strlen
   _inicializa_Serial
   _setupTmr0
   _setup_Int
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _Serial (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      5E       5       58.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     59      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      20        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Sep 25 14:30:11 2021

                         l90 337E                           l93 339C                           l87 340A  
                         l79 3422                           l99 3276                 ___awdiv@sign 000C  
        ___wmul@multiplicand 0003                          l102 33FC                          l120 24BC  
                        l114 23CC                          l108 30B8                          l116 23DA  
                        l117 23DC                          l214 1074                          l119 23EA  
                        l320 2B60                          l241 33C2                          l155 20E2  
                        l148 2384                          l238 13EC                          l520 2D6A  
                        l504 2A44                          l513 2F88                          l275 302C  
                        l524 3342                          l268 301C                          l604 2908  
                        l613 28F8                          l606 284E                          l519 2D24  
                        l607 2880                          l800 18AC                          l472 2E2E  
                        l547 2C66                          l485 2EDE                          l495 2A54  
                        l808 16F6                          l817 17C6                          l833 330A  
                        l921 27B2                          l761 31B4                          l818 17B4  
                        l690 3140                          l754 31AC                          l683 3130  
                        l771 3218                          l932 274A                          l764 3210  
                        l925 26EE                          l918 2656                          l791 15DC  
                        l792 15CA                          l793 1590                          l881 1CD6  
                        l939 3374                          l884 1B68                          l949 32C4  
                        l877 1972                          l894 1C98                          l886 1BE0  
                        l887 1BCE                          _GIE 007F97                          _RB3 007C0B  
                        _PSA 007EAB                 ___awmod@sign 0006                          wreg 000FE8  
               ___flmul@aexp 0020                 ___flmul@bexp 0021                  _sprintf$983 00A3  
               ___flmul@sign 001B                 ___flmul@temp 0026                 ___flmul@prod 0022  
               ___fltol@exp1 003A                         l3001 2AF0                         l3003 2B0E  
                       l3011 2B30                         l3013 2B40                         l3005 2B1E  
                       l2301 1408                         l3021 32D6                         l3015 2B50  
                       l3007 2B20                         l3031 2F4C                         l2311 143C  
                       l2303 140A                         l3111 2C56                         l3103 2C1A  
                       l3009 2B2A                         l3201 3062                         l3033 2F5C  
                       l3025 2EE0                         l3041 2C68                         l2321 146E  
                       l2305 141A                         l2313 1444                         l3105 2C26  
                       l3121 30E4                         l3203 3076                         l3035 2F80  
                       l3027 2F0E                         l3051 2CF2                         l3043 2C96  
                       l2411 1646                         l2403 160E                         l2331 14A4  
                       l2323 1474                         l2315 1454                         l2307 142A  
                       l3019 32C6                         l3107 2C36                         l3123 30F2  
                       l3115 30BA                         l3131 2602                         l3211 08D4  
                       l3205 3086                         l3037 2F86                         l3029 2F1E  
                       l3053 2D04                         l3045 2CA6                         l2413 164A  
                       l2405 161E                         l2421 166A                         l2341 14E0  
                       l2333 14B4                         l2325 1482                         l2317 145A  
                       l2309 143A                         l3109 2C46                         l3125 3110  
                       l3117 30D0                         l3133 2612                         l2501 18BA  
                       l3301 0C74                         l3221 0928                         l3213 08E6  
                       l3207 3092                         l3055 2D12                         l3047 2CD4  
                       l3063 330C                         l2423 1690                         l2431 16E6  
                       l2415 1658                         l2407 162C                         l2351 14FE  
                       l2343 14EE                         l2335 14B6                         l2327 1484  
                       l2319 146C                         l3071 2B62                         l3127 3120  
                       l3119 30D8                         l3151 26D8                         l3143 2690  
                       l3135 2620                         l2511 18FA                         l2503 18C8  
                       l3311 0D46                         l3303 0CAE                         l3223 0932  
                       l3231 099A                         l3215 08F2                         l3057 2D62  
                       l3049 2CE4                         l3065 3322                         l2441 173A  
                       l2433 170C                         l2425 16C4                         l2417 165A  
                       l2409 163A                         l2361 1512                         l2353 1502  
                       l2345 14F2                         l2329 1494                         l2337 14BE  
                       l3081 2BB8                         l3073 2B78                         l3129 312A  
                       l3161 2758                         l3153 26E4                         l3145 2698  
                       l3137 2666                         l2601 1BFC                         l2521 192A  
                       l2513 1900                         l2505 18CA                         l3401 114E  
                       l3313 0D78                         l3305 0CCC                         l3241 0A10  
                       l3233 09B6                         l3225 094E                         l3217 08FA  
                       l3209 08C6                         l3059 2D68                         l3067 3332  
                       l2451 1764                         l2443 1748                         l2435 171C  
                       l2427 16C6                         l2419 1664                         l2371 1526  
                       l2363 1516                         l2355 1506                         l2347 14F6  
                       l2339 14CE                         l3083 2BC8                         l3171 27A0  
                       l3163 275A                         l3155 2720                         l3147 26A4  
                       l3139 267C                         l2611 1C66                         l2603 1C0A  
                       l2531 1962                         l2523 192C                         l2515 1910  
                       l2507 18DA                         l3411 11FA                         l3403 1182  
                       l3323 0DDA                         l3315 0D86                         l3307 0CFE  
                       l3243 0A14                         l3235 09BE                         l3227 0978  
                       l3219 090A                         l3181 321A                         l2461 1796  
                       l2453 1774                         l2445 174A                         l2429 16D6  
                       l2381 1578                         l2373 152A                         l2365 151A  
                       l2357 150A                         l2349 14FA                         l3093 2BF2  
                       l3085 2BCC                         l3077 2B8C                         l3173 27A2  
                       l3165 275E                         l3157 272C                         l3149 26D6  
                       l2621 1CBC                         l2613 1C80                         l2605 1C34  
                       l2541 19B2                         l2533 1982                         l2525 193C  
                       l2517 1916                         l2509 18EA                         l2701 2EBE  
                       l3421 1238                         l3413 1206                         l3405 1192  
                       l3341 0EA8                         l3317 0D90                         l3309 0D28  
                       l3325 0DF0                         l3261 0A9E                         l3253 0A4C  
                       l3237 09CA                         l3245 0A36                         l3229 097C  
                       l3501 2440                         l3183 321E                         l3191 33E8  
                       l2471 17F0                         l2463 17AC                         l2447 1758  
                       l2439 1730                         l2455 1776                         l2391 15BC  
                       l2383 1588                         l2367 151E                         l2359 150E  
                       l2375 152E                         l3095 2BFC                         l3087 2BDA  
                       l3079 2BB6                         l3167 2782                         l3159 273A  
                       l2615 1C9C                         l2623 1CC2                         l2607 1C38  
                       l2551 1A02                         l2543 19BC                         l2535 1992  
                       l2527 194C                         l2519 191C                         l2711 314A  
                       l2631 2D70                         l2703 2ECE                         l3431 12A2  
                       l3423 124E                         l3415 120A                         l3407 1196  
                       l3351 0F16                         l3343 0EBA                         l3335 0E6C  
                       l3327 0E5E                         l3319 0DA6                         l3271 0AF6  
                       l3263 0AB6                         l3255 0A76                         l3247 0A40  
                       l3239 09E6                         l3511 24BE                         l3503 2464  
                       l3185 3232                         l3193 33F0                         l3177 341A  
                       l2481 186C                         l2473 182A                         l2449 1760  
                       l2457 1784                         l2393 15BE                         l2385 159E  
                       l2377 1532                         l2369 1522                         l2297 13EE  
                       l3097 2C06                         l3169 2792                         l2625 1CC6  
                       l2617 1CAC                         l2609 1C52                         l2561 1A44  
                       l2553 1A0E                         l2545 19D2                         l2529 195C  
                       l2721 3180                         l2713 315C                         l2641 2DA0  
                       l2633 2D7E                         l2705 2ED6                         l2801 1EE8  
                       l3441 12EC                         l3433 12A8                         l3425 1252  
                       l3417 1210                         l3409 11E2                         l3361 0F62  
                       l3353 0F22                         l3345 0EE8                         l3329 0E68  
                       l3281 0B62                         l3273 0AFE                         l3265 0ABE  
                       l3257 0A88                         l3249 0A46                         l3521 259C  
                       l3513 24F0                         l3505 2470                         l3187 3262  
                       l3179 33FE                         l3195 33F8                         l2491 188C  
                       l2483 1870                         l2467 17D6                         l2475 182C  
                       l2459 1788                         l2395 15C8                         l2387 15AA  
                       l2379 155C                         l2299 13FA                         l2619 1CBA  
                       l2571 1AA6                         l2563 1A54                         l2555 1A1C  
                       l2547 19DE                         l2539 19A6                         l2723 3196  
                       l2715 3164                         l2731 31B6                         l2651 2DCE  
                       l2643 2DA4                         l2635 2D86                         l2811 2022  
                       l2803 1EFC                         l3451 134E                         l3443 130A  
                       l3435 12BA                         l3427 1276                         l3363 0F6E  
                       l3347 0EEE                         l3339 0EA6                         l3291 0BE0  
                       l3283 0B7E                         l3275 0B30                         l3267 0ACC  
                       l3259 0A96                         l3419 1226                         l3523 25C0  
                       l3515 2514                         l3507 24A2                         l3189 3264  
                       l3197 33FA                         l2493 189A                         l2485 187E  
                       l2477 183C                         l2469 17E2                         l2397 15EA  
                       l2389 15AE                         l2901 2950                         l2581 1B4E  
                       l2573 1AC2                         l2565 1A6E                         l2557 1A28  
                       l2549 19F6                         l2725 319E                         l2717 316C  
                       l2709 3142                         l2741 31FC                         l2733 31C8  
                       l2821 334A                         l2661 2E02                         l2653 2DDC  
                       l2645 2DAC                         l2637 2D8A                         l2629 2D6C  
                       l3461 1390                         l3453 1356                         l3445 1316  
                       l3437 12D8                         l3429 127E                         l3381 1036  
                       l3365 0F76                         l3373 100A                         l3349 0F0C  
                       l3357 0F2A                         l3293 0C12                         l3285 0B8E  
                       l3277 0B40                         l3269 0AF0                         l3525 25E4  
                       l3517 2546                         l3509 24B4                         l3199 302E  
                       l2751 338C                         l2495 189C                         l2487 1884  
                       l2479 184C                         l2399 15FA                         l2911 298C  
                       l2903 2960                         l2831 27B4                         l2591 1B8A  
                       l2583 1B58                         l2575 1AEC                         l2567 1A7E  
                       l2559 1A38                         l2727 31A0                         l2719 317A  
                       l2743 3204                         l2735 31D0                         l2823 335A  
                       l2663 2E08                         l2655 2DE2                         l2647 2DBE  
                       l2639 2D98                         l2815 20BA                         l3463 13AE  
                       l3455 1368                         l3447 131E                         l3439 12DE  
                       l3391 1090                         l3383 1050                         l3375 1020  
                       l3367 0FC2                         l3359 0F44                         l3295 0C1E  
                       l3287 0B94                         l3279 0B46                         l3519 256A  
                       l2753 3278                         l2489 1886                         l2921 29CA  
                       l2913 2990                         l2905 2972                         l2833 27D8  
                       l2593 1B98                         l2585 1B66                         l2577 1B22  
                       l2569 1A9A                         l2729 31A6                         l2745 320A  
                       l2737 31D8                         l2825 336A                         l2657 2DF8  
                       l2649 2DC6                         l2665 2E0E                         l2681 2E4E  
                       l2673 2E30                         l2809 200E                         l3457 1374  
                       l3449 1342                         l3393 109C                         l3385 106C  
                       l3377 102C                         l3369 0FF6                         l3297 0C50  
                       l3289 0BAC                         l3481 238E                         l2747 3378  
                       l2755 3284                         l2923 29D4                         l2915 299A  
                       l2907 2982                         l2851 2840                         l2843 2814  
                       l2595 1BC6                         l2587 1B78                         l2579 1B30  
                       l2499 18AE                         l2739 31E6                         l2771 2250  
                       l2763 20E6                         l2827 336E                         l2819 3346  
                       l2667 2E1E                         l2659 2E00                         l2691 2E86  
                       l2683 2E5C                         l2675 2E34                         l3459 1378  
                       l3395 10A0                         l3387 1078                         l3379 1030  
                       l3299 0C56                         l3467 13BE                         l3491 23B0  
                       l3483 2390                         l3475 2386                         l2749 337A  
                       l2757 3288                         l2933 2A00                         l2925 29DA  
                       l2917 29B8                         l2909 2986                         l2861 287E  
                       l2853 2844                         l2845 2816                         l2837 27EC  
                       l2589 1B86                         l2773 2260                         l2765 20F6  
                       l2669 2E26                         l2693 2E94                         l2685 2E64  
                       l2677 2E42                         l2781 1CDA                         l3397 10B6  
                       l3389 1080                         l3469 13E0                         l3493 23B8  
                       l3485 2392                         l3477 238A                         l2759 32B8  
                       l2943 2A28                         l2935 2A0A                         l2927 29E8  
                       l2919 29C8                         l2863 2888                         l2855 284A  
                       l2847 2824                         l2599 1BF0                         l2695 2EAA  
                       l2687 2E76                         l2679 2E4A                         l2791 1E10  
                       l2783 1CE8                         l3399 1102                         l3495 23BA  
                       l3487 2398                         l3479 238C                         l2961 2FC4  
                       l2953 2F8A                         l2945 2A34                         l2937 2A14  
                       l2873 28B4                         l2865 288E                         l2857 2858  
                       l2849 2830                         l2777 2338                         l2697 2EB2  
                       l2689 2E7E                         l2793 1E24                         l2785 1CFE  
                       l3497 23CA                         l3489 23A4                         l2971 300C  
                       l2963 2FD2                         l2955 2F9A                         l2947 339E  
                       l2883 28DC                         l2875 28BE                         l2867 289C  
                       l2859 2872                         l2699 2EB8                         l3499 23F4  
                       l2981 2A78                         l2973 3016                         l2965 2FDC  
                       l2957 2FB0                         l2949 33BA                         l2893 2934  
                       l2885 28E8                         l2877 28C8                         l2797 1EBC  
                       l2991 2AAE                         l2983 2A7C                         l2975 2A56  
                       l2967 2FFA                         l2959 2FB8                         l2887 290A  
                       l2993 2AC4                         l2985 2A8A                         l2977 2A5A  
                       l2969 300A                         l2889 2920                         l2995 2ACC  
                       l2987 2A9A                         l2979 2A68                         l2899 294E  
                       l2997 2AD8                         l2989 2A9E                         l2999 2AE6  
                       STR_1 0891                         STR_2 08AE                         _T0CS 007EAD  
                       u2000 146C                         u2001 1468                         u2010 1482  
                       u2011 147E                         u2100 15BC                         u2020 1494  
                       u2101 15B8                         u2021 1490                         u2110 15DC  
                       u2030 14A4                         u2111 15D8                         u2031 14A0  
                       u2200 171C                         u2120 15EA                         u2040 14E0  
                       u3000 2A44                         u2201 1718                         u2121 15E6  
                       u2041 14DC                         u3001 2A40                         u2210 1748  
                       u2130 15FA                         u2050 14EE                         u3010 2FB0  
                       u2211 1744                         u2131 15F6                         u2051 14EA  
                       u3011 2FAC                         _T0SE 007EAC                         u3100 2F0E  
                       u2300 182A                         u2220 1758                         u2140 162C  
                       u2060 155C                         u3020 2FD2                         u3101 2F0A  
                       u2301 1826                         u2221 1754                         u2141 1628  
                       u2061 1558                         u3021 2FCE                         u3110 2F4C  
                       u2310 183C                         u2230 1774                         u2150 163A  
                       u2070 1574                         u3030 2FFA                         u3111 2F48  
                       u2311 1838                         u2231 1770                         u2151 1636  
                       u2071 156E                         u3031 2FF6                         u3040 2A68  
                       u3120 2F80                         u2320 184C                         u2240 1784  
                       u2160 1658                         u2080 1576                         u3200 2BAC  
                       u2400 193C                         _LATD 000F8C                         u3041 2A64  
                       u3121 2F7C                         u2321 1848                         u2241 1780  
                       u2161 1654                         u2401 1938                         u3050 2A8A  
                       u3130 2C96                         u2330 186C                         u2250 1796  
                       u2170 1690                         u2090 159E                         u3210 2BDA  
                       u2410 194C                         u3051 2A86                         u3131 2C92  
                       u2331 1868                         u2251 1792                         u2171 168C  
                       u2091 159A                         u3211 2BD6                         u2411 1948  
                       u3060 2AC4                         u3140 2CD4                         u2340 187E  
                       u2260 17AC                         u2180 16D6                         u3220 2BEE  
                       u3300 2620                         u2500 1BF0                         u2420 1982  
                       u3061 2AC0                         u3141 2CD0                         u2341 187A  
                       u2261 17A8                         u2181 16D2                         u3221 2BEA  
                       u3205 2BA2                         u3301 261C                         u2501 1BEC  
                       u2421 197E                         u3070 2AE6                         u3150 2CF2  
                       u2350 189A                         u2270 17C2                         u2190 170C  
                       u3230 2C16                         u3310 267C                         u2510 1C0A  
                       u2430 1992                         u3071 2AE2                         u3151 2CEE  
                       u2351 1896                         u2271 17BE                         u2191 1708  
                       u3231 2C12                         u3311 2678                         u2511 1C06  
                       u2431 198E                         u3080 2B0E                         u3400 3276  
                       u3160 2D12                         u2280 17D6                         u3240 2C36  
                       u3320 26D2                         u2520 1C52                         u2440 1B0C  
                       u2360 18C8                         u2600 2E1E                         u3081 2B0A  
                       u3401 3272                         u3161 2D0E                         u2281 17D2  
                       u3241 2C32                         u3321 26CE                         u2521 1C4E  
                       u2361 18C4                         u2601 2E1A                         u3090 2B40  
                       u3410 30B8                         u3170 2D62                         u2290 17F0  
                       u3250 2C46                         u3330 271C                         u2530 1C80  
                       u2450 1B66                         u2370 18DA                         u2610 2E42  
                       u3091 2B3C                         u3411 30B4                         u3171 2D5E  
                       u2291 17EC                         u3251 2C42                         u3331 2718  
                       u2531 1C7C                         u2451 1B62                         u2371 18D6  
                       u2611 2E3E                         u3180 3322                         u3260 30D0  
                       u3340 273A                         u2540 1CBA                         u2460 1B86  
                       u2380 18EA                         u2700 31C8                         u2620 2E5C  
                       u3500 0B30                         u3420 08E6                         u3181 331E  
                       u3261 30CC                         u3341 2736                         u2541 1CB6  
                       u2461 1B82                         u2445 1B02                         u2381 18E6  
                       u2701 31C4                         u2621 2E58                         u3501 0B2C  
                       u3421 08E2                         u3190 2B78                         u3270 30F2  
                       u3350 274A                         u2470 1B98                         u2390 192A  
                       u2710 31E6                         u2550 2D7E                         u2630 2E76  
                       u3510 0B8E                         u3430 0928                         u3191 2B74  
                       u3271 30EE                         u3351 2746                         u2471 1B94  
                       u2391 1926                         u2711 31E2                         u2551 2D7A  
                       u2631 2E72                         u3511 0B8A                         u3431 0924  
                       u3280 3110                         u3360 2758                         u2480 1BC6  
                       u2720 31FC                         u2560 2D98                         u2640 2E94  
                       u2800 1E24                         u3600 0EA2                         u3520 0C12  
                       u3440 099A                         u3281 310C                         u3361 2754  
                       u2481 1BC2                         u2721 31F8                         u2561 2D94  
                       u2641 2E90                         u2801 1E20                         u3601 0E9E  
                       u3521 0C0E                         u3441 0996                         u2730 338C  
                       u3370 2792                         u3290 2612                         u2490 1BDC  
                       u2570 2DBE                         u2650 2EAA                         u2810 1EFC  
                       u3610 0EBA                         u3530 0C50                         u3450 09B6  
                       u2731 3388                         u3371 278E                         u3291 260E  
                       u2491 1BD8                         u2571 2DBA                         u2651 2EA6  
                       u2811 1EF8                         u3611 0EB6                         u3531 0C4C  
                       u3451 09B2                         u2740 32A8                         u3380 27A0  
                       u2900 289C                         u2580 2DDC                         u2660 2ECE  
                       u2820 2022                         u3700 11F6                         u3620 0EE8  
                       u3540 0C74                         u3460 0A32                         u3381 279C  
                       u2901 2898                         u2581 2DD8                         u2661 2ECA  
                       u2821 201E                         u3701 11F2                         u3621 0EE4  
                       u3541 0C70                         u3461 0A2E                         u2750 32B8  
                       u3390 325E                         u2910 28B0                         u2670 315C  
                       u2830 335A                         u2590 2DF8                         u3710 1222  
                       u3630 0F0C                         u3550 0CCC                         u3470 0A88  
                       u2751 32B4                         u2911 28AC                         u2671 3158  
                       u2831 3356                         u2591 2DF4                         u3711 121E  
                       u3631 0F08                         u3551 0CC8                         u3471 0A84  
                       u2920 28D8                         u2680 317A                         u2760 20F6  
                       u2840 336A                         u3800 1342                         u3720 1238  
                       u3640 0F44                         u3560 0CFE                         u3480 0A96  
                       u2921 28D4                         u2681 3176                         u2761 20F2  
                       u2841 3366                         u3801 133E                         u3721 1234  
                       u3641 0F40                         u3561 0CFA                         u3481 0A92  
                       u1970 1408                         u2930 28F8                         u2690 3196  
                       u2770 2260                         u3810 1368                         u3730 124E  
                       u3650 0F62                         u3570 0D28                         u3490 0ACC  
                       u2747 329E                         u1971 1404                         u2931 28F4  
                       u2851 27C4                         u2691 3192                         u2771 225C  
                       u3811 1364                         u3731 124A                         u3651 0F5E  
                       u3571 0D24                         u3491 0AC8                         _PEIE 007F96  
                       u1980 141A                         u2940 2920                         u2860 27D8  
                       u2780 1CE8                         u3820 1390                         u3740 1276  
                       u3660 101C                         u3580 0D46                         u3900 24F0  
                       u3397 3254                         u1981 1416                         u2941 291C  
                       u2861 27D4                         u2781 1CE4                         u3821 138C  
                       u3741 1272                         u3661 1018                         u3581 0D42  
                       u3901 24EC                         u1990 142A                         u2950 294A  
                       u2790 1CFE                         u3830 13AE                         u3750 12A2  
                       u3670 1050                         u3590 0D78                         u3910 2546  
                       u1991 1426                         u2951 2946                         u2871 27FC  
                       u2791 1CFA                         u3831 13AA                         u3751 129E  
                       u3671 104C                         u3591 0D74                         u3911 2542  
                       u2960 29B8                         u2880 2810                         u3840 13E0  
                       u3760 12BA                         u3680 106C                         u3920 259C  
                       u2961 29B4                         u2881 280C                         u3841 13DC  
                       u3761 12B6                         u3681 1068                         u3921 2598  
                       u2970 29E8                         u2890 2872                         u3770 12D8  
                       u3690 1090                         u3850 23DA                         u2971 29E4  
                       u2891 286E                         u3771 12D4                         u3691 108C  
                       u3851 23D6                         _RCIE 007CED                         u2980 29FC  
                       u3780 12EC                         u3860 23EA                         _RCIF 007CF5  
                       u2981 29F8                         u3781 12E8                         u3861 23E6  
                       u2990 2A24                         u3790 130A                         u3870 24A2  
                       u2991 2A20                         u3791 1306                         u3871 249E  
                       u3880 24B2                         u3881 24AC                         u3937 23C0  
                       u3947 3392                         u3957 307C                         u3895 24B4  
                       i2l84 3416                         _TMR0 000FD6                         _TXIE 007CEC  
                       _TXIF 007CF4                         _main 2386            _inicializa_Serial 33FE  
                       fsr0h 000FEA                         indf0 000FEF                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf2 000FDF                         fsr2l 000FD9  
                       btemp 005F                         prodh 000FF4                         prodl 000FF3  
                       start 000E           ?_inicializa_Serial 0001                 ___param_bank 000000  
        ??_inicializa_Serial 0001                ___fltol@sign1 0039              __end_of___aldiv 2B62  
            __end_of___fladd 18AE                        ?_main 0001              __end_of___awdiv 2E30  
            __end_of___flneg 3344              __end_of___awmod 2EE0              __end_of___flmul 1CD8  
            __end_of___flsub 330C              __end_of___fltol 2C68              __end_of___lldiv 302E  
            ___awdiv@divisor 0009              __end_of___llmod 3142                        _LATA3 007C4B  
            __end_of___lwdiv 31B6              __end_of___lwmod 321A              ___awdiv@counter 000B  
                      _RCREG 000FAE                        _RCSTA 000FAB                        _TMR0H 000FD7  
                      _TMR0L 000FD6                        _SPBRG 000FAF                        _TRISD 000F95  
                      _TXREG 000FAD                        _TXSTA 000FAC              __end_of_dpowers 0891  
                      _scale 1CD8              __end_of_isdigit 3376                        _tempo 00A1  
              ?_envia_serial 0001               __pbitbssCOMRAM 02F0    __end_of_inicializa_Serial 340C  
                      tablat 000FF5                        ttemp5 0060                        ttemp6 0063  
                      ttemp7 0067                        status 000FD8                        wtemp8 0060  
            __end_of_sprintf 13EE              __initialization 33C4                 __end_of_main 2600  
                     ??_main 0059                __activetblptr 000002         __size_of__tdiv_to_l_ 0156  
             ??_envia_serial 0001             ___llmod@dividend 0001                       ?_scale 0028  
                     _T08BIT 007EAE             ___awdiv@dividend 0007                       i2l3473 340E  
                     _OSCCON 000FD3                       _TMR0IF 007F92                       _TMR0ON 007EAF  
           __end_of___xxtofl 27B4                       _Serial 0008             __end_of__powers_ 0835  
                     ___flge 2C68                       ___fleq 2EE0                    ??___aldiv 0009  
                  ??___fladd 003D                       ___wmul 339E                    ??___awdiv 000B  
                  ??___flneg 0005                    ??___awmod 0005                    ??___flmul 0017  
                  ??___flsub 004D                    ??___fltol 0035                    ??___lldiv 0009  
                  ??___llmod 0009           _envia_texto_serial 321A                    ??___lwdiv 000A  
                  ??___lwmod 0005                       _linha1 0060                       _linha2 0081  
                     _fround 20E4                       clear_0 33CA             ___awdiv@quotient 000D  
            ___awmod@divisor 0003              ___awmod@counter 0005                       _strlen 3278  
        ?_envia_texto_serial 0005                    ??_isdigit 0001    envia_texto_serial@tamanho 0009  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                    ??_sprintf 0055   __size_of_inicializa_Serial 000E  
                 ___flge@ff1 0001                   ___flge@ff2 0005                 ___xxtofl@arg 000B  
               ___xxtofl@exp 000A                 ___xxtofl@val 0001                   ___fleq@ff1 0001  
                 ___fleq@ff2 0005                   __accesstop 0060      __end_of__initialization 33DA  
                 ___flneg@f1 0001                   _SuperDelay 302E         ??_envia_texto_serial 0007  
              ___rparam_used 000001                   ___fltol@f1 0031               __pcstackCOMRAM 0001  
              __end_of_scale 20E4                   __div_to_l_ 290A              __div_to_l_@exp1 000E  
            __div_to_l_@cntr 000D                      ??_scale 002C              __div_to_l_@quot 0009  
               sprintf@width 00AF                   __pbssBANK0 0060                __div_to_l_@f1 0001  
              __div_to_l_@f2 0005                      ?_Serial 0001                      ?___flge 0001  
                    ?___fleq 0001                      ?___wmul 0001         __end_of_envia_serial 339E  
                    ?_fround 0028                      ?_strlen 0001            envia_serial@valor 0002  
                  ?___xxtofl 0001           __size_of_setupTmr0 0016           __size_of_setup_Int 000A  
                ?_SuperDelay 000F            __end_of__npowers_ 0869                      __Hparam 0000  
                    __Lparam 0000             _flag_interrupcao 02F0              __size_of_Serial 3412  
                    ___aldiv 2A56              __size_of___flge 0104              __size_of___fleq 00AA  
                    ___fladd 13EE                      ___awdiv 2D6C                      ___flneg 330C  
                    ___awmod 2E30                      ___flmul 18AE                      ___flsub 32C6  
                    ___fltol 2B62                      ___lldiv 2F8A              __size_of___wmul 0026  
                    ___llmod 30BA                      ___lwdiv 3142                   _fround$980 0030  
                 _fround$981 002C                      ___lwmod 31B6                 __psmallconst 0800  
                    __pcinit 33C4              __size_of_fround 02A2                      __ramtop 0800  
                    __ptext0 2386                      __ptext1 08C6                      __ptext2 1CD8  
                    __ptext3 2E30                      __ptext4 2D6C                      __ptext5 3344  
                    __ptext6 20E4                      __ptext7 31B6                      __ptext8 3142  
                    __ptext9 18AE              __size_of_strlen 004E                  ?__div_to_l_ 0001  
                    _dpowers 0869                      _isdigit 3344                   ??___xxtofl 0005  
           ___awmod@dividend 0001             ___aldiv@dividend 0001                      _sprintf 08C6  
             __pintcode_body 340C         end_of_initialization 33DA                __Lmediumconst 0000  
                    int_func 340C              ___lldiv@divisor 0005              ___lldiv@counter 000D  
          __end_of_setupTmr0 33FE            __end_of_setup_Int 3424             ___aldiv@quotient 000B  
                    postinc0 000FEE                      postinc2 000FDE               __tdiv_to_l_@f1 0001  
             __tdiv_to_l_@f2 0005                      strlen@s 0001                ??__tdiv_to_l_ 0009  
        __size_of_SuperDelay 008C                  ___fladd@grs 0044                ___xxtofl@sign 0009  
                  _TRISAbits 000F92                    _TRISBbits 000F93                    _TRISCbits 000F94  
                ___flmul@grs 001C          __size_of__div_to_l_ 014C        __size_of_envia_serial 0028  
             __end_of_Serial 341A               __end_of___flge 2D6C               __end_of___fleq 2F8A  
             __end_of___wmul 33C4               __end_of_fround 2386               __end_of_strlen 32C6  
        start_initialization 33C4          __end_of__tdiv_to_l_ 290A                 _envia_serial 3376  
                SuperDelay@i 0014              ___llmod@divisor 0005              ___llmod@counter 0009  
__size_of_envia_texto_serial 005E            SuperDelay@counter 000F                     ??_Serial 0001  
                   ??___flge 0009                     ??___fleq 0009                     ??___wmul 0005  
                   ??_fround 002C                sprintf@tmpval 00B1                     ??_strlen 0003  
                  ___fladd@a 0039                    ___fladd@b 0035                   fround@prec 0034  
                  ___flmul@a 0013                    ___flmul@b 000F                  __pbssCOMRAM 005A  
                  ___flsub@a 0049                    ___flsub@b 0045                __pcstackBANK0 00A3  
          __size_of___xxtofl 01B4                  sprintf@flag 00AD                  sprintf@eexp 00B5  
                sprintf@fval 00B7                  sprintf@prec 00BB                 ??_SuperDelay 0013  
           ___lwdiv@dividend 0006                    __pintcode 0008                     ?___aldiv 0001  
                   ?___fladd 0035                     ?___awdiv 0007                     ?___flneg 0001  
                   ?___awmod 0001                     ?___flmul 000F                     ?___flsub 0045  
                   ?___fltol 0031                     ?___lldiv 0001                     ?___llmod 0001  
                  __npowers_ 0835                     ?___lwdiv 0006                     ?___lwmod 0001  
                __tdiv_to_l_ 27B4                    _distancia 005A                 ??__div_to_l_ 0009  
                __smallconst 0800                     ?_isdigit 0001           __end_of_SuperDelay 30BA  
                  _scale$982 002C             ___lwdiv@quotient 000A                     ?_sprintf 004D  
             __size_of_scale 040C              ___aldiv@divisor 0005              ___aldiv@counter 0009  
             ___wmul@product 0005                     _LATBbits 000F8A           __end_of__div_to_l_ 2A56  
                  _setupTmr0 33E8                    _setup_Int 341A            ___wmul@multiplier 0001  
                   __Hrparam 0000                     __Lrparam 0000                   ?_setupTmr0 0001  
                 ?_setup_Int 0001             __size_of___aldiv 010C             __size_of___fladd 04C0  
           __size_of___awdiv 00C4             __size_of___flneg 0038             __size_of___awmod 00B0  
           __size_of___flmul 042A             __size_of___flsub 0046             __size_of___fltol 0106  
           __size_of___lldiv 00A4             __size_of___llmod 0088             __size_of___lwdiv 0074  
           __size_of___lwmod 0064     envia_texto_serial@indice 000A                  _isdigit$786 0002  
                 sprintf@val 00A9                     _caracter 0080                     ___xxtofl 2600  
           __size_of_isdigit 0032              ___lwdiv@divisor 0008              ___lwdiv@counter 000C  
                   __ptext10 27B4                     __ptext11 290A                     __ptext20 2C68  
                   __ptext12 2600                     __ptext21 2EE0                     __ptext13 339E  
                   __ptext22 341A                     __ptext14 30BA                     __ptext23 33E8  
                   __ptext15 2F8A                     __ptext24 33FE                     __ptext16 2B62  
                   __ptext25 321A                     __ptext17 32C6                     __ptext26 3278  
                   __ptext18 13EE                     __ptext27 3376                     __ptext19 330C  
                   __ptext28 302E                     __ptext29 2A56                     __powers_ 0801  
           __size_of_sprintf 0B28                __size_of_main 027A                     int$flags 005F  
                   isdigit@c 0003                     scale@scl 0030      envia_texto_serial@frase 0005  
                   intlevel2 0000                    sprintf@ap 00A7             __tdiv_to_l_@exp1 0011  
                  sprintf@sp 004D             __tdiv_to_l_@cntr 0010             __tdiv_to_l_@quot 000C  
 __end_of_envia_texto_serial 3278             ___lwmod@dividend 0001             ___lldiv@dividend 0001  
                ??_setupTmr0 0001                  ??_setup_Int 0001                 ?__tdiv_to_l_ 0001  
                   sprintf@c 00BD                     sprintf@f 004F             ___lldiv@quotient 0009  
            ___lwmod@divisor 0003                     strlen@cp 0003              ___lwmod@counter 0005  
               ___aldiv@sign 000A                ___fladd@signs 0041                 ___fladd@aexp 0042  
               ___fladd@bexp 0043  
